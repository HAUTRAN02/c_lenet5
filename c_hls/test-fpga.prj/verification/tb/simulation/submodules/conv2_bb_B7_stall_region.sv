// ------------------------------------------------------------------------- 
// High Level Design Compiler for Intel(R) FPGAs Version 21.4 (Release Build #53.1)
// 
// Legal Notice: Copyright 2021 Intel Corporation.  All rights reserved.
// Your use of  Intel Corporation's design tools,  logic functions and other
// software and  tools, and its AMPP partner logic functions, and any output
// files any  of the foregoing (including  device programming  or simulation
// files), and  any associated  documentation  or information  are expressly
// subject  to the terms and  conditions of the  Intel FPGA Software License
// Agreement, Intel MegaCore Function License Agreement, or other applicable
// license agreement,  including,  without limitation,  that your use is for
// the  sole  purpose of  programming  logic devices  manufactured by  Intel
// and  sold by Intel  or its authorized  distributors. Please refer  to the
// applicable agreement for further details.
// ---------------------------------------------------------------------------

// SystemVerilog created from bb_conv2_B7_stall_region
// Created for function/kernel conv2
// SystemVerilog created on Sat Apr  1 13:10:46 2023


(* altera_attribute = "-name AUTO_SHIFT_REGISTER_RECOGNITION OFF; -name MESSAGE_DISABLE 10036; -name MESSAGE_DISABLE 10037; -name MESSAGE_DISABLE 14130; -name MESSAGE_DISABLE 14320; -name MESSAGE_DISABLE 15400; -name MESSAGE_DISABLE 14130; -name MESSAGE_DISABLE 10036; -name MESSAGE_DISABLE 12020; -name MESSAGE_DISABLE 12030; -name MESSAGE_DISABLE 12010; -name MESSAGE_DISABLE 12110; -name MESSAGE_DISABLE 14320; -name MESSAGE_DISABLE 13410; -name MESSAGE_DISABLE 113007; -name MESSAGE_DISABLE 10958" *)
module conv2_bb_B7_stall_region (
    input wire [63:0] in_unnamed_conv29_conv2_avm_readdata,
    input wire [0:0] in_unnamed_conv29_conv2_avm_writeack,
    input wire [0:0] in_unnamed_conv29_conv2_avm_waitrequest,
    input wire [0:0] in_unnamed_conv29_conv2_avm_readdatavalid,
    output wire [63:0] out_unnamed_conv28_conv2_avm_address,
    output wire [0:0] out_unnamed_conv28_conv2_avm_enable,
    output wire [0:0] out_unnamed_conv28_conv2_avm_read,
    output wire [0:0] out_unnamed_conv28_conv2_avm_write,
    output wire [63:0] out_unnamed_conv28_conv2_avm_writedata,
    output wire [7:0] out_unnamed_conv28_conv2_avm_byteenable,
    output wire [0:0] out_unnamed_conv28_conv2_avm_burstcount,
    output wire [0:0] out_exitcond19137_pop104,
    output wire [0:0] out_exitcond22128_pop97,
    output wire [0:0] out_exitcond25119_pop94,
    output wire [0:0] out_exitcond2891_pop86,
    output wire [0:0] out_exitcond3171_pop82,
    output wire [0:0] out_masked,
    output wire [0:0] out_memdep,
    output wire [0:0] out_notcmp36138_pop105,
    output wire [0:0] out_notcmp41130_pop98,
    output wire [0:0] out_notcmp46122_pop95,
    output wire [0:0] out_notcmp5195_pop87,
    output wire [0:0] out_notcmp5676_pop83,
    output wire [0:0] out_valid_out,
    input wire [63:0] in_pn1_conv2_avm_readdata,
    input wire [0:0] in_pn1_conv2_avm_writeack,
    input wire [0:0] in_pn1_conv2_avm_waitrequest,
    input wire [0:0] in_pn1_conv2_avm_readdatavalid,
    output wire [63:0] out_unnamed_conv29_conv2_avm_address,
    output wire [0:0] out_unnamed_conv29_conv2_avm_enable,
    output wire [0:0] out_unnamed_conv29_conv2_avm_read,
    output wire [0:0] out_unnamed_conv29_conv2_avm_write,
    output wire [63:0] out_unnamed_conv29_conv2_avm_writedata,
    output wire [7:0] out_unnamed_conv29_conv2_avm_byteenable,
    output wire [0:0] out_unnamed_conv29_conv2_avm_burstcount,
    input wire [63:0] in_memdep_conv2_avm_readdata,
    input wire [0:0] in_memdep_conv2_avm_writeack,
    input wire [0:0] in_memdep_conv2_avm_waitrequest,
    input wire [0:0] in_memdep_conv2_avm_readdatavalid,
    output wire [63:0] out_pn1_conv2_avm_address,
    output wire [0:0] out_pn1_conv2_avm_enable,
    output wire [0:0] out_pn1_conv2_avm_read,
    output wire [0:0] out_pn1_conv2_avm_write,
    output wire [63:0] out_pn1_conv2_avm_writedata,
    output wire [7:0] out_pn1_conv2_avm_byteenable,
    output wire [0:0] out_pn1_conv2_avm_burstcount,
    output wire [63:0] out_memdep_conv2_avm_address,
    output wire [0:0] out_memdep_conv2_avm_enable,
    output wire [0:0] out_memdep_conv2_avm_read,
    output wire [0:0] out_memdep_conv2_avm_write,
    output wire [63:0] out_memdep_conv2_avm_writedata,
    output wire [7:0] out_memdep_conv2_avm_byteenable,
    output wire [0:0] out_memdep_conv2_avm_burstcount,
    output wire [0:0] out_lsu_memdep_o_active,
    input wire [63:0] in_unnamed_conv28_conv2_avm_readdata,
    input wire [0:0] in_unnamed_conv28_conv2_avm_writeack,
    input wire [0:0] in_unnamed_conv28_conv2_avm_waitrequest,
    input wire [0:0] in_unnamed_conv28_conv2_avm_readdatavalid,
    output wire [0:0] out_aclp_to_limiter_i_llvm_fpga_pipeline_keep_going_conv23_exiting_valid_out,
    output wire [0:0] out_aclp_to_limiter_i_llvm_fpga_pipeline_keep_going_conv23_exiting_stall_out,
    input wire [0:0] in_pipeline_stall_in,
    output wire [0:0] out_pipeline_valid_out,
    input wire [0:0] in_flush,
    input wire [63:0] in_intel_reserved_ffwd_0_0,
    input wire [63:0] in_intel_reserved_ffwd_1_0,
    input wire [0:0] in_stall_in,
    output wire [0:0] out_stall_out,
    input wire [31:0] in_add367,
    input wire [63:0] in_arrayidx34109_pop67379,
    input wire [63:0] in_arrayidx64115_pop69381,
    input wire [31:0] in_channel_039_pop1780_pop60373,
    input wire [31:0] in_col_037_pop27112_pop68380,
    input wire [0:0] in_exitcond19368,
    input wire [0:0] in_exitcond22127_pop73385,
    input wire [0:0] in_exitcond25118_pop70382,
    input wire [0:0] in_exitcond2890_pop62375,
    input wire [0:0] in_exitcond3170_pop58371,
    input wire [0:0] in_forked,
    input wire [31:0] in_i_035_pop56364,
    input wire [63:0] in_idxprom25106_pop66378,
    input wire [31:0] in_k_036_pop38131_pop75365,
    input wire [0:0] in_memdep_phi2_pop57370,
    input wire [0:0] in_memdep_phi3_pop39133_pop76387,
    input wire [0:0] in_memdep_phi4_pop28124_pop72384,
    input wire [0:0] in_memdep_phi5_pop21102_pop65377,
    input wire [0:0] in_memdep_phi6_pop1885_pop61374,
    input wire [0:0] in_notcmp36369,
    input wire [0:0] in_notcmp41129_pop74386,
    input wire [0:0] in_notcmp46121_pop71383,
    input wire [0:0] in_notcmp5194_pop63376,
    input wire [0:0] in_notcmp5675_pop59372,
    input wire [31:0] in_row_038_pop2098_pop64366,
    input wire [31:0] in_unnamed_conv27,
    input wire [0:0] in_valid_in,
    input wire clock,
    input wire resetn
    );

    wire [0:0] GND_q;
    wire [0:0] VCC_q;
    wire [3:0] bgTrunc_i_fpga_indvars_iv_next_conv240_sel_x_b;
    wire [31:0] bgTrunc_i_inc_conv237_sel_x_b;
    wire [31:0] c_i32_0104_recast_x_q;
    wire [0:0] conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl;
    wire [31:0] conv2_B7_merge_reg_aunroll_x_out_data_out_1_tpl;
    wire [31:0] conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl;
    wire [31:0] conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl;
    wire [31:0] conv2_B7_merge_reg_aunroll_x_out_data_out_4_tpl;
    wire [31:0] conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl;
    wire [0:0] conv2_B7_merge_reg_aunroll_x_out_data_out_6_tpl;
    wire [0:0] conv2_B7_merge_reg_aunroll_x_out_data_out_7_tpl;
    wire [0:0] conv2_B7_merge_reg_aunroll_x_out_data_out_8_tpl;
    wire [0:0] conv2_B7_merge_reg_aunroll_x_out_data_out_9_tpl;
    wire [0:0] conv2_B7_merge_reg_aunroll_x_out_data_out_10_tpl;
    wire [31:0] conv2_B7_merge_reg_aunroll_x_out_data_out_11_tpl;
    wire [0:0] conv2_B7_merge_reg_aunroll_x_out_data_out_12_tpl;
    wire [0:0] conv2_B7_merge_reg_aunroll_x_out_data_out_13_tpl;
    wire [0:0] conv2_B7_merge_reg_aunroll_x_out_data_out_14_tpl;
    wire [0:0] conv2_B7_merge_reg_aunroll_x_out_data_out_15_tpl;
    wire [63:0] conv2_B7_merge_reg_aunroll_x_out_data_out_16_tpl;
    wire [63:0] conv2_B7_merge_reg_aunroll_x_out_data_out_17_tpl;
    wire [31:0] conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl;
    wire [63:0] conv2_B7_merge_reg_aunroll_x_out_data_out_19_tpl;
    wire [0:0] conv2_B7_merge_reg_aunroll_x_out_data_out_20_tpl;
    wire [0:0] conv2_B7_merge_reg_aunroll_x_out_data_out_21_tpl;
    wire [0:0] conv2_B7_merge_reg_aunroll_x_out_data_out_22_tpl;
    wire [0:0] conv2_B7_merge_reg_aunroll_x_out_data_out_23_tpl;
    wire [0:0] conv2_B7_merge_reg_aunroll_x_out_data_out_24_tpl;
    wire [0:0] conv2_B7_merge_reg_aunroll_x_out_data_out_25_tpl;
    wire [0:0] conv2_B7_merge_reg_aunroll_x_out_stall_out;
    wire [0:0] conv2_B7_merge_reg_aunroll_x_out_valid_out;
    wire [63:0] i_arrayidx24_conv20_dupName_4_trunc_sel_x_b;
    wire [1:0] i_arrayidx24_conv20_c_i2_03_x_q;
    wire [63:0] i_arrayidx32_conv20_dupName_6_trunc_sel_x_b;
    wire [0:0] i_first_cleanup_conv233_sel_x_b;
    wire [63:0] i_idxprom20_conv249_sel_x_b;
    wire [63:0] i_idxprom29_conv242_sel_x_b;
    wire [63:0] i_idxprom_conv244_sel_x_b;
    wire [0:0] i_last_initeration_conv275_sel_x_b;
    wire [31:0] i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_out_c0_exit715_1_tpl;
    wire [0:0] i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_out_o_stall;
    wire [0:0] i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_out_o_valid;
    wire [1:0] c_i2_1102_q;
    wire [31:0] c_i32_1106_q;
    wire [3:0] c_i4_1108_q;
    wire [3:0] c_i4_3105_q;
    wire [32:0] i_add22_conv263_a;
    wire [32:0] i_add22_conv263_b;
    logic [32:0] i_add22_conv263_o;
    wire [32:0] i_add22_conv263_q;
    wire [0:0] i_arrayidx34_arrayidx64_conv288_s;
    reg [63:0] i_arrayidx34_arrayidx64_conv288_q;
    wire [1:0] i_cleanups_shl_conv234_vt_join_q;
    wire [0:0] i_cleanups_shl_conv234_vt_select_1_b;
    wire [0:0] i_first_cleanup_xor_conv273_q;
    wire [4:0] i_fpga_indvars_iv_next_conv240_a;
    wire [4:0] i_fpga_indvars_iv_next_conv240_b;
    logic [4:0] i_fpga_indvars_iv_next_conv240_o;
    wire [4:0] i_fpga_indvars_iv_next_conv240_q;
    wire [63:0] i_idxprom20_conv249_vt_join_q;
    wire [31:0] i_idxprom20_conv249_vt_select_31_b;
    wire [63:0] i_idxprom29_conv242_vt_join_q;
    wire [31:0] i_idxprom29_conv242_vt_select_31_b;
    wire [63:0] i_idxprom_conv244_vt_join_q;
    wire [31:0] i_idxprom_conv244_vt_select_31_b;
    wire [32:0] i_inc_conv237_a;
    wire [32:0] i_inc_conv237_b;
    logic [32:0] i_inc_conv237_o;
    wire [32:0] i_inc_conv237_q;
    wire [63:0] i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_out_dest_data_out_0_0;
    wire [0:0] i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_out_stall_out;
    wire [0:0] i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_out_valid_out;
    wire [63:0] i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_out_dest_data_out_1_0;
    wire [0:0] i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_out_stall_out;
    wire [0:0] i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_out_valid_out;
    wire [0:0] i_llvm_fpga_mem_memdep_conv2100_out_lsu_memdep_o_active;
    wire [63:0] i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_address;
    wire [0:0] i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_burstcount;
    wire [7:0] i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_byteenable;
    wire [0:0] i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_enable;
    wire [0:0] i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_read;
    wire [0:0] i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_write;
    wire [63:0] i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_writedata;
    wire [0:0] i_llvm_fpga_mem_memdep_conv2100_out_o_stall;
    wire [0:0] i_llvm_fpga_mem_memdep_conv2100_out_o_valid;
    wire [0:0] i_llvm_fpga_mem_memdep_conv2100_out_o_writeack;
    wire [31:0] i_llvm_fpga_mem_pn1_conv296_out_o_readdata;
    wire [0:0] i_llvm_fpga_mem_pn1_conv296_out_o_stall;
    wire [0:0] i_llvm_fpga_mem_pn1_conv296_out_o_valid;
    wire [63:0] i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_address;
    wire [0:0] i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_burstcount;
    wire [7:0] i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_byteenable;
    wire [0:0] i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_enable;
    wire [0:0] i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_read;
    wire [0:0] i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_write;
    wire [63:0] i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_writedata;
    wire [31:0] i_llvm_fpga_mem_unnamed_conv28_conv294_out_o_readdata;
    wire [0:0] i_llvm_fpga_mem_unnamed_conv28_conv294_out_o_stall;
    wire [0:0] i_llvm_fpga_mem_unnamed_conv28_conv294_out_o_valid;
    wire [63:0] i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_address;
    wire [0:0] i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_burstcount;
    wire [7:0] i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_byteenable;
    wire [0:0] i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_enable;
    wire [0:0] i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_read;
    wire [0:0] i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_write;
    wire [63:0] i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_writedata;
    wire [31:0] i_llvm_fpga_mem_unnamed_conv29_conv295_out_o_readdata;
    wire [0:0] i_llvm_fpga_mem_unnamed_conv29_conv295_out_o_stall;
    wire [0:0] i_llvm_fpga_mem_unnamed_conv29_conv295_out_o_valid;
    wire [63:0] i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_address;
    wire [0:0] i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_burstcount;
    wire [7:0] i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_byteenable;
    wire [0:0] i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_enable;
    wire [0:0] i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_read;
    wire [0:0] i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_write;
    wire [63:0] i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_writedata;
    wire [0:0] i_llvm_fpga_pipeline_keep_going_conv23_out_data_out;
    wire [0:0] i_llvm_fpga_pipeline_keep_going_conv23_out_exiting_stall_out;
    wire [0:0] i_llvm_fpga_pipeline_keep_going_conv23_out_exiting_valid_out;
    wire [0:0] i_llvm_fpga_pipeline_keep_going_conv23_out_initeration_stall_out;
    wire [0:0] i_llvm_fpga_pipeline_keep_going_conv23_out_not_exitcond_stall_out;
    wire [0:0] i_llvm_fpga_pipeline_keep_going_conv23_out_pipeline_valid_out;
    wire [0:0] i_llvm_fpga_pipeline_keep_going_conv23_out_stall_out;
    wire [0:0] i_llvm_fpga_pipeline_keep_going_conv23_out_valid_out;
    wire [0:0] i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_out_feedback_stall_out_104;
    wire [0:0] i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_out_valid_out;
    wire [0:0] i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_out_feedback_stall_out_97;
    wire [0:0] i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_out_valid_out;
    wire [0:0] i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_out_feedback_stall_out_94;
    wire [0:0] i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_out_valid_out;
    wire [0:0] i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_out_feedback_stall_out_86;
    wire [0:0] i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_out_valid_out;
    wire [0:0] i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_out_feedback_stall_out_82;
    wire [0:0] i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_out_valid_out;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_feedback_stall_out_106;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_valid_out;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_feedback_stall_out_100;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_valid_out;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_feedback_stall_out_96;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_valid_out;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_feedback_stall_out_89;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_valid_out;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_feedback_stall_out_85;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_valid_out;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_out_feedback_stall_out_79;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_out_valid_out;
    wire [0:0] i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_out_feedback_stall_out_105;
    wire [0:0] i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_out_valid_out;
    wire [0:0] i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_out_feedback_stall_out_98;
    wire [0:0] i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_out_valid_out;
    wire [0:0] i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_out_feedback_stall_out_95;
    wire [0:0] i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_out_valid_out;
    wire [0:0] i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_out_feedback_stall_out_87;
    wire [0:0] i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_out_valid_out;
    wire [0:0] i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_out_feedback_stall_out_83;
    wire [0:0] i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_out_valid_out;
    wire [1:0] i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_feedback_stall_out_81;
    wire [0:0] i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_valid_out;
    wire [1:0] i_llvm_fpga_pop_i2_initerations_pop80_conv24_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i2_initerations_pop80_conv24_out_feedback_stall_out_80;
    wire [0:0] i_llvm_fpga_pop_i2_initerations_pop80_conv24_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i2_initerations_pop80_conv24_out_valid_out;
    wire [31:0] i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i32_add136_pop103_conv212_out_feedback_stall_out_103;
    wire [0:0] i_llvm_fpga_pop_i32_add136_pop103_conv212_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i32_add136_pop103_conv212_out_valid_out;
    wire [31:0] i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_out_feedback_stall_out_84;
    wire [0:0] i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_out_valid_out;
    wire [31:0] i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_feedback_stall_out_92;
    wire [0:0] i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_valid_out;
    wire [31:0] i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_feedback_stall_out_101;
    wire [0:0] i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_valid_out;
    wire [31:0] i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_feedback_stall_out_78;
    wire [0:0] i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_valid_out;
    wire [31:0] i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_feedback_stall_out_99;
    wire [0:0] i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_valid_out;
    wire [31:0] i_llvm_fpga_pop_i32_pop102_conv210_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i32_pop102_conv210_out_feedback_stall_out_102;
    wire [0:0] i_llvm_fpga_pop_i32_pop102_conv210_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i32_pop102_conv210_out_valid_out;
    wire [31:0] i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_out_feedback_stall_out_88;
    wire [0:0] i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_out_valid_out;
    wire [3:0] i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_out_feedback_stall_out_77;
    wire [0:0] i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_out_valid_out;
    wire [63:0] i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out;
    wire [0:0] i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_feedback_stall_out_90;
    wire [0:0] i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_valid_out;
    wire [63:0] i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out;
    wire [0:0] i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_feedback_stall_out_91;
    wire [0:0] i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_valid_out;
    wire [63:0] i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out;
    wire [0:0] i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_feedback_stall_out_93;
    wire [0:0] i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_stall_out;
    wire [0:0] i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_valid_out;
    wire [0:0] i_llvm_fpga_push_i1_exitcond19137_push104_conv250_out_feedback_out_104;
    wire [0:0] i_llvm_fpga_push_i1_exitcond19137_push104_conv250_out_feedback_valid_out_104;
    wire [0:0] i_llvm_fpga_push_i1_exitcond19137_push104_conv250_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i1_exitcond19137_push104_conv250_out_valid_out;
    wire [0:0] i_llvm_fpga_push_i1_exitcond22128_push97_conv269_out_feedback_out_97;
    wire [0:0] i_llvm_fpga_push_i1_exitcond22128_push97_conv269_out_feedback_valid_out_97;
    wire [0:0] i_llvm_fpga_push_i1_exitcond22128_push97_conv269_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i1_exitcond22128_push97_conv269_out_valid_out;
    wire [0:0] i_llvm_fpga_push_i1_exitcond25119_push94_conv265_out_feedback_out_94;
    wire [0:0] i_llvm_fpga_push_i1_exitcond25119_push94_conv265_out_feedback_valid_out_94;
    wire [0:0] i_llvm_fpga_push_i1_exitcond25119_push94_conv265_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i1_exitcond25119_push94_conv265_out_valid_out;
    wire [0:0] i_llvm_fpga_push_i1_exitcond2891_push86_conv257_out_feedback_out_86;
    wire [0:0] i_llvm_fpga_push_i1_exitcond2891_push86_conv257_out_feedback_valid_out_86;
    wire [0:0] i_llvm_fpga_push_i1_exitcond2891_push86_conv257_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i1_exitcond2891_push86_conv257_out_valid_out;
    wire [0:0] i_llvm_fpga_push_i1_exitcond3171_push82_conv253_out_feedback_out_82;
    wire [0:0] i_llvm_fpga_push_i1_exitcond3171_push82_conv253_out_feedback_valid_out_82;
    wire [0:0] i_llvm_fpga_push_i1_exitcond3171_push82_conv253_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i1_exitcond3171_push82_conv253_out_valid_out;
    wire [0:0] i_llvm_fpga_push_i1_lastiniteration_conv285_out_feedback_out_2;
    wire [0:0] i_llvm_fpga_push_i1_lastiniteration_conv285_out_feedback_valid_out_2;
    wire [0:0] i_llvm_fpga_push_i1_lastiniteration_conv285_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i1_lastiniteration_conv285_out_valid_out;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_conv252_out_feedback_out_106;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_conv252_out_feedback_valid_out_106;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_conv252_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_conv252_out_valid_out;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_conv271_out_feedback_out_100;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_conv271_out_feedback_valid_out_100;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_conv271_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_conv271_out_valid_out;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_conv267_out_feedback_out_96;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_conv267_out_feedback_valid_out_96;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_conv267_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_conv267_out_valid_out;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_conv259_out_feedback_out_89;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_conv259_out_feedback_valid_out_89;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_conv259_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_conv259_out_valid_out;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_conv256_out_feedback_out_85;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_conv256_out_feedback_valid_out_85;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_conv256_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_conv256_out_valid_out;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_out_feedback_out_79;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_out_feedback_valid_out_79;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_out_valid_out;
    wire [0:0] i_llvm_fpga_push_i1_notcmp36138_push105_conv251_out_feedback_out_105;
    wire [0:0] i_llvm_fpga_push_i1_notcmp36138_push105_conv251_out_feedback_valid_out_105;
    wire [0:0] i_llvm_fpga_push_i1_notcmp36138_push105_conv251_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i1_notcmp36138_push105_conv251_out_valid_out;
    wire [0:0] i_llvm_fpga_push_i1_notcmp41130_push98_conv270_out_feedback_out_98;
    wire [0:0] i_llvm_fpga_push_i1_notcmp41130_push98_conv270_out_feedback_valid_out_98;
    wire [0:0] i_llvm_fpga_push_i1_notcmp41130_push98_conv270_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i1_notcmp41130_push98_conv270_out_valid_out;
    wire [0:0] i_llvm_fpga_push_i1_notcmp46122_push95_conv266_out_feedback_out_95;
    wire [0:0] i_llvm_fpga_push_i1_notcmp46122_push95_conv266_out_feedback_valid_out_95;
    wire [0:0] i_llvm_fpga_push_i1_notcmp46122_push95_conv266_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i1_notcmp46122_push95_conv266_out_valid_out;
    wire [0:0] i_llvm_fpga_push_i1_notcmp5195_push87_conv258_out_feedback_out_87;
    wire [0:0] i_llvm_fpga_push_i1_notcmp5195_push87_conv258_out_feedback_valid_out_87;
    wire [0:0] i_llvm_fpga_push_i1_notcmp5195_push87_conv258_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i1_notcmp5195_push87_conv258_out_valid_out;
    wire [0:0] i_llvm_fpga_push_i1_notcmp5676_push83_conv254_out_feedback_out_83;
    wire [0:0] i_llvm_fpga_push_i1_notcmp5676_push83_conv254_out_feedback_valid_out_83;
    wire [0:0] i_llvm_fpga_push_i1_notcmp5676_push83_conv254_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i1_notcmp5676_push83_conv254_out_valid_out;
    wire [0:0] i_llvm_fpga_push_i1_notexitcond_conv278_out_feedback_out_3;
    wire [0:0] i_llvm_fpga_push_i1_notexitcond_conv278_out_feedback_valid_out_3;
    wire [0:0] i_llvm_fpga_push_i1_notexitcond_conv278_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i1_notexitcond_conv278_out_valid_out;
    wire [7:0] i_llvm_fpga_push_i2_cleanups_push81_conv293_out_feedback_out_81;
    wire [0:0] i_llvm_fpga_push_i2_cleanups_push81_conv293_out_feedback_valid_out_81;
    wire [0:0] i_llvm_fpga_push_i2_cleanups_push81_conv293_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i2_cleanups_push81_conv293_out_valid_out;
    wire [7:0] i_llvm_fpga_push_i2_initerations_push80_conv274_out_feedback_out_80;
    wire [0:0] i_llvm_fpga_push_i2_initerations_push80_conv274_out_feedback_valid_out_80;
    wire [0:0] i_llvm_fpga_push_i2_initerations_push80_conv274_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i2_initerations_push80_conv274_out_valid_out;
    wire [31:0] i_llvm_fpga_push_i32_add136_push103_conv248_out_feedback_out_103;
    wire [0:0] i_llvm_fpga_push_i32_add136_push103_conv248_out_feedback_valid_out_103;
    wire [0:0] i_llvm_fpga_push_i32_add136_push103_conv248_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i32_add136_push103_conv248_out_valid_out;
    wire [31:0] i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_out_feedback_out_84;
    wire [0:0] i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_out_feedback_valid_out_84;
    wire [0:0] i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_out_valid_out;
    wire [31:0] i_llvm_fpga_push_i32_col_037_pop27113_push92_conv262_out_feedback_out_92;
    wire [0:0] i_llvm_fpga_push_i32_col_037_pop27113_push92_conv262_out_feedback_valid_out_92;
    wire [0:0] i_llvm_fpga_push_i32_col_037_pop27113_push92_conv262_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i32_col_037_pop27113_push92_conv262_out_valid_out;
    wire [31:0] i_llvm_fpga_push_i32_i_035_pop56135_push101_conv241_out_feedback_out_101;
    wire [0:0] i_llvm_fpga_push_i32_i_035_pop56135_push101_conv241_out_feedback_valid_out_101;
    wire [0:0] i_llvm_fpga_push_i32_i_035_pop56135_push101_conv241_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i32_i_035_pop56135_push101_conv241_out_valid_out;
    wire [31:0] i_llvm_fpga_push_i32_j_034_push78_conv276_out_feedback_out_78;
    wire [0:0] i_llvm_fpga_push_i32_j_034_push78_conv276_out_feedback_valid_out_78;
    wire [0:0] i_llvm_fpga_push_i32_j_034_push78_conv276_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i32_j_034_push78_conv276_out_valid_out;
    wire [31:0] i_llvm_fpga_push_i32_k_036_pop38132_push99_conv243_out_feedback_out_99;
    wire [0:0] i_llvm_fpga_push_i32_k_036_pop38132_push99_conv243_out_feedback_valid_out_99;
    wire [0:0] i_llvm_fpga_push_i32_k_036_pop38132_push99_conv243_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i32_k_036_pop38132_push99_conv243_out_valid_out;
    wire [31:0] i_llvm_fpga_push_i32_push102_conv245_out_feedback_out_102;
    wire [0:0] i_llvm_fpga_push_i32_push102_conv245_out_feedback_valid_out_102;
    wire [0:0] i_llvm_fpga_push_i32_push102_conv245_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i32_push102_conv245_out_valid_out;
    wire [31:0] i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_out_feedback_out_88;
    wire [0:0] i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_out_feedback_valid_out_88;
    wire [0:0] i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_out_valid_out;
    wire [7:0] i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_out_feedback_out_77;
    wire [0:0] i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_out_feedback_valid_out_77;
    wire [0:0] i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_out_valid_out;
    wire [63:0] i_llvm_fpga_push_i64_idxprom25107_push90_conv260_out_feedback_out_90;
    wire [0:0] i_llvm_fpga_push_i64_idxprom25107_push90_conv260_out_feedback_valid_out_90;
    wire [0:0] i_llvm_fpga_push_i64_idxprom25107_push90_conv260_out_stall_out;
    wire [0:0] i_llvm_fpga_push_i64_idxprom25107_push90_conv260_out_valid_out;
    wire [63:0] i_llvm_fpga_push_p1024f32_arrayidx34110_push91_conv261_out_feedback_out_91;
    wire [0:0] i_llvm_fpga_push_p1024f32_arrayidx34110_push91_conv261_out_feedback_valid_out_91;
    wire [0:0] i_llvm_fpga_push_p1024f32_arrayidx34110_push91_conv261_out_stall_out;
    wire [0:0] i_llvm_fpga_push_p1024f32_arrayidx34110_push91_conv261_out_valid_out;
    wire [63:0] i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_out_feedback_out_93;
    wire [0:0] i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_out_feedback_valid_out_93;
    wire [0:0] i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_out_stall_out;
    wire [0:0] i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_out_valid_out;
    wire [0:0] i_masked_conv287_qi;
    reg [0:0] i_masked_conv287_q;
    wire [0:0] i_next_cleanups_conv291_s;
    reg [1:0] i_next_cleanups_conv291_q;
    wire [1:0] i_next_initerations_conv235_vt_join_q;
    wire [0:0] i_next_initerations_conv235_vt_select_0_b;
    wire [0:0] i_notcmp_conv277_q;
    wire [0:0] i_or_conv286_q;
    wire [0:0] i_reduction_conv2_0_conv272_q;
    wire [0:0] i_reduction_conv2_1_conv268_q;
    wire [0:0] i_reduction_conv2_2_conv284_qi;
    reg [0:0] i_reduction_conv2_2_conv284_q;
    wire [0:0] i_reduction_conv2_3_conv290_q;
    wire [0:0] i_reduction_conv2_4_conv292_q;
    wire [31:0] i_unnamed_conv246_qi;
    reg [31:0] i_unnamed_conv246_q;
    wire [0:0] i_unnamed_conv281_qi;
    reg [0:0] i_unnamed_conv281_q;
    wire [35:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_align_0_q;
    wire [35:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_align_0_qint;
    wire [41:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_align_2_q;
    wire [41:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_align_2_qint;
    wire [27:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_align_3_q;
    wire [27:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_align_3_qint;
    wire [35:0] i_arrayidx24_conv20_mult_x_sums_align_0_q;
    wire [35:0] i_arrayidx24_conv20_mult_x_sums_align_0_qint;
    wire [45:0] i_arrayidx24_conv20_mult_x_sums_align_2_q;
    wire [45:0] i_arrayidx24_conv20_mult_x_sums_align_2_qint;
    wire [27:0] i_arrayidx24_conv20_mult_x_sums_align_3_q;
    wire [27:0] i_arrayidx24_conv20_mult_x_sums_align_3_qint;
    wire [35:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_align_0_q;
    wire [35:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_align_0_qint;
    wire [42:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_align_2_q;
    wire [42:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_align_2_qint;
    wire [27:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_align_3_q;
    wire [27:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_align_3_qint;
    wire [35:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_align_0_q;
    wire [35:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_align_0_qint;
    wire [40:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_align_2_q;
    wire [40:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_align_2_qint;
    wire [27:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_align_3_q;
    wire [27:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_align_3_qint;
    wire [17:0] i_arrayidx32_conv20_mult_x_bs1_in;
    wire [17:0] i_arrayidx32_conv20_mult_x_bs1_b;
    wire [35:0] i_arrayidx32_conv20_mult_x_bs4_in;
    wire [17:0] i_arrayidx32_conv20_mult_x_bs4_b;
    wire [53:0] i_arrayidx32_conv20_mult_x_bs7_in;
    wire [17:0] i_arrayidx32_conv20_mult_x_bs7_b;
    wire [9:0] i_arrayidx32_conv20_mult_x_bs10_b;
    wire [35:0] i_arrayidx32_conv20_mult_x_sums_align_0_q;
    wire [35:0] i_arrayidx32_conv20_mult_x_sums_align_0_qint;
    wire [45:0] i_arrayidx32_conv20_mult_x_sums_align_2_q;
    wire [45:0] i_arrayidx32_conv20_mult_x_sums_align_2_qint;
    wire [27:0] i_arrayidx32_conv20_mult_x_sums_align_3_q;
    wire [27:0] i_arrayidx32_conv20_mult_x_sums_align_3_qint;
    wire [0:0] leftShiftStage0Idx1Rng1_uid483_i_cleanups_shl_conv20_shift_x_in;
    wire [0:0] leftShiftStage0Idx1Rng1_uid483_i_cleanups_shl_conv20_shift_x_b;
    wire [1:0] leftShiftStage0Idx1_uid484_i_cleanups_shl_conv20_shift_x_q;
    wire [0:0] leftShiftStage0_uid486_i_cleanups_shl_conv20_shift_x_s;
    reg [1:0] leftShiftStage0_uid486_i_cleanups_shl_conv20_shift_x_q;
    wire [0:0] rightShiftStage0Idx1Rng1_uid490_i_next_initerations_conv20_shift_x_b;
    wire [1:0] rightShiftStage0Idx1_uid492_i_next_initerations_conv20_shift_x_q;
    wire [0:0] rightShiftStage0_uid494_i_next_initerations_conv20_shift_x_s;
    reg [1:0] rightShiftStage0_uid494_i_next_initerations_conv20_shift_x_q;
    wire [0:0] i_exitcond_conv238_cmp_nsign_q;
    wire [18:0] xIfSign_mergedSignalTM_uid523_i_arrayidx24_conv20_dupName_0_mult_x_im0_q;
    wire [2:0] padACst_uid527_i_arrayidx24_conv20_dupName_0_mult_x_im0_q;
    wire [21:0] aPostPad_uid528_i_arrayidx24_conv20_dupName_0_mult_x_im0_q;
    wire [22:0] sub_uid529_i_arrayidx24_conv20_dupName_0_mult_x_im0_a;
    wire [22:0] sub_uid529_i_arrayidx24_conv20_dupName_0_mult_x_im0_b;
    logic [22:0] sub_uid529_i_arrayidx24_conv20_dupName_0_mult_x_im0_o;
    wire [22:0] sub_uid529_i_arrayidx24_conv20_dupName_0_mult_x_im0_q;
    wire [18:0] xIfSign_mergedSignalTM_uid586_i_arrayidx24_conv20_dupName_0_mult_x_im3_q;
    wire [21:0] aPostPad_uid591_i_arrayidx24_conv20_dupName_0_mult_x_im3_q;
    wire [22:0] sub_uid592_i_arrayidx24_conv20_dupName_0_mult_x_im3_a;
    wire [22:0] sub_uid592_i_arrayidx24_conv20_dupName_0_mult_x_im3_b;
    logic [22:0] sub_uid592_i_arrayidx24_conv20_dupName_0_mult_x_im3_o;
    wire [22:0] sub_uid592_i_arrayidx24_conv20_dupName_0_mult_x_im3_q;
    wire [20:0] sR_bottomRange_uid596_i_arrayidx24_conv20_dupName_0_mult_x_im3_in;
    wire [20:0] sR_bottomRange_uid596_i_arrayidx24_conv20_dupName_0_mult_x_im3_b;
    wire [23:0] sR_mergedSignalTM_uid597_i_arrayidx24_conv20_dupName_0_mult_x_im3_q;
    wire [18:0] xIfSign_mergedSignalTM_uid649_i_arrayidx24_conv20_dupName_0_mult_x_im6_q;
    wire [21:0] aPostPad_uid654_i_arrayidx24_conv20_dupName_0_mult_x_im6_q;
    wire [22:0] sub_uid655_i_arrayidx24_conv20_dupName_0_mult_x_im6_a;
    wire [22:0] sub_uid655_i_arrayidx24_conv20_dupName_0_mult_x_im6_b;
    logic [22:0] sub_uid655_i_arrayidx24_conv20_dupName_0_mult_x_im6_o;
    wire [22:0] sub_uid655_i_arrayidx24_conv20_dupName_0_mult_x_im6_q;
    wire [20:0] sR_bottomRange_uid659_i_arrayidx24_conv20_dupName_0_mult_x_im6_in;
    wire [20:0] sR_bottomRange_uid659_i_arrayidx24_conv20_dupName_0_mult_x_im6_b;
    wire [23:0] sR_mergedSignalTM_uid660_i_arrayidx24_conv20_dupName_0_mult_x_im6_q;
    wire [10:0] xIfSign_mergedSignalTM_uid712_i_arrayidx24_conv20_dupName_0_mult_x_im9_q;
    wire [13:0] aPostPad_uid717_i_arrayidx24_conv20_dupName_0_mult_x_im9_q;
    wire [14:0] sub_uid718_i_arrayidx24_conv20_dupName_0_mult_x_im9_a;
    wire [14:0] sub_uid718_i_arrayidx24_conv20_dupName_0_mult_x_im9_b;
    logic [14:0] sub_uid718_i_arrayidx24_conv20_dupName_0_mult_x_im9_o;
    wire [14:0] sub_uid718_i_arrayidx24_conv20_dupName_0_mult_x_im9_q;
    wire [12:0] sR_bottomRange_uid722_i_arrayidx24_conv20_dupName_0_mult_x_im9_in;
    wire [12:0] sR_bottomRange_uid722_i_arrayidx24_conv20_dupName_0_mult_x_im9_b;
    wire [15:0] sR_mergedSignalTM_uid723_i_arrayidx24_conv20_dupName_0_mult_x_im9_q;
    wire [0:0] lowRangeB_uid746_i_arrayidx24_conv20_mult_x_im0_in;
    wire [0:0] lowRangeB_uid746_i_arrayidx24_conv20_mult_x_im0_b;
    wire [16:0] highBBits_uid747_i_arrayidx24_conv20_mult_x_im0_b;
    wire [18:0] addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_a;
    wire [18:0] addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_b;
    logic [18:0] addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_o;
    wire [18:0] addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_q;
    wire [19:0] add_uid749_i_arrayidx24_conv20_mult_x_im0_q;
    wire [13:0] highBBits_uid752_i_arrayidx24_conv20_mult_x_im0_b;
    wire [20:0] a_subconst_49_sumAHighB_uid753_i_arrayidx24_conv20_mult_x_im0_a;
    wire [20:0] a_subconst_49_sumAHighB_uid753_i_arrayidx24_conv20_mult_x_im0_b;
    logic [20:0] a_subconst_49_sumAHighB_uid753_i_arrayidx24_conv20_mult_x_im0_o;
    wire [20:0] a_subconst_49_sumAHighB_uid753_i_arrayidx24_conv20_mult_x_im0_q;
    wire [3:0] sR_bottomExtension_uid757_i_arrayidx24_conv20_mult_x_im0_q;
    wire [0:0] lowRangeB_uid815_i_arrayidx24_conv20_mult_x_im3_in;
    wire [0:0] lowRangeB_uid815_i_arrayidx24_conv20_mult_x_im3_b;
    wire [16:0] highBBits_uid816_i_arrayidx24_conv20_mult_x_im3_b;
    wire [18:0] addsumAHighB_uid817_i_arrayidx24_conv20_mult_x_im3_a;
    wire [18:0] addsumAHighB_uid817_i_arrayidx24_conv20_mult_x_im3_b;
    logic [18:0] addsumAHighB_uid817_i_arrayidx24_conv20_mult_x_im3_o;
    wire [18:0] addsumAHighB_uid817_i_arrayidx24_conv20_mult_x_im3_q;
    wire [19:0] add_uid818_i_arrayidx24_conv20_mult_x_im3_q;
    wire [3:0] lowRangeB_uid820_i_arrayidx24_conv20_mult_x_im3_in;
    wire [3:0] lowRangeB_uid820_i_arrayidx24_conv20_mult_x_im3_b;
    wire [13:0] highBBits_uid821_i_arrayidx24_conv20_mult_x_im3_b;
    wire [20:0] a_subconst_49_sumAHighB_uid822_i_arrayidx24_conv20_mult_x_im3_a;
    wire [20:0] a_subconst_49_sumAHighB_uid822_i_arrayidx24_conv20_mult_x_im3_b;
    logic [20:0] a_subconst_49_sumAHighB_uid822_i_arrayidx24_conv20_mult_x_im3_o;
    wire [20:0] a_subconst_49_sumAHighB_uid822_i_arrayidx24_conv20_mult_x_im3_q;
    wire [24:0] a_subconst_49_uid823_i_arrayidx24_conv20_mult_x_im3_q;
    wire [23:0] sR_bottomRange_uid827_i_arrayidx24_conv20_mult_x_im3_in;
    wire [23:0] sR_bottomRange_uid827_i_arrayidx24_conv20_mult_x_im3_b;
    wire [27:0] sR_mergedSignalTM_uid828_i_arrayidx24_conv20_mult_x_im3_q;
    wire [0:0] lowRangeB_uid884_i_arrayidx24_conv20_mult_x_im6_in;
    wire [0:0] lowRangeB_uid884_i_arrayidx24_conv20_mult_x_im6_b;
    wire [16:0] highBBits_uid885_i_arrayidx24_conv20_mult_x_im6_b;
    wire [18:0] addsumAHighB_uid886_i_arrayidx24_conv20_mult_x_im6_a;
    wire [18:0] addsumAHighB_uid886_i_arrayidx24_conv20_mult_x_im6_b;
    logic [18:0] addsumAHighB_uid886_i_arrayidx24_conv20_mult_x_im6_o;
    wire [18:0] addsumAHighB_uid886_i_arrayidx24_conv20_mult_x_im6_q;
    wire [19:0] add_uid887_i_arrayidx24_conv20_mult_x_im6_q;
    wire [3:0] lowRangeB_uid889_i_arrayidx24_conv20_mult_x_im6_in;
    wire [3:0] lowRangeB_uid889_i_arrayidx24_conv20_mult_x_im6_b;
    wire [13:0] highBBits_uid890_i_arrayidx24_conv20_mult_x_im6_b;
    wire [20:0] a_subconst_49_sumAHighB_uid891_i_arrayidx24_conv20_mult_x_im6_a;
    wire [20:0] a_subconst_49_sumAHighB_uid891_i_arrayidx24_conv20_mult_x_im6_b;
    logic [20:0] a_subconst_49_sumAHighB_uid891_i_arrayidx24_conv20_mult_x_im6_o;
    wire [20:0] a_subconst_49_sumAHighB_uid891_i_arrayidx24_conv20_mult_x_im6_q;
    wire [24:0] a_subconst_49_uid892_i_arrayidx24_conv20_mult_x_im6_q;
    wire [23:0] sR_bottomRange_uid896_i_arrayidx24_conv20_mult_x_im6_in;
    wire [23:0] sR_bottomRange_uid896_i_arrayidx24_conv20_mult_x_im6_b;
    wire [27:0] sR_mergedSignalTM_uid897_i_arrayidx24_conv20_mult_x_im6_q;
    wire [0:0] lowRangeB_uid953_i_arrayidx24_conv20_mult_x_im9_in;
    wire [0:0] lowRangeB_uid953_i_arrayidx24_conv20_mult_x_im9_b;
    wire [8:0] highBBits_uid954_i_arrayidx24_conv20_mult_x_im9_b;
    wire [10:0] addsumAHighB_uid955_i_arrayidx24_conv20_mult_x_im9_a;
    wire [10:0] addsumAHighB_uid955_i_arrayidx24_conv20_mult_x_im9_b;
    logic [10:0] addsumAHighB_uid955_i_arrayidx24_conv20_mult_x_im9_o;
    wire [10:0] addsumAHighB_uid955_i_arrayidx24_conv20_mult_x_im9_q;
    wire [11:0] add_uid956_i_arrayidx24_conv20_mult_x_im9_q;
    wire [3:0] lowRangeB_uid958_i_arrayidx24_conv20_mult_x_im9_in;
    wire [3:0] lowRangeB_uid958_i_arrayidx24_conv20_mult_x_im9_b;
    wire [5:0] highBBits_uid959_i_arrayidx24_conv20_mult_x_im9_b;
    wire [12:0] a_subconst_49_sumAHighB_uid960_i_arrayidx24_conv20_mult_x_im9_a;
    wire [12:0] a_subconst_49_sumAHighB_uid960_i_arrayidx24_conv20_mult_x_im9_b;
    logic [12:0] a_subconst_49_sumAHighB_uid960_i_arrayidx24_conv20_mult_x_im9_o;
    wire [12:0] a_subconst_49_sumAHighB_uid960_i_arrayidx24_conv20_mult_x_im9_q;
    wire [16:0] a_subconst_49_uid961_i_arrayidx24_conv20_mult_x_im9_q;
    wire [15:0] sR_bottomRange_uid965_i_arrayidx24_conv20_mult_x_im9_in;
    wire [15:0] sR_bottomRange_uid965_i_arrayidx24_conv20_mult_x_im9_b;
    wire [19:0] sR_mergedSignalTM_uid966_i_arrayidx24_conv20_mult_x_im9_q;
    wire [14:0] highBBits_uid1016_i_arrayidx32_conv20_dupName_0_mult_x_im0_b;
    wire [20:0] a_subconst_25_sumAHighB_uid1017_i_arrayidx32_conv20_dupName_0_mult_x_im0_a;
    wire [20:0] a_subconst_25_sumAHighB_uid1017_i_arrayidx32_conv20_dupName_0_mult_x_im0_b;
    logic [20:0] a_subconst_25_sumAHighB_uid1017_i_arrayidx32_conv20_dupName_0_mult_x_im0_o;
    wire [20:0] a_subconst_25_sumAHighB_uid1017_i_arrayidx32_conv20_dupName_0_mult_x_im0_q;
    wire [2:0] lowRangeB_uid1084_i_arrayidx32_conv20_dupName_0_mult_x_im3_in;
    wire [2:0] lowRangeB_uid1084_i_arrayidx32_conv20_dupName_0_mult_x_im3_b;
    wire [14:0] highBBits_uid1085_i_arrayidx32_conv20_dupName_0_mult_x_im3_b;
    wire [20:0] a_subconst_25_sumAHighB_uid1086_i_arrayidx32_conv20_dupName_0_mult_x_im3_a;
    wire [20:0] a_subconst_25_sumAHighB_uid1086_i_arrayidx32_conv20_dupName_0_mult_x_im3_b;
    logic [20:0] a_subconst_25_sumAHighB_uid1086_i_arrayidx32_conv20_dupName_0_mult_x_im3_o;
    wire [20:0] a_subconst_25_sumAHighB_uid1086_i_arrayidx32_conv20_dupName_0_mult_x_im3_q;
    wire [23:0] a_subconst_25_uid1087_i_arrayidx32_conv20_dupName_0_mult_x_im3_q;
    wire [22:0] sR_bottomRange_uid1091_i_arrayidx32_conv20_dupName_0_mult_x_im3_in;
    wire [22:0] sR_bottomRange_uid1091_i_arrayidx32_conv20_dupName_0_mult_x_im3_b;
    wire [24:0] sR_mergedSignalTM_uid1092_i_arrayidx32_conv20_dupName_0_mult_x_im3_q;
    wire [2:0] lowRangeB_uid1153_i_arrayidx32_conv20_dupName_0_mult_x_im6_in;
    wire [2:0] lowRangeB_uid1153_i_arrayidx32_conv20_dupName_0_mult_x_im6_b;
    wire [14:0] highBBits_uid1154_i_arrayidx32_conv20_dupName_0_mult_x_im6_b;
    wire [20:0] a_subconst_25_sumAHighB_uid1155_i_arrayidx32_conv20_dupName_0_mult_x_im6_a;
    wire [20:0] a_subconst_25_sumAHighB_uid1155_i_arrayidx32_conv20_dupName_0_mult_x_im6_b;
    logic [20:0] a_subconst_25_sumAHighB_uid1155_i_arrayidx32_conv20_dupName_0_mult_x_im6_o;
    wire [20:0] a_subconst_25_sumAHighB_uid1155_i_arrayidx32_conv20_dupName_0_mult_x_im6_q;
    wire [23:0] a_subconst_25_uid1156_i_arrayidx32_conv20_dupName_0_mult_x_im6_q;
    wire [22:0] sR_bottomRange_uid1160_i_arrayidx32_conv20_dupName_0_mult_x_im6_in;
    wire [22:0] sR_bottomRange_uid1160_i_arrayidx32_conv20_dupName_0_mult_x_im6_b;
    wire [24:0] sR_mergedSignalTM_uid1161_i_arrayidx32_conv20_dupName_0_mult_x_im6_q;
    wire [2:0] lowRangeB_uid1222_i_arrayidx32_conv20_dupName_0_mult_x_im9_in;
    wire [2:0] lowRangeB_uid1222_i_arrayidx32_conv20_dupName_0_mult_x_im9_b;
    wire [6:0] highBBits_uid1223_i_arrayidx32_conv20_dupName_0_mult_x_im9_b;
    wire [12:0] a_subconst_25_sumAHighB_uid1224_i_arrayidx32_conv20_dupName_0_mult_x_im9_a;
    wire [12:0] a_subconst_25_sumAHighB_uid1224_i_arrayidx32_conv20_dupName_0_mult_x_im9_b;
    logic [12:0] a_subconst_25_sumAHighB_uid1224_i_arrayidx32_conv20_dupName_0_mult_x_im9_o;
    wire [12:0] a_subconst_25_sumAHighB_uid1224_i_arrayidx32_conv20_dupName_0_mult_x_im9_q;
    wire [15:0] a_subconst_25_uid1225_i_arrayidx32_conv20_dupName_0_mult_x_im9_q;
    wire [14:0] sR_bottomRange_uid1229_i_arrayidx32_conv20_dupName_0_mult_x_im9_in;
    wire [14:0] sR_bottomRange_uid1229_i_arrayidx32_conv20_dupName_0_mult_x_im9_b;
    wire [16:0] sR_mergedSignalTM_uid1230_i_arrayidx32_conv20_dupName_0_mult_x_im9_q;
    wire [15:0] highBBits_uid1274_i_arrayidx32_conv20_dupName_1_mult_x_im0_b;
    wire [18:0] addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_a;
    wire [18:0] addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_b;
    logic [18:0] addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_o;
    wire [18:0] addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_q;
    wire [18:0] addsumAHighB_uid1333_i_arrayidx32_conv20_dupName_1_mult_x_im3_a;
    wire [18:0] addsumAHighB_uid1333_i_arrayidx32_conv20_dupName_1_mult_x_im3_b;
    logic [18:0] addsumAHighB_uid1333_i_arrayidx32_conv20_dupName_1_mult_x_im3_o;
    wire [18:0] addsumAHighB_uid1333_i_arrayidx32_conv20_dupName_1_mult_x_im3_q;
    wire [20:0] add_uid1334_i_arrayidx32_conv20_dupName_1_mult_x_im3_q;
    wire [22:0] sR_mergedSignalTM_uid1339_i_arrayidx32_conv20_dupName_1_mult_x_im3_q;
    wire [18:0] addsumAHighB_uid1391_i_arrayidx32_conv20_dupName_1_mult_x_im6_a;
    wire [18:0] addsumAHighB_uid1391_i_arrayidx32_conv20_dupName_1_mult_x_im6_b;
    logic [18:0] addsumAHighB_uid1391_i_arrayidx32_conv20_dupName_1_mult_x_im6_o;
    wire [18:0] addsumAHighB_uid1391_i_arrayidx32_conv20_dupName_1_mult_x_im6_q;
    wire [20:0] add_uid1392_i_arrayidx32_conv20_dupName_1_mult_x_im6_q;
    wire [22:0] sR_mergedSignalTM_uid1397_i_arrayidx32_conv20_dupName_1_mult_x_im6_q;
    wire [10:0] addsumAHighB_uid1449_i_arrayidx32_conv20_dupName_1_mult_x_im9_a;
    wire [10:0] addsumAHighB_uid1449_i_arrayidx32_conv20_dupName_1_mult_x_im9_b;
    logic [10:0] addsumAHighB_uid1449_i_arrayidx32_conv20_dupName_1_mult_x_im9_o;
    wire [10:0] addsumAHighB_uid1449_i_arrayidx32_conv20_dupName_1_mult_x_im9_q;
    wire [12:0] add_uid1450_i_arrayidx32_conv20_dupName_1_mult_x_im9_q;
    wire [14:0] sR_mergedSignalTM_uid1455_i_arrayidx32_conv20_dupName_1_mult_x_im9_q;
    wire [0:0] lowRangeB_uid1493_i_arrayidx32_conv20_mult_x_im0_in;
    wire [0:0] lowRangeB_uid1493_i_arrayidx32_conv20_mult_x_im0_b;
    wire [16:0] highBBits_uid1494_i_arrayidx32_conv20_mult_x_im0_b;
    wire [18:0] addsumAHighB_uid1495_i_arrayidx32_conv20_mult_x_im0_a;
    wire [18:0] addsumAHighB_uid1495_i_arrayidx32_conv20_mult_x_im0_b;
    logic [18:0] addsumAHighB_uid1495_i_arrayidx32_conv20_mult_x_im0_o;
    wire [18:0] addsumAHighB_uid1495_i_arrayidx32_conv20_mult_x_im0_q;
    wire [19:0] add_uid1496_i_arrayidx32_conv20_mult_x_im0_q;
    wire [2:0] lowRangeB_uid1499_i_arrayidx32_conv20_mult_x_im0_in;
    wire [2:0] lowRangeB_uid1499_i_arrayidx32_conv20_mult_x_im0_b;
    wire [14:0] highBBits_uid1500_i_arrayidx32_conv20_mult_x_im0_b;
    wire [18:0] addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_a;
    wire [18:0] addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_b;
    logic [18:0] addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_o;
    wire [18:0] addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_q;
    wire [21:0] add_uid1502_i_arrayidx32_conv20_mult_x_im0_q;
    wire [16:0] highBBits_uid1505_i_arrayidx32_conv20_mult_x_im0_b;
    wire [22:0] a_subconst_75_sumAHighB_uid1506_i_arrayidx32_conv20_mult_x_im0_a;
    wire [22:0] a_subconst_75_sumAHighB_uid1506_i_arrayidx32_conv20_mult_x_im0_b;
    logic [22:0] a_subconst_75_sumAHighB_uid1506_i_arrayidx32_conv20_mult_x_im0_o;
    wire [22:0] a_subconst_75_sumAHighB_uid1506_i_arrayidx32_conv20_mult_x_im0_q;
    wire [0:0] lowRangeB_uid1572_i_arrayidx32_conv20_mult_x_im3_in;
    wire [0:0] lowRangeB_uid1572_i_arrayidx32_conv20_mult_x_im3_b;
    wire [16:0] highBBits_uid1573_i_arrayidx32_conv20_mult_x_im3_b;
    wire [18:0] addsumAHighB_uid1574_i_arrayidx32_conv20_mult_x_im3_a;
    wire [18:0] addsumAHighB_uid1574_i_arrayidx32_conv20_mult_x_im3_b;
    logic [18:0] addsumAHighB_uid1574_i_arrayidx32_conv20_mult_x_im3_o;
    wire [18:0] addsumAHighB_uid1574_i_arrayidx32_conv20_mult_x_im3_q;
    wire [19:0] add_uid1575_i_arrayidx32_conv20_mult_x_im3_q;
    wire [2:0] lowRangeB_uid1578_i_arrayidx32_conv20_mult_x_im3_in;
    wire [2:0] lowRangeB_uid1578_i_arrayidx32_conv20_mult_x_im3_b;
    wire [14:0] highBBits_uid1579_i_arrayidx32_conv20_mult_x_im3_b;
    wire [18:0] addsumAHighB_uid1580_i_arrayidx32_conv20_mult_x_im3_a;
    wire [18:0] addsumAHighB_uid1580_i_arrayidx32_conv20_mult_x_im3_b;
    logic [18:0] addsumAHighB_uid1580_i_arrayidx32_conv20_mult_x_im3_o;
    wire [18:0] addsumAHighB_uid1580_i_arrayidx32_conv20_mult_x_im3_q;
    wire [21:0] add_uid1581_i_arrayidx32_conv20_mult_x_im3_q;
    wire [22:0] a_subconst_75_sumAHighB_uid1585_i_arrayidx32_conv20_mult_x_im3_a;
    wire [22:0] a_subconst_75_sumAHighB_uid1585_i_arrayidx32_conv20_mult_x_im3_b;
    logic [22:0] a_subconst_75_sumAHighB_uid1585_i_arrayidx32_conv20_mult_x_im3_o;
    wire [22:0] a_subconst_75_sumAHighB_uid1585_i_arrayidx32_conv20_mult_x_im3_q;
    wire [25:0] a_subconst_75_uid1586_i_arrayidx32_conv20_mult_x_im3_q;
    wire [24:0] sR_bottomRange_uid1590_i_arrayidx32_conv20_mult_x_im3_in;
    wire [24:0] sR_bottomRange_uid1590_i_arrayidx32_conv20_mult_x_im3_b;
    wire [27:0] sR_mergedSignalTM_uid1591_i_arrayidx32_conv20_mult_x_im3_q;
    wire [0:0] lowRangeB_uid1651_i_arrayidx32_conv20_mult_x_im6_in;
    wire [0:0] lowRangeB_uid1651_i_arrayidx32_conv20_mult_x_im6_b;
    wire [16:0] highBBits_uid1652_i_arrayidx32_conv20_mult_x_im6_b;
    wire [18:0] addsumAHighB_uid1653_i_arrayidx32_conv20_mult_x_im6_a;
    wire [18:0] addsumAHighB_uid1653_i_arrayidx32_conv20_mult_x_im6_b;
    logic [18:0] addsumAHighB_uid1653_i_arrayidx32_conv20_mult_x_im6_o;
    wire [18:0] addsumAHighB_uid1653_i_arrayidx32_conv20_mult_x_im6_q;
    wire [19:0] add_uid1654_i_arrayidx32_conv20_mult_x_im6_q;
    wire [2:0] lowRangeB_uid1657_i_arrayidx32_conv20_mult_x_im6_in;
    wire [2:0] lowRangeB_uid1657_i_arrayidx32_conv20_mult_x_im6_b;
    wire [14:0] highBBits_uid1658_i_arrayidx32_conv20_mult_x_im6_b;
    wire [18:0] addsumAHighB_uid1659_i_arrayidx32_conv20_mult_x_im6_a;
    wire [18:0] addsumAHighB_uid1659_i_arrayidx32_conv20_mult_x_im6_b;
    logic [18:0] addsumAHighB_uid1659_i_arrayidx32_conv20_mult_x_im6_o;
    wire [18:0] addsumAHighB_uid1659_i_arrayidx32_conv20_mult_x_im6_q;
    wire [21:0] add_uid1660_i_arrayidx32_conv20_mult_x_im6_q;
    wire [22:0] a_subconst_75_sumAHighB_uid1664_i_arrayidx32_conv20_mult_x_im6_a;
    wire [22:0] a_subconst_75_sumAHighB_uid1664_i_arrayidx32_conv20_mult_x_im6_b;
    logic [22:0] a_subconst_75_sumAHighB_uid1664_i_arrayidx32_conv20_mult_x_im6_o;
    wire [22:0] a_subconst_75_sumAHighB_uid1664_i_arrayidx32_conv20_mult_x_im6_q;
    wire [25:0] a_subconst_75_uid1665_i_arrayidx32_conv20_mult_x_im6_q;
    wire [24:0] sR_bottomRange_uid1669_i_arrayidx32_conv20_mult_x_im6_in;
    wire [24:0] sR_bottomRange_uid1669_i_arrayidx32_conv20_mult_x_im6_b;
    wire [27:0] sR_mergedSignalTM_uid1670_i_arrayidx32_conv20_mult_x_im6_q;
    wire [0:0] lowRangeB_uid1730_i_arrayidx32_conv20_mult_x_im9_in;
    wire [0:0] lowRangeB_uid1730_i_arrayidx32_conv20_mult_x_im9_b;
    wire [8:0] highBBits_uid1731_i_arrayidx32_conv20_mult_x_im9_b;
    wire [10:0] addsumAHighB_uid1732_i_arrayidx32_conv20_mult_x_im9_a;
    wire [10:0] addsumAHighB_uid1732_i_arrayidx32_conv20_mult_x_im9_b;
    logic [10:0] addsumAHighB_uid1732_i_arrayidx32_conv20_mult_x_im9_o;
    wire [10:0] addsumAHighB_uid1732_i_arrayidx32_conv20_mult_x_im9_q;
    wire [11:0] add_uid1733_i_arrayidx32_conv20_mult_x_im9_q;
    wire [2:0] lowRangeB_uid1736_i_arrayidx32_conv20_mult_x_im9_in;
    wire [2:0] lowRangeB_uid1736_i_arrayidx32_conv20_mult_x_im9_b;
    wire [6:0] highBBits_uid1737_i_arrayidx32_conv20_mult_x_im9_b;
    wire [10:0] addsumAHighB_uid1738_i_arrayidx32_conv20_mult_x_im9_a;
    wire [10:0] addsumAHighB_uid1738_i_arrayidx32_conv20_mult_x_im9_b;
    logic [10:0] addsumAHighB_uid1738_i_arrayidx32_conv20_mult_x_im9_o;
    wire [10:0] addsumAHighB_uid1738_i_arrayidx32_conv20_mult_x_im9_q;
    wire [13:0] add_uid1739_i_arrayidx32_conv20_mult_x_im9_q;
    wire [14:0] a_subconst_75_sumAHighB_uid1743_i_arrayidx32_conv20_mult_x_im9_a;
    wire [14:0] a_subconst_75_sumAHighB_uid1743_i_arrayidx32_conv20_mult_x_im9_b;
    logic [14:0] a_subconst_75_sumAHighB_uid1743_i_arrayidx32_conv20_mult_x_im9_o;
    wire [14:0] a_subconst_75_sumAHighB_uid1743_i_arrayidx32_conv20_mult_x_im9_q;
    wire [17:0] a_subconst_75_uid1744_i_arrayidx32_conv20_mult_x_im9_q;
    wire [16:0] sR_bottomRange_uid1748_i_arrayidx32_conv20_mult_x_im9_in;
    wire [16:0] sR_bottomRange_uid1748_i_arrayidx32_conv20_mult_x_im9_b;
    wire [19:0] sR_mergedSignalTM_uid1749_i_arrayidx32_conv20_mult_x_im9_q;
    wire [52:0] i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_a;
    wire [52:0] i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_b;
    logic [52:0] i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_o;
    wire [0:0] i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_c;
    wire [51:0] i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_q;
    wire [14:0] i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_a;
    wire [14:0] i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_b;
    logic [14:0] i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_o;
    wire [0:0] i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_cin;
    wire [12:0] i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_q;
    wire [52:0] i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_a;
    wire [52:0] i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_b;
    logic [52:0] i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_o;
    wire [0:0] i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_c;
    wire [51:0] i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q;
    wire [14:0] i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_a;
    wire [14:0] i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_b;
    logic [14:0] i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_o;
    wire [0:0] i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_cin;
    wire [12:0] i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_q;
    wire [64:0] i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_q;
    wire [52:0] i_arrayidx24_conv20_add_x_p1_of_2_a;
    wire [52:0] i_arrayidx24_conv20_add_x_p1_of_2_b;
    logic [52:0] i_arrayidx24_conv20_add_x_p1_of_2_o;
    wire [0:0] i_arrayidx24_conv20_add_x_p1_of_2_c;
    wire [51:0] i_arrayidx24_conv20_add_x_p1_of_2_q;
    wire [14:0] i_arrayidx24_conv20_add_x_p2_of_2_a;
    wire [14:0] i_arrayidx24_conv20_add_x_p2_of_2_b;
    logic [14:0] i_arrayidx24_conv20_add_x_p2_of_2_o;
    wire [0:0] i_arrayidx24_conv20_add_x_p2_of_2_cin;
    wire [12:0] i_arrayidx24_conv20_add_x_p2_of_2_q;
    wire [52:0] i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_a;
    wire [52:0] i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_b;
    logic [52:0] i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_o;
    wire [0:0] i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_c;
    wire [51:0] i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_q;
    wire [14:0] i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_a;
    wire [14:0] i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_b;
    logic [14:0] i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_o;
    wire [0:0] i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_cin;
    wire [12:0] i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_q;
    wire [52:0] i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_a;
    wire [52:0] i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_b;
    logic [52:0] i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_o;
    wire [0:0] i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_c;
    wire [51:0] i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_q;
    wire [14:0] i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_a;
    wire [14:0] i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_b;
    logic [14:0] i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_o;
    wire [0:0] i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_cin;
    wire [12:0] i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_q;
    wire [52:0] i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_a;
    wire [52:0] i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_b;
    logic [52:0] i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_o;
    wire [0:0] i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_c;
    wire [51:0] i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q;
    wire [14:0] i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_a;
    wire [14:0] i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_b;
    logic [14:0] i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_o;
    wire [0:0] i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_cin;
    wire [12:0] i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_q;
    wire [64:0] i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_q;
    wire [52:0] i_arrayidx32_conv20_add_x_p1_of_2_a;
    wire [52:0] i_arrayidx32_conv20_add_x_p1_of_2_b;
    logic [52:0] i_arrayidx32_conv20_add_x_p1_of_2_o;
    wire [0:0] i_arrayidx32_conv20_add_x_p1_of_2_c;
    wire [51:0] i_arrayidx32_conv20_add_x_p1_of_2_q;
    wire [14:0] i_arrayidx32_conv20_add_x_p2_of_2_a;
    wire [14:0] i_arrayidx32_conv20_add_x_p2_of_2_b;
    logic [14:0] i_arrayidx32_conv20_add_x_p2_of_2_o;
    wire [0:0] i_arrayidx32_conv20_add_x_p2_of_2_cin;
    wire [12:0] i_arrayidx32_conv20_add_x_p2_of_2_q;
    wire [10:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_UpperBits_for_a_q;
    wire [52:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_a;
    wire [52:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_b;
    logic [52:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_o;
    wire [0:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_c;
    wire [51:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_q;
    wire [20:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_a;
    wire [20:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_b;
    logic [20:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_o;
    wire [0:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_cin;
    wire [18:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_q;
    wire [52:0] i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_a;
    wire [52:0] i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_b;
    logic [52:0] i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_o;
    wire [0:0] i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_c;
    wire [51:0] i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_q;
    wire [24:0] i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_a;
    wire [24:0] i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_b;
    logic [24:0] i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_o;
    wire [0:0] i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_cin;
    wire [22:0] i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_q;
    wire [52:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_a;
    wire [52:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_b;
    logic [52:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_o;
    wire [0:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_c;
    wire [51:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_q;
    wire [21:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_a;
    wire [21:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_b;
    logic [21:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_o;
    wire [0:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_cin;
    wire [19:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_q;
    wire [52:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_a;
    wire [52:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_b;
    logic [52:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_o;
    wire [0:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_c;
    wire [51:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_q;
    wire [19:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_a;
    wire [19:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_b;
    logic [19:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_o;
    wire [0:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_cin;
    wire [17:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_q;
    wire [52:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_a;
    wire [52:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_b;
    logic [52:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_o;
    wire [0:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_c;
    wire [51:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_q;
    wire [24:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_a;
    wire [24:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_b;
    logic [24:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_o;
    wire [0:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_cin;
    wire [22:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_q;
    wire [11:0] i_arrayidx24_conv20_dupName_0_add_x_BitSelect_for_a_tessel1_0_b;
    wire [12:0] i_arrayidx24_conv20_dupName_0_add_x_BitSelect_for_a_BitJoin_for_c_q;
    wire [11:0] i_arrayidx24_conv20_dupName_0_add_x_BitSelect_for_b_tessel1_0_b;
    wire [12:0] i_arrayidx24_conv20_dupName_0_add_x_BitSelect_for_b_BitJoin_for_c_q;
    wire [11:0] i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_a_tessel1_0_b;
    wire [12:0] i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_a_BitJoin_for_c_q;
    wire [31:0] i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b;
    wire [17:0] i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_2_b;
    wire [51:0] i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_b_q;
    wire [11:0] i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel1_0_b;
    wire [12:0] i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_c_q;
    wire [12:0] i_arrayidx24_conv20_add_x_BitSelect_for_a_BitJoin_for_c_q;
    wire [11:0] i_arrayidx24_conv20_add_x_BitSelect_for_b_tessel1_0_b;
    wire [12:0] i_arrayidx24_conv20_add_x_BitSelect_for_b_BitJoin_for_c_q;
    wire [11:0] i_arrayidx32_conv20_dupName_0_add_x_BitSelect_for_a_tessel1_0_b;
    wire [12:0] i_arrayidx32_conv20_dupName_0_add_x_BitSelect_for_a_BitJoin_for_c_q;
    wire [11:0] i_arrayidx32_conv20_dupName_0_add_x_BitSelect_for_b_tessel1_0_b;
    wire [12:0] i_arrayidx32_conv20_dupName_0_add_x_BitSelect_for_b_BitJoin_for_c_q;
    wire [11:0] i_arrayidx32_conv20_dupName_1_add_x_BitSelect_for_a_tessel1_0_b;
    wire [12:0] i_arrayidx32_conv20_dupName_1_add_x_BitSelect_for_a_BitJoin_for_c_q;
    wire [11:0] i_arrayidx32_conv20_dupName_1_add_x_BitSelect_for_b_tessel1_0_b;
    wire [12:0] i_arrayidx32_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_c_q;
    wire [11:0] i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_a_tessel1_0_b;
    wire [12:0] i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_a_BitJoin_for_c_q;
    wire [51:0] i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_b_BitJoin_for_b_q;
    wire [12:0] i_arrayidx32_conv20_add_x_BitSelect_for_a_BitJoin_for_c_q;
    wire [11:0] i_arrayidx32_conv20_add_x_BitSelect_for_b_tessel1_0_b;
    wire [12:0] i_arrayidx32_conv20_add_x_BitSelect_for_b_BitJoin_for_c_q;
    wire [20:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b;
    wire [51:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b_q;
    wire [18:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c_q;
    wire [51:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b_q;
    wire [18:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c_q;
    wire [3:0] i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b;
    wire [19:0] i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b;
    wire [51:0] i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b_q;
    wire [22:0] i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c_q;
    wire [51:0] i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b_q;
    wire [22:0] i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c_q;
    wire [2:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b;
    wire [19:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b;
    wire [51:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b_q;
    wire [19:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c_q;
    wire [51:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b_q;
    wire [19:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c_q;
    wire [1:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b;
    wire [51:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b_q;
    wire [17:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c_q;
    wire [51:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b_q;
    wire [17:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c_q;
    wire [0:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b;
    wire [1:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b;
    wire [21:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b;
    wire [51:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b_q;
    wire [22:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c_q;
    wire [51:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b_q;
    wire [22:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c_q;
    wire [17:0] i_arrayidx24_conv20_dupName_0_mult_x_bs1_merged_bit_select_b;
    wire [17:0] i_arrayidx24_conv20_dupName_0_mult_x_bs1_merged_bit_select_c;
    wire [17:0] i_arrayidx24_conv20_dupName_0_mult_x_bs1_merged_bit_select_d;
    wire [9:0] i_arrayidx24_conv20_dupName_0_mult_x_bs1_merged_bit_select_e;
    wire [17:0] i_arrayidx32_conv20_dupName_1_mult_x_bs1_merged_bit_select_b;
    wire [17:0] i_arrayidx32_conv20_dupName_1_mult_x_bs1_merged_bit_select_c;
    wire [17:0] i_arrayidx32_conv20_dupName_1_mult_x_bs1_merged_bit_select_d;
    wire [9:0] i_arrayidx32_conv20_dupName_1_mult_x_bs1_merged_bit_select_e;
    wire [17:0] i_arrayidx24_conv20_mult_x_bs1_merged_bit_select_b;
    wire [17:0] i_arrayidx24_conv20_mult_x_bs1_merged_bit_select_c;
    wire [17:0] i_arrayidx24_conv20_mult_x_bs1_merged_bit_select_d;
    wire [9:0] i_arrayidx24_conv20_mult_x_bs1_merged_bit_select_e;
    wire [51:0] i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_b;
    wire [11:0] i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c;
    wire [51:0] i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_b;
    wire [11:0] i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c;
    wire [27:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_merged_bit_select_b;
    wire [7:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_merged_bit_select_c;
    wire [9:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_b;
    wire [17:0] i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c;
    wire [23:0] i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_b;
    wire [11:0] i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c;
    wire [5:0] i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_b;
    wire [21:0] i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c;
    wire [26:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_b;
    wire [8:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c;
    wire [8:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_b;
    wire [18:0] i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c;
    wire [28:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_b;
    wire [6:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c;
    wire [10:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_b;
    wire [16:0] i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c;
    wire [23:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_4_merged_bit_select_b;
    wire [11:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_4_merged_bit_select_c;
    wire [5:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_b;
    wire [21:0] i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c;
    wire [2:0] lowRangeB_uid1583_i_arrayidx32_conv20_mult_x_im3_merged_bit_select_b;
    wire [16:0] lowRangeB_uid1583_i_arrayidx32_conv20_mult_x_im3_merged_bit_select_c;
    wire [2:0] lowRangeB_uid1662_i_arrayidx32_conv20_mult_x_im6_merged_bit_select_b;
    wire [16:0] lowRangeB_uid1662_i_arrayidx32_conv20_mult_x_im6_merged_bit_select_c;
    wire [2:0] lowRangeB_uid1741_i_arrayidx32_conv20_mult_x_im9_merged_bit_select_b;
    wire [8:0] lowRangeB_uid1741_i_arrayidx32_conv20_mult_x_im9_merged_bit_select_c;
    wire [1:0] lowRangeB_uid1331_i_arrayidx32_conv20_dupName_1_mult_x_im3_merged_bit_select_b;
    wire [15:0] lowRangeB_uid1331_i_arrayidx32_conv20_dupName_1_mult_x_im3_merged_bit_select_c;
    wire [1:0] lowRangeB_uid1389_i_arrayidx32_conv20_dupName_1_mult_x_im6_merged_bit_select_b;
    wire [15:0] lowRangeB_uid1389_i_arrayidx32_conv20_dupName_1_mult_x_im6_merged_bit_select_c;
    wire [1:0] lowRangeB_uid1447_i_arrayidx32_conv20_dupName_1_mult_x_im9_merged_bit_select_b;
    wire [7:0] lowRangeB_uid1447_i_arrayidx32_conv20_dupName_1_mult_x_im9_merged_bit_select_c;
    wire [64:0] join_for_coalesced_delay_0_q;
    wire [63:0] sel_for_coalesced_delay_0_b;
    wire [0:0] sel_for_coalesced_delay_0_c;
    wire [1:0] join_for_coalesced_delay_1_q;
    wire [0:0] sel_for_coalesced_delay_1_b;
    wire [0:0] sel_for_coalesced_delay_1_c;
    wire [128:0] join_for_coalesced_delay_2_q;
    wire [63:0] sel_for_coalesced_delay_2_b;
    wire [63:0] sel_for_coalesced_delay_2_c;
    wire [0:0] sel_for_coalesced_delay_2_d;
    wire [63:0] join_for_coalesced_delay_3_q;
    wire [31:0] sel_for_coalesced_delay_3_b;
    wire [31:0] sel_for_coalesced_delay_3_c;
    wire [9:0] join_for_coalesced_delay_4_q;
    wire [0:0] sel_for_coalesced_delay_4_b;
    wire [0:0] sel_for_coalesced_delay_4_c;
    wire [0:0] sel_for_coalesced_delay_4_d;
    wire [0:0] sel_for_coalesced_delay_4_e;
    wire [0:0] sel_for_coalesced_delay_4_f;
    wire [0:0] sel_for_coalesced_delay_4_g;
    wire [0:0] sel_for_coalesced_delay_4_h;
    wire [0:0] sel_for_coalesced_delay_4_i;
    wire [0:0] sel_for_coalesced_delay_4_j;
    wire [0:0] sel_for_coalesced_delay_4_k;
    wire [63:0] join_for_coalesced_delay_5_q;
    wire [17:0] sel_for_coalesced_delay_5_b;
    wire [17:0] sel_for_coalesced_delay_5_c;
    wire [17:0] sel_for_coalesced_delay_5_d;
    wire [9:0] sel_for_coalesced_delay_5_e;
    reg [1:0] redist0_lowRangeB_uid1447_i_arrayidx32_conv20_dupName_1_mult_x_im9_merged_bit_select_b_1_0_q;
    reg [1:0] redist1_lowRangeB_uid1389_i_arrayidx32_conv20_dupName_1_mult_x_im6_merged_bit_select_b_1_0_q;
    reg [1:0] redist2_lowRangeB_uid1331_i_arrayidx32_conv20_dupName_1_mult_x_im3_merged_bit_select_b_1_0_q;
    reg [21:0] redist3_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0_q;
    reg [11:0] redist4_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_4_merged_bit_select_c_1_0_q;
    reg [16:0] redist5_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0_q;
    reg [6:0] redist6_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c_1_0_q;
    reg [18:0] redist7_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0_q;
    reg [8:0] redist8_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c_1_0_q;
    reg [21:0] redist9_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0_q;
    reg [11:0] redist10_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c_1_0_q;
    reg [17:0] redist11_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0_q;
    reg [7:0] redist12_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_merged_bit_select_c_1_0_q;
    reg [11:0] redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_q;
    reg [11:0] redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_q;
    reg [21:0] redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_q;
    reg [1:0] redist20_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_2_0_q;
    reg [1:0] redist20_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_2_1_q;
    reg [19:0] redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_q;
    reg [19:0] redist22_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_q;
    reg [20:0] redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_q;
    reg [31:0] redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_q;
    reg [51:0] redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_q;
    reg [51:0] redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_q;
    reg [16:0] redist27_sR_bottomRange_uid1748_i_arrayidx32_conv20_mult_x_im9_b_1_0_q;
    reg [2:0] redist28_lowRangeB_uid1736_i_arrayidx32_conv20_mult_x_im9_b_1_0_q;
    reg [0:0] redist29_lowRangeB_uid1730_i_arrayidx32_conv20_mult_x_im9_b_1_0_q;
    reg [24:0] redist30_sR_bottomRange_uid1669_i_arrayidx32_conv20_mult_x_im6_b_1_0_q;
    reg [2:0] redist31_lowRangeB_uid1657_i_arrayidx32_conv20_mult_x_im6_b_1_0_q;
    reg [0:0] redist32_lowRangeB_uid1651_i_arrayidx32_conv20_mult_x_im6_b_1_0_q;
    reg [24:0] redist33_sR_bottomRange_uid1590_i_arrayidx32_conv20_mult_x_im3_b_1_0_q;
    reg [2:0] redist34_lowRangeB_uid1578_i_arrayidx32_conv20_mult_x_im3_b_1_0_q;
    reg [0:0] redist35_lowRangeB_uid1572_i_arrayidx32_conv20_mult_x_im3_b_1_0_q;
    reg [16:0] redist36_highBBits_uid1505_i_arrayidx32_conv20_mult_x_im0_b_1_0_q;
    reg [2:0] redist37_lowRangeB_uid1499_i_arrayidx32_conv20_mult_x_im0_b_1_0_q;
    reg [14:0] redist38_sR_bottomRange_uid1229_i_arrayidx32_conv20_dupName_0_mult_x_im9_b_1_0_q;
    reg [22:0] redist39_sR_bottomRange_uid1160_i_arrayidx32_conv20_dupName_0_mult_x_im6_b_1_0_q;
    reg [22:0] redist40_sR_bottomRange_uid1091_i_arrayidx32_conv20_dupName_0_mult_x_im3_b_1_0_q;
    reg [15:0] redist41_sR_bottomRange_uid965_i_arrayidx24_conv20_mult_x_im9_b_1_0_q;
    reg [23:0] redist42_sR_bottomRange_uid896_i_arrayidx24_conv20_mult_x_im6_b_1_0_q;
    reg [23:0] redist43_sR_bottomRange_uid827_i_arrayidx24_conv20_mult_x_im3_b_1_0_q;
    reg [12:0] redist44_sR_bottomRange_uid722_i_arrayidx24_conv20_dupName_0_mult_x_im9_b_1_0_q;
    reg [20:0] redist45_sR_bottomRange_uid659_i_arrayidx24_conv20_dupName_0_mult_x_im6_b_1_0_q;
    reg [20:0] redist46_sR_bottomRange_uid596_i_arrayidx24_conv20_dupName_0_mult_x_im3_b_1_0_q;
    wire [0:0] redist47_i_masked_conv287_q_31_fifo_valid_in;
    wire redist47_i_masked_conv287_q_31_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist47_i_masked_conv287_q_31_fifo_stall_in;
    wire redist47_i_masked_conv287_q_31_fifo_stall_in_bitsignaltemp;
    wire [0:0] redist47_i_masked_conv287_q_31_fifo_data_in;
    wire [0:0] redist47_i_masked_conv287_q_31_fifo_valid_out;
    wire redist47_i_masked_conv287_q_31_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist47_i_masked_conv287_q_31_fifo_stall_out;
    wire redist47_i_masked_conv287_q_31_fifo_stall_out_bitsignaltemp;
    wire [0:0] redist47_i_masked_conv287_q_31_fifo_data_out;
    wire [0:0] redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_valid_in;
    wire redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_stall_in;
    wire redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_stall_in_bitsignaltemp;
    wire [63:0] redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_data_in;
    wire [0:0] redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_valid_out;
    wire redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_stall_out;
    wire redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_stall_out_bitsignaltemp;
    wire [63:0] redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_data_out;
    wire [0:0] redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_valid_in;
    wire redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_stall_in;
    wire redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_stall_in_bitsignaltemp;
    wire [63:0] redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_data_in;
    wire [0:0] redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_valid_out;
    wire redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_stall_out;
    wire redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_stall_out_bitsignaltemp;
    wire [63:0] redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_data_out;
    reg [63:0] redist50_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_2_0_q;
    reg [63:0] redist50_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_2_1_q;
    wire [0:0] redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_valid_in;
    wire redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_stall_in;
    wire redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_stall_in_bitsignaltemp;
    wire [63:0] redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_data_in;
    wire [0:0] redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_valid_out;
    wire redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_stall_out;
    wire redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_stall_out_bitsignaltemp;
    wire [63:0] redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_data_out;
    wire [0:0] redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_valid_in;
    wire redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_stall_in;
    wire redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_stall_in_bitsignaltemp;
    wire [31:0] redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_data_in;
    wire [0:0] redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_valid_out;
    wire redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_stall_out;
    wire redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_stall_out_bitsignaltemp;
    wire [31:0] redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_data_out;
    reg [31:0] redist53_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_2_0_q;
    reg [31:0] redist53_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_2_1_q;
    wire [0:0] redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_valid_in;
    wire redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_stall_in;
    wire redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_stall_in_bitsignaltemp;
    wire [31:0] redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_data_in;
    wire [0:0] redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_valid_out;
    wire redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_stall_out;
    wire redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_stall_out_bitsignaltemp;
    wire [31:0] redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_data_out;
    reg [31:0] redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_q;
    wire [0:0] redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_valid_in;
    wire redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_stall_in;
    wire redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_stall_in_bitsignaltemp;
    wire [31:0] redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_data_in;
    wire [0:0] redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_valid_out;
    wire redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_stall_out;
    wire redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_stall_out_bitsignaltemp;
    wire [31:0] redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_data_out;
    wire [0:0] redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_valid_in;
    wire redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_stall_in;
    wire redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_stall_in_bitsignaltemp;
    wire [31:0] redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_data_in;
    wire [0:0] redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_valid_out;
    wire redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_stall_out;
    wire redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_stall_out_bitsignaltemp;
    wire [31:0] redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_data_out;
    reg [31:0] redist58_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_27_0_q;
    wire [0:0] redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_valid_in;
    wire redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_stall_in;
    wire redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_stall_in_bitsignaltemp;
    wire [31:0] redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_data_in;
    wire [0:0] redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_valid_out;
    wire redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_stall_out;
    wire redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_stall_out_bitsignaltemp;
    wire [31:0] redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_data_out;
    wire [0:0] redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_valid_in;
    wire redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_stall_in;
    wire redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_stall_in_bitsignaltemp;
    wire [31:0] redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_data_in;
    wire [0:0] redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_valid_out;
    wire redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_stall_out;
    wire redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_stall_out_bitsignaltemp;
    wire [31:0] redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_data_out;
    wire [0:0] redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_valid_in;
    wire redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_stall_in;
    wire redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_stall_in_bitsignaltemp;
    wire [31:0] redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_data_in;
    wire [0:0] redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_valid_out;
    wire redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_stall_out;
    wire redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_stall_out_bitsignaltemp;
    wire [31:0] redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_data_out;
    wire [0:0] redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_valid_in;
    wire redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_stall_in;
    wire redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_stall_in_bitsignaltemp;
    wire [1:0] redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_data_in;
    wire [0:0] redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_valid_out;
    wire redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_stall_out;
    wire redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_stall_out_bitsignaltemp;
    wire [1:0] redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_data_out;
    wire [0:0] redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_valid_in;
    wire redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_stall_in;
    wire redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_stall_in_bitsignaltemp;
    wire [0:0] redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_data_in;
    wire [0:0] redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_valid_out;
    wire redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_stall_out;
    wire redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_stall_out_bitsignaltemp;
    wire [0:0] redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_data_out;
    wire [0:0] redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_valid_in;
    wire redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_stall_in;
    wire redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_stall_in_bitsignaltemp;
    wire [0:0] redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_data_in;
    wire [0:0] redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_valid_out;
    wire redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_stall_out;
    wire redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_stall_out_bitsignaltemp;
    wire [0:0] redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_data_out;
    wire [0:0] redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_valid_in;
    wire redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_stall_in;
    wire redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_stall_in_bitsignaltemp;
    wire [0:0] redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_data_in;
    wire [0:0] redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_valid_out;
    wire redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_stall_out;
    wire redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_stall_out_bitsignaltemp;
    wire [0:0] redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_data_out;
    wire [0:0] redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_valid_in;
    wire redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_stall_in;
    wire redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_stall_in_bitsignaltemp;
    wire [0:0] redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_data_in;
    wire [0:0] redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_valid_out;
    wire redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_stall_out;
    wire redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_stall_out_bitsignaltemp;
    wire [0:0] redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_data_out;
    wire [0:0] redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_valid_in;
    wire redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_stall_in;
    wire redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_stall_in_bitsignaltemp;
    wire [0:0] redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_data_in;
    wire [0:0] redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_valid_out;
    wire redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_stall_out;
    wire redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_stall_out_bitsignaltemp;
    wire [0:0] redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_data_out;
    wire [0:0] redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_valid_in;
    wire redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_stall_in;
    wire redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_stall_in_bitsignaltemp;
    wire [0:0] redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_data_in;
    wire [0:0] redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_valid_out;
    wire redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_stall_out;
    wire redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_stall_out_bitsignaltemp;
    wire [0:0] redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_data_out;
    wire [0:0] redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_valid_in;
    wire redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_stall_in;
    wire redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_stall_in_bitsignaltemp;
    wire [0:0] redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_data_in;
    wire [0:0] redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_valid_out;
    wire redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_stall_out;
    wire redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_stall_out_bitsignaltemp;
    wire [0:0] redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_data_out;
    wire [0:0] redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_valid_in;
    wire redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_stall_in;
    wire redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_stall_in_bitsignaltemp;
    wire [0:0] redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_data_in;
    wire [0:0] redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_valid_out;
    wire redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_stall_out;
    wire redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_stall_out_bitsignaltemp;
    wire [0:0] redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_data_out;
    wire [0:0] redist71_i_first_cleanup_xor_conv273_q_67_fifo_valid_in;
    wire redist71_i_first_cleanup_xor_conv273_q_67_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist71_i_first_cleanup_xor_conv273_q_67_fifo_stall_in;
    wire redist71_i_first_cleanup_xor_conv273_q_67_fifo_stall_in_bitsignaltemp;
    wire [0:0] redist71_i_first_cleanup_xor_conv273_q_67_fifo_data_in;
    wire [0:0] redist71_i_first_cleanup_xor_conv273_q_67_fifo_valid_out;
    wire redist71_i_first_cleanup_xor_conv273_q_67_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist71_i_first_cleanup_xor_conv273_q_67_fifo_stall_out;
    wire redist71_i_first_cleanup_xor_conv273_q_67_fifo_stall_out_bitsignaltemp;
    wire [0:0] redist71_i_first_cleanup_xor_conv273_q_67_fifo_data_out;
    wire [0:0] redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_valid_in;
    wire redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_stall_in;
    wire redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_stall_in_bitsignaltemp;
    wire [0:0] redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_data_in;
    wire [0:0] redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_valid_out;
    wire redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_stall_out;
    wire redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_stall_out_bitsignaltemp;
    wire [0:0] redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_data_out;
    reg [0:0] redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_q;
    reg [0:0] redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_q;
    reg [0:0] redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_q;
    reg [0:0] redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_q;
    reg [0:0] redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_q;
    reg [0:0] redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_q;
    reg [0:0] redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_q;
    reg [0:0] redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_q;
    wire [0:0] redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_valid_in;
    wire redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_stall_in;
    wire redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_stall_in_bitsignaltemp;
    wire [0:0] redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_data_in;
    wire [0:0] redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_valid_out;
    wire redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_stall_out;
    wire redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_stall_out_bitsignaltemp;
    wire [0:0] redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_data_out;
    wire [0:0] redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_valid_in;
    wire redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_stall_in;
    wire redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_stall_in_bitsignaltemp;
    wire [0:0] redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_data_in;
    wire [0:0] redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_valid_out;
    wire redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_stall_out;
    wire redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_stall_out_bitsignaltemp;
    wire [0:0] redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_data_out;
    wire [0:0] redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_valid_in;
    wire redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_stall_in;
    wire redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_stall_in_bitsignaltemp;
    wire [31:0] redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_data_in;
    wire [0:0] redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_valid_out;
    wire redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_stall_out;
    wire redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_stall_out_bitsignaltemp;
    wire [31:0] redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_data_out;
    wire [0:0] redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_valid_in;
    wire redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_stall_in;
    wire redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_stall_in_bitsignaltemp;
    wire [31:0] redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_data_in;
    wire [0:0] redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_valid_out;
    wire redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_stall_out;
    wire redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_stall_out_bitsignaltemp;
    wire [31:0] redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_data_out;
    wire [0:0] redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_valid_in;
    wire redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_stall_in;
    wire redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_stall_in_bitsignaltemp;
    wire [31:0] redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_data_in;
    wire [0:0] redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_valid_out;
    wire redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_stall_out;
    wire redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_stall_out_bitsignaltemp;
    wire [31:0] redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_data_out;
    wire [0:0] redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_valid_in;
    wire redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_valid_in_bitsignaltemp;
    wire [0:0] redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_stall_in;
    wire redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_stall_in_bitsignaltemp;
    wire [31:0] redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_data_in;
    wire [0:0] redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_valid_out;
    wire redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_valid_out_bitsignaltemp;
    wire [0:0] redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_stall_out;
    wire redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_stall_out_bitsignaltemp;
    wire [31:0] redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_data_out;
    wire [0:0] coalesced_delay_0_fifo_valid_in;
    wire coalesced_delay_0_fifo_valid_in_bitsignaltemp;
    wire [0:0] coalesced_delay_0_fifo_stall_in;
    wire coalesced_delay_0_fifo_stall_in_bitsignaltemp;
    wire [64:0] coalesced_delay_0_fifo_data_in;
    wire [0:0] coalesced_delay_0_fifo_valid_out;
    wire coalesced_delay_0_fifo_valid_out_bitsignaltemp;
    wire [0:0] coalesced_delay_0_fifo_stall_out;
    wire coalesced_delay_0_fifo_stall_out_bitsignaltemp;
    wire [64:0] coalesced_delay_0_fifo_data_out;
    wire [0:0] coalesced_delay_1_fifo_valid_in;
    wire coalesced_delay_1_fifo_valid_in_bitsignaltemp;
    wire [0:0] coalesced_delay_1_fifo_stall_in;
    wire coalesced_delay_1_fifo_stall_in_bitsignaltemp;
    wire [1:0] coalesced_delay_1_fifo_data_in;
    wire [0:0] coalesced_delay_1_fifo_valid_out;
    wire coalesced_delay_1_fifo_valid_out_bitsignaltemp;
    wire [0:0] coalesced_delay_1_fifo_stall_out;
    wire coalesced_delay_1_fifo_stall_out_bitsignaltemp;
    wire [1:0] coalesced_delay_1_fifo_data_out;
    wire [0:0] coalesced_delay_2_fifo_valid_in;
    wire coalesced_delay_2_fifo_valid_in_bitsignaltemp;
    wire [0:0] coalesced_delay_2_fifo_stall_in;
    wire coalesced_delay_2_fifo_stall_in_bitsignaltemp;
    wire [128:0] coalesced_delay_2_fifo_data_in;
    wire [0:0] coalesced_delay_2_fifo_valid_out;
    wire coalesced_delay_2_fifo_valid_out_bitsignaltemp;
    wire [0:0] coalesced_delay_2_fifo_stall_out;
    wire coalesced_delay_2_fifo_stall_out_bitsignaltemp;
    wire [128:0] coalesced_delay_2_fifo_data_out;
    wire [0:0] coalesced_delay_3_fifo_valid_in;
    wire coalesced_delay_3_fifo_valid_in_bitsignaltemp;
    wire [0:0] coalesced_delay_3_fifo_stall_in;
    wire coalesced_delay_3_fifo_stall_in_bitsignaltemp;
    wire [63:0] coalesced_delay_3_fifo_data_in;
    wire [0:0] coalesced_delay_3_fifo_valid_out;
    wire coalesced_delay_3_fifo_valid_out_bitsignaltemp;
    wire [0:0] coalesced_delay_3_fifo_stall_out;
    wire coalesced_delay_3_fifo_stall_out_bitsignaltemp;
    wire [63:0] coalesced_delay_3_fifo_data_out;
    wire [0:0] coalesced_delay_4_fifo_valid_in;
    wire coalesced_delay_4_fifo_valid_in_bitsignaltemp;
    wire [0:0] coalesced_delay_4_fifo_stall_in;
    wire coalesced_delay_4_fifo_stall_in_bitsignaltemp;
    wire [9:0] coalesced_delay_4_fifo_data_in;
    wire [0:0] coalesced_delay_4_fifo_valid_out;
    wire coalesced_delay_4_fifo_valid_out_bitsignaltemp;
    wire [0:0] coalesced_delay_4_fifo_stall_out;
    wire coalesced_delay_4_fifo_stall_out_bitsignaltemp;
    wire [9:0] coalesced_delay_4_fifo_data_out;
    reg [63:0] coalesced_delay_5_0_q;
    wire [431:0] bubble_join_conv2_B7_merge_reg_aunroll_x_q;
    wire [0:0] bubble_select_conv2_B7_merge_reg_aunroll_x_b;
    wire [31:0] bubble_select_conv2_B7_merge_reg_aunroll_x_c;
    wire [31:0] bubble_select_conv2_B7_merge_reg_aunroll_x_d;
    wire [31:0] bubble_select_conv2_B7_merge_reg_aunroll_x_e;
    wire [31:0] bubble_select_conv2_B7_merge_reg_aunroll_x_f;
    wire [31:0] bubble_select_conv2_B7_merge_reg_aunroll_x_g;
    wire [0:0] bubble_select_conv2_B7_merge_reg_aunroll_x_h;
    wire [0:0] bubble_select_conv2_B7_merge_reg_aunroll_x_i;
    wire [0:0] bubble_select_conv2_B7_merge_reg_aunroll_x_j;
    wire [0:0] bubble_select_conv2_B7_merge_reg_aunroll_x_k;
    wire [0:0] bubble_select_conv2_B7_merge_reg_aunroll_x_l;
    wire [31:0] bubble_select_conv2_B7_merge_reg_aunroll_x_m;
    wire [0:0] bubble_select_conv2_B7_merge_reg_aunroll_x_n;
    wire [0:0] bubble_select_conv2_B7_merge_reg_aunroll_x_o;
    wire [0:0] bubble_select_conv2_B7_merge_reg_aunroll_x_p;
    wire [0:0] bubble_select_conv2_B7_merge_reg_aunroll_x_q;
    wire [63:0] bubble_select_conv2_B7_merge_reg_aunroll_x_r;
    wire [63:0] bubble_select_conv2_B7_merge_reg_aunroll_x_s;
    wire [31:0] bubble_select_conv2_B7_merge_reg_aunroll_x_t;
    wire [63:0] bubble_select_conv2_B7_merge_reg_aunroll_x_u;
    wire [0:0] bubble_select_conv2_B7_merge_reg_aunroll_x_v;
    wire [0:0] bubble_select_conv2_B7_merge_reg_aunroll_x_w;
    wire [0:0] bubble_select_conv2_B7_merge_reg_aunroll_x_x;
    wire [0:0] bubble_select_conv2_B7_merge_reg_aunroll_x_y;
    wire [0:0] bubble_select_conv2_B7_merge_reg_aunroll_x_z;
    wire [0:0] bubble_select_conv2_B7_merge_reg_aunroll_x_aa;
    wire [31:0] bubble_join_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_q;
    wire [31:0] bubble_select_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_b;
    wire [63:0] bubble_join_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_q;
    wire [63:0] bubble_select_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_b;
    wire [63:0] bubble_join_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_q;
    wire [63:0] bubble_select_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_b;
    wire [0:0] bubble_join_i_llvm_fpga_mem_memdep_conv2100_q;
    wire [0:0] bubble_select_i_llvm_fpga_mem_memdep_conv2100_b;
    wire [31:0] bubble_join_i_llvm_fpga_mem_pn1_conv296_q;
    wire [31:0] bubble_select_i_llvm_fpga_mem_pn1_conv296_b;
    wire [31:0] bubble_join_i_llvm_fpga_mem_unnamed_conv28_conv294_q;
    wire [31:0] bubble_select_i_llvm_fpga_mem_unnamed_conv28_conv294_b;
    wire [31:0] bubble_join_i_llvm_fpga_mem_unnamed_conv29_conv295_q;
    wire [31:0] bubble_select_i_llvm_fpga_mem_unnamed_conv29_conv295_b;
    wire [0:0] bubble_join_i_llvm_fpga_pipeline_keep_going_conv23_q;
    wire [0:0] bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b;
    wire [0:0] bubble_join_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_q;
    wire [0:0] bubble_select_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_b;
    wire [0:0] bubble_join_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_q;
    wire [0:0] bubble_select_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_b;
    wire [0:0] bubble_join_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_q;
    wire [0:0] bubble_select_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_b;
    wire [0:0] bubble_join_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_q;
    wire [0:0] bubble_select_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_b;
    wire [0:0] bubble_join_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_q;
    wire [0:0] bubble_select_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_b;
    wire [0:0] bubble_join_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_q;
    wire [0:0] bubble_select_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_b;
    wire [0:0] bubble_join_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_q;
    wire [0:0] bubble_select_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_b;
    wire [0:0] bubble_join_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_q;
    wire [0:0] bubble_select_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_b;
    wire [0:0] bubble_join_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_q;
    wire [0:0] bubble_select_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_b;
    wire [0:0] bubble_join_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_q;
    wire [0:0] bubble_select_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_b;
    wire [0:0] bubble_join_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_q;
    wire [0:0] bubble_select_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_b;
    wire [0:0] bubble_join_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_q;
    wire [0:0] bubble_select_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_b;
    wire [0:0] bubble_join_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_q;
    wire [0:0] bubble_select_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_b;
    wire [0:0] bubble_join_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_q;
    wire [0:0] bubble_select_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_b;
    wire [0:0] bubble_join_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_q;
    wire [0:0] bubble_select_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_b;
    wire [0:0] bubble_join_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_q;
    wire [0:0] bubble_select_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_b;
    wire [1:0] bubble_join_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_q;
    wire [1:0] bubble_select_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_b;
    wire [1:0] bubble_join_i_llvm_fpga_pop_i2_initerations_pop80_conv24_q;
    wire [1:0] bubble_select_i_llvm_fpga_pop_i2_initerations_pop80_conv24_b;
    wire [31:0] bubble_join_i_llvm_fpga_pop_i32_add136_pop103_conv212_q;
    wire [31:0] bubble_select_i_llvm_fpga_pop_i32_add136_pop103_conv212_b;
    wire [31:0] bubble_join_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_q;
    wire [31:0] bubble_select_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_b;
    wire [31:0] bubble_join_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_q;
    wire [31:0] bubble_select_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_b;
    wire [31:0] bubble_join_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_q;
    wire [31:0] bubble_select_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_b;
    wire [31:0] bubble_join_i_llvm_fpga_pop_i32_j_034_pop78_conv25_q;
    wire [31:0] bubble_select_i_llvm_fpga_pop_i32_j_034_pop78_conv25_b;
    wire [31:0] bubble_join_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_q;
    wire [31:0] bubble_select_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_b;
    wire [31:0] bubble_join_i_llvm_fpga_pop_i32_pop102_conv210_q;
    wire [31:0] bubble_select_i_llvm_fpga_pop_i32_pop102_conv210_b;
    wire [31:0] bubble_join_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_q;
    wire [31:0] bubble_select_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_b;
    wire [3:0] bubble_join_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_q;
    wire [3:0] bubble_select_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_b;
    wire [63:0] bubble_join_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_q;
    wire [63:0] bubble_select_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_b;
    wire [63:0] bubble_join_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_q;
    wire [63:0] bubble_select_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_b;
    wire [63:0] bubble_join_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_q;
    wire [63:0] bubble_select_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_b;
    wire [431:0] bubble_join_stall_entry_q;
    wire [31:0] bubble_select_stall_entry_b;
    wire [63:0] bubble_select_stall_entry_c;
    wire [63:0] bubble_select_stall_entry_d;
    wire [31:0] bubble_select_stall_entry_e;
    wire [31:0] bubble_select_stall_entry_f;
    wire [0:0] bubble_select_stall_entry_g;
    wire [0:0] bubble_select_stall_entry_h;
    wire [0:0] bubble_select_stall_entry_i;
    wire [0:0] bubble_select_stall_entry_j;
    wire [0:0] bubble_select_stall_entry_k;
    wire [0:0] bubble_select_stall_entry_l;
    wire [31:0] bubble_select_stall_entry_m;
    wire [63:0] bubble_select_stall_entry_n;
    wire [31:0] bubble_select_stall_entry_o;
    wire [0:0] bubble_select_stall_entry_p;
    wire [0:0] bubble_select_stall_entry_q;
    wire [0:0] bubble_select_stall_entry_r;
    wire [0:0] bubble_select_stall_entry_s;
    wire [0:0] bubble_select_stall_entry_t;
    wire [0:0] bubble_select_stall_entry_u;
    wire [0:0] bubble_select_stall_entry_v;
    wire [0:0] bubble_select_stall_entry_w;
    wire [0:0] bubble_select_stall_entry_x;
    wire [0:0] bubble_select_stall_entry_y;
    wire [31:0] bubble_select_stall_entry_z;
    wire [31:0] bubble_select_stall_entry_aa;
    wire [0:0] bubble_join_redist47_i_masked_conv287_q_31_fifo_q;
    wire [0:0] bubble_select_redist47_i_masked_conv287_q_31_fifo_b;
    wire [63:0] bubble_join_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_q;
    wire [63:0] bubble_select_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_b;
    wire [63:0] bubble_join_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_q;
    wire [63:0] bubble_select_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_b;
    wire [63:0] bubble_join_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_q;
    wire [63:0] bubble_select_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_b;
    wire [31:0] bubble_join_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_q;
    wire [31:0] bubble_select_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_b;
    wire [31:0] bubble_join_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_q;
    wire [31:0] bubble_select_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_b;
    wire [31:0] bubble_join_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_q;
    wire [31:0] bubble_select_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_b;
    wire [31:0] bubble_join_redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_q;
    wire [31:0] bubble_select_redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_b;
    wire [31:0] bubble_join_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_q;
    wire [31:0] bubble_select_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_b;
    wire [31:0] bubble_join_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_q;
    wire [31:0] bubble_select_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_b;
    wire [31:0] bubble_join_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_q;
    wire [31:0] bubble_select_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_b;
    wire [1:0] bubble_join_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_q;
    wire [1:0] bubble_select_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_b;
    wire [0:0] bubble_join_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_q;
    wire [0:0] bubble_select_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_b;
    wire [0:0] bubble_join_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_q;
    wire [0:0] bubble_select_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_b;
    wire [0:0] bubble_join_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_q;
    wire [0:0] bubble_select_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_b;
    wire [0:0] bubble_join_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_q;
    wire [0:0] bubble_select_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_b;
    wire [0:0] bubble_join_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_q;
    wire [0:0] bubble_select_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_b;
    wire [0:0] bubble_join_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_q;
    wire [0:0] bubble_select_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_b;
    wire [0:0] bubble_join_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_q;
    wire [0:0] bubble_select_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_b;
    wire [0:0] bubble_join_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_q;
    wire [0:0] bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b;
    wire [0:0] bubble_join_redist71_i_first_cleanup_xor_conv273_q_67_fifo_q;
    wire [0:0] bubble_select_redist71_i_first_cleanup_xor_conv273_q_67_fifo_b;
    wire [0:0] bubble_join_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_q;
    wire [0:0] bubble_select_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_b;
    wire [0:0] bubble_join_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_q;
    wire [0:0] bubble_select_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_b;
    wire [0:0] bubble_join_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_q;
    wire [0:0] bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b;
    wire [31:0] bubble_join_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_q;
    wire [31:0] bubble_select_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_b;
    wire [31:0] bubble_join_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_q;
    wire [31:0] bubble_select_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_b;
    wire [31:0] bubble_join_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_q;
    wire [31:0] bubble_select_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_b;
    wire [31:0] bubble_join_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_q;
    wire [31:0] bubble_select_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_b;
    wire [64:0] bubble_join_coalesced_delay_0_fifo_q;
    wire [64:0] bubble_select_coalesced_delay_0_fifo_b;
    wire [1:0] bubble_join_coalesced_delay_1_fifo_q;
    wire [1:0] bubble_select_coalesced_delay_1_fifo_b;
    wire [128:0] bubble_join_coalesced_delay_2_fifo_q;
    wire [128:0] bubble_select_coalesced_delay_2_fifo_b;
    wire [63:0] bubble_join_coalesced_delay_3_fifo_q;
    wire [63:0] bubble_select_coalesced_delay_3_fifo_b;
    wire [9:0] bubble_join_coalesced_delay_4_fifo_q;
    wire [9:0] bubble_select_coalesced_delay_4_fifo_b;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_wireValid;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_wireStall;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_StallValid;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_toReg0;
    reg [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_fromReg0;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_consumed0;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_toReg1;
    reg [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_fromReg1;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_consumed1;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_toReg2;
    reg [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_fromReg2;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_consumed2;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_toReg3;
    reg [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_fromReg3;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_consumed3;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_toReg4;
    reg [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_fromReg4;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_consumed4;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_toReg5;
    reg [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_fromReg5;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_consumed5;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_toReg6;
    reg [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_fromReg6;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_consumed6;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_toReg7;
    reg [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_fromReg7;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_consumed7;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_toReg8;
    reg [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_fromReg8;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_consumed8;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_toReg9;
    reg [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_fromReg9;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_consumed9;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_toReg10;
    reg [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_fromReg10;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_consumed10;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_toReg11;
    reg [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_fromReg11;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_consumed11;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_toReg12;
    reg [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_fromReg12;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_consumed12;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_toReg13;
    reg [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_fromReg13;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_consumed13;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_or0;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_or1;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_or2;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_or3;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_or4;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_or5;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_or6;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_or7;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_or8;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_or9;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_or10;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_or11;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_or12;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_backStall;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_V0;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_V1;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_V2;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_V3;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_V4;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_V5;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_V6;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_V7;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_V8;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_V9;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_V10;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_V11;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_V12;
    wire [0:0] SE_out_conv2_B7_merge_reg_aunroll_x_V13;
    wire [0:0] SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_wireValid;
    wire [0:0] SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_backStall;
    wire [0:0] SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_V0;
    wire [0:0] SE_i_add22_conv263_wireValid;
    wire [0:0] SE_i_add22_conv263_and0;
    wire [0:0] SE_i_add22_conv263_backStall;
    wire [0:0] SE_i_add22_conv263_V0;
    wire [0:0] SE_i_arrayidx34_arrayidx64_conv288_wireValid;
    wire [0:0] SE_i_arrayidx34_arrayidx64_conv288_backStall;
    wire [0:0] SE_i_arrayidx34_arrayidx64_conv288_V0;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_or0;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_backStall;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_V0;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_V1;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_or0;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_backStall;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_V0;
    wire [0:0] SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_V1;
    wire [0:0] SE_out_i_llvm_fpga_mem_memdep_conv2100_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_mem_memdep_conv2100_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_mem_memdep_conv2100_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_mem_memdep_conv2100_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_mem_memdep_conv2100_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_mem_memdep_conv2100_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_mem_memdep_conv2100_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_mem_memdep_conv2100_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_mem_memdep_conv2100_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_mem_memdep_conv2100_or0;
    wire [0:0] SE_out_i_llvm_fpga_mem_memdep_conv2100_backStall;
    wire [0:0] SE_out_i_llvm_fpga_mem_memdep_conv2100_V0;
    wire [0:0] SE_out_i_llvm_fpga_mem_memdep_conv2100_V1;
    wire [0:0] SE_out_i_llvm_fpga_mem_unnamed_conv29_conv295_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_mem_unnamed_conv29_conv295_and0;
    wire [0:0] SE_out_i_llvm_fpga_mem_unnamed_conv29_conv295_and1;
    wire [0:0] SE_out_i_llvm_fpga_mem_unnamed_conv29_conv295_backStall;
    wire [0:0] SE_out_i_llvm_fpga_mem_unnamed_conv29_conv295_V0;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg2;
    reg [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg2;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed2;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg3;
    reg [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg3;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed3;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg4;
    reg [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg4;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed4;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg5;
    reg [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg5;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed5;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg6;
    reg [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg6;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed6;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg7;
    reg [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg7;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed7;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg8;
    reg [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg8;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed8;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg9;
    reg [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg9;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed9;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg10;
    reg [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg10;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed10;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg11;
    reg [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg11;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed11;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg12;
    reg [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg12;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed12;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg13;
    reg [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg13;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed13;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg14;
    reg [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg14;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed14;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg15;
    reg [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg15;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed15;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg16;
    reg [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg16;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed16;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg17;
    reg [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg17;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed17;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg18;
    reg [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg18;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed18;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg19;
    reg [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg19;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed19;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or0;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or1;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or2;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or3;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or4;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or5;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or6;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or7;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or8;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or9;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or10;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or11;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or12;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or13;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or14;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or15;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or16;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or17;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or18;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V0;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V1;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V2;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V3;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V4;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V5;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V6;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V7;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V8;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V9;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V10;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V11;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V12;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V13;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V14;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V15;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V16;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V17;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V18;
    wire [0:0] SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V19;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_toReg2;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_fromReg2;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_consumed2;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_and0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_and1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_or1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_V2;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_toReg2;
    reg [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg2;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed2;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_toReg3;
    reg [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg3;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed3;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_toReg4;
    reg [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg4;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed4;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_toReg5;
    reg [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg5;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed5;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_or1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_or2;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_or3;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_or4;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_V2;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_V3;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_V4;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_V5;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_pop102_conv210_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_pop102_conv210_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_pop102_conv210_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_pop102_conv210_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i32_pop102_conv210_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_pop102_conv210_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_pop102_conv210_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i32_pop102_conv210_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_pop102_conv210_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_pop102_conv210_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_pop102_conv210_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_pop102_conv210_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_pop102_conv210_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_toReg2;
    reg [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg2;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_consumed2;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_toReg3;
    reg [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg3;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_consumed3;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_toReg4;
    reg [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg4;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_consumed4;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_or1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_or2;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_or3;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_V2;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_V3;
    wire [0:0] SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_V4;
    wire [0:0] SE_out_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_V1;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_wireStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_StallValid;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_toReg0;
    reg [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_fromReg0;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_consumed0;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_toReg1;
    reg [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_fromReg1;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_consumed1;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_or0;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_backStall;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_V0;
    wire [0:0] SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_V1;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_wireValid;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_V0;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_wireValid;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_V0;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_wireValid;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_V0;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_wireValid;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_V0;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_wireValid;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_V0;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_backStall;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_lastiniteration_conv285_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_lastiniteration_conv285_backStall;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_conv252_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_conv252_backStall;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_conv271_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_conv271_backStall;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_conv267_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_conv267_backStall;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_conv259_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_conv259_backStall;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_conv256_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_conv256_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_wireValid;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_V0;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_wireValid;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_V0;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_wireValid;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_V0;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_wireValid;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_V0;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_wireValid;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_V0;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_wireValid;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_V0;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_wireValid;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_V0;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_notexitcond_conv278_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i1_notexitcond_conv278_backStall;
    wire [0:0] SE_out_i_llvm_fpga_push_i2_cleanups_push81_conv293_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i2_cleanups_push81_conv293_backStall;
    wire [0:0] SE_out_i_llvm_fpga_push_i2_initerations_push80_conv274_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i2_initerations_push80_conv274_backStall;
    wire [0:0] SE_out_i_llvm_fpga_push_i32_add136_push103_conv248_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i32_add136_push103_conv248_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_wireValid;
    wire [0:0] SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_V0;
    wire [0:0] SE_out_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_backStall;
    wire [0:0] SE_out_i_llvm_fpga_push_i32_col_037_pop27113_push92_conv262_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i32_col_037_pop27113_push92_conv262_backStall;
    wire [0:0] SE_out_i_llvm_fpga_push_i32_i_035_pop56135_push101_conv241_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i32_i_035_pop56135_push101_conv241_backStall;
    wire [0:0] SE_out_i_llvm_fpga_push_i32_j_034_push78_conv276_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i32_j_034_push78_conv276_backStall;
    wire [0:0] SE_out_i_llvm_fpga_push_i32_k_036_pop38132_push99_conv243_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i32_k_036_pop38132_push99_conv243_backStall;
    wire [0:0] SE_out_i_llvm_fpga_push_i32_push102_conv245_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i32_push102_conv245_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_wireValid;
    wire [0:0] SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_V0;
    wire [0:0] SE_out_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_wireValid;
    wire [0:0] SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_V0;
    wire [0:0] SE_out_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_backStall;
    wire [0:0] SE_out_i_llvm_fpga_push_i64_idxprom25107_push90_conv260_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_i64_idxprom25107_push90_conv260_backStall;
    wire [0:0] SE_out_i_llvm_fpga_push_p1024f32_arrayidx34110_push91_conv261_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_p1024f32_arrayidx34110_push91_conv261_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_wireValid;
    wire [0:0] SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_backStall;
    wire [0:0] SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_V0;
    wire [0:0] SE_out_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_wireValid;
    wire [0:0] SE_out_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_backStall;
    reg [0:0] SE_i_masked_conv287_R_v_0;
    wire [0:0] SE_i_masked_conv287_v_s_0;
    wire [0:0] SE_i_masked_conv287_s_tv_0;
    wire [0:0] SE_i_masked_conv287_backEN;
    wire [0:0] SE_i_masked_conv287_backStall;
    wire [0:0] SE_i_masked_conv287_V0;
    wire [0:0] SE_i_next_initerations_conv235_vt_select_0_wireValid;
    wire [0:0] SE_i_next_initerations_conv235_vt_select_0_wireStall;
    wire [0:0] SE_i_next_initerations_conv235_vt_select_0_StallValid;
    wire [0:0] SE_i_next_initerations_conv235_vt_select_0_toReg0;
    reg [0:0] SE_i_next_initerations_conv235_vt_select_0_fromReg0;
    wire [0:0] SE_i_next_initerations_conv235_vt_select_0_consumed0;
    wire [0:0] SE_i_next_initerations_conv235_vt_select_0_toReg1;
    reg [0:0] SE_i_next_initerations_conv235_vt_select_0_fromReg1;
    wire [0:0] SE_i_next_initerations_conv235_vt_select_0_consumed1;
    wire [0:0] SE_i_next_initerations_conv235_vt_select_0_or0;
    wire [0:0] SE_i_next_initerations_conv235_vt_select_0_backStall;
    wire [0:0] SE_i_next_initerations_conv235_vt_select_0_V0;
    wire [0:0] SE_i_next_initerations_conv235_vt_select_0_V1;
    wire [0:0] SE_i_reduction_conv2_0_conv272_wireValid;
    wire [0:0] SE_i_reduction_conv2_0_conv272_and0;
    wire [0:0] SE_i_reduction_conv2_0_conv272_backStall;
    wire [0:0] SE_i_reduction_conv2_0_conv272_V0;
    wire [0:0] SE_i_reduction_conv2_1_conv268_wireValid;
    wire [0:0] SE_i_reduction_conv2_1_conv268_and0;
    wire [0:0] SE_i_reduction_conv2_1_conv268_backStall;
    wire [0:0] SE_i_reduction_conv2_1_conv268_V0;
    reg [0:0] SE_i_reduction_conv2_2_conv284_R_v_0;
    wire [0:0] SE_i_reduction_conv2_2_conv284_v_s_0;
    wire [0:0] SE_i_reduction_conv2_2_conv284_s_tv_0;
    wire [0:0] SE_i_reduction_conv2_2_conv284_backEN;
    wire [0:0] SE_i_reduction_conv2_2_conv284_and0;
    wire [0:0] SE_i_reduction_conv2_2_conv284_backStall;
    wire [0:0] SE_i_reduction_conv2_2_conv284_V0;
    reg [0:0] SE_i_unnamed_conv246_R_v_0;
    wire [0:0] SE_i_unnamed_conv246_v_s_0;
    wire [0:0] SE_i_unnamed_conv246_s_tv_0;
    wire [0:0] SE_i_unnamed_conv246_backEN;
    wire [0:0] SE_i_unnamed_conv246_backStall;
    wire [0:0] SE_i_unnamed_conv246_V0;
    reg [0:0] SE_i_unnamed_conv281_R_v_0;
    wire [0:0] SE_i_unnamed_conv281_v_s_0;
    wire [0:0] SE_i_unnamed_conv281_s_tv_0;
    wire [0:0] SE_i_unnamed_conv281_backEN;
    wire [0:0] SE_i_unnamed_conv281_backStall;
    wire [0:0] SE_i_unnamed_conv281_V0;
    wire [0:0] SE_stall_entry_wireValid;
    wire [0:0] SE_stall_entry_backStall;
    wire [0:0] SE_stall_entry_V0;
    reg [0:0] SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_R_v_0;
    wire [0:0] SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_v_s_0;
    wire [0:0] SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_s_tv_0;
    wire [0:0] SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_backEN;
    wire [0:0] SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_backStall;
    wire [0:0] SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_V0;
    reg [0:0] SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_R_v_0;
    reg [0:0] SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_R_v_1;
    wire [0:0] SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_v_s_0;
    wire [0:0] SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_s_tv_0;
    wire [0:0] SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_s_tv_1;
    wire [0:0] SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_backEN;
    wire [0:0] SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_or0;
    wire [0:0] SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_backStall;
    wire [0:0] SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_V0;
    wire [0:0] SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_V1;
    reg [0:0] SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_R_v_0;
    wire [0:0] SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_v_s_0;
    wire [0:0] SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_s_tv_0;
    wire [0:0] SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN;
    wire [0:0] SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backStall;
    wire [0:0] SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_V0;
    reg [0:0] SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_R_v_0;
    reg [0:0] SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_R_v_1;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_s_tv_1;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_backEN;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_or0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_backStall;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_V0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_V1;
    reg [0:0] SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_R_v_0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_backEN;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_backStall;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_V0;
    reg [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_R_v_0;
    reg [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_R_v_1;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_s_tv_1;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_backEN;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_or0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_backStall;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_V0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_V1;
    reg [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_R_v_0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_backEN;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_backStall;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_V0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_wireValid;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_backStall;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_V0;
    reg [0:0] SE_i_arrayidx24_conv20_add_x_p1_of_2_R_v_0;
    reg [0:0] SE_i_arrayidx24_conv20_add_x_p1_of_2_R_v_1;
    wire [0:0] SE_i_arrayidx24_conv20_add_x_p1_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx24_conv20_add_x_p1_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx24_conv20_add_x_p1_of_2_s_tv_1;
    wire [0:0] SE_i_arrayidx24_conv20_add_x_p1_of_2_backEN;
    wire [0:0] SE_i_arrayidx24_conv20_add_x_p1_of_2_or0;
    wire [0:0] SE_i_arrayidx24_conv20_add_x_p1_of_2_backStall;
    wire [0:0] SE_i_arrayidx24_conv20_add_x_p1_of_2_V0;
    wire [0:0] SE_i_arrayidx24_conv20_add_x_p1_of_2_V1;
    reg [0:0] SE_i_arrayidx24_conv20_add_x_p2_of_2_R_v_0;
    wire [0:0] SE_i_arrayidx24_conv20_add_x_p2_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx24_conv20_add_x_p2_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx24_conv20_add_x_p2_of_2_backEN;
    wire [0:0] SE_i_arrayidx24_conv20_add_x_p2_of_2_backStall;
    wire [0:0] SE_i_arrayidx24_conv20_add_x_p2_of_2_V0;
    reg [0:0] SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_R_v_0;
    reg [0:0] SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_R_v_1;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_s_tv_1;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_backEN;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_or0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_backStall;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_V0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_V1;
    reg [0:0] SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_R_v_0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_backEN;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_backStall;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_V0;
    reg [0:0] SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_R_v_0;
    reg [0:0] SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_R_v_1;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_s_tv_1;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_backEN;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_or0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_backStall;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_V0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_V1;
    reg [0:0] SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_R_v_0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_backEN;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_backStall;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_V0;
    reg [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_R_v_0;
    reg [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_R_v_1;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_s_tv_1;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_backEN;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_or0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_backStall;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_V0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_V1;
    reg [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_R_v_0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_backEN;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_backStall;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_V0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_wireValid;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_backStall;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_V0;
    reg [0:0] SE_i_arrayidx32_conv20_add_x_p1_of_2_R_v_0;
    reg [0:0] SE_i_arrayidx32_conv20_add_x_p1_of_2_R_v_1;
    wire [0:0] SE_i_arrayidx32_conv20_add_x_p1_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx32_conv20_add_x_p1_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx32_conv20_add_x_p1_of_2_s_tv_1;
    wire [0:0] SE_i_arrayidx32_conv20_add_x_p1_of_2_backEN;
    wire [0:0] SE_i_arrayidx32_conv20_add_x_p1_of_2_or0;
    wire [0:0] SE_i_arrayidx32_conv20_add_x_p1_of_2_backStall;
    wire [0:0] SE_i_arrayidx32_conv20_add_x_p1_of_2_V0;
    wire [0:0] SE_i_arrayidx32_conv20_add_x_p1_of_2_V1;
    reg [0:0] SE_i_arrayidx32_conv20_add_x_p2_of_2_R_v_0;
    wire [0:0] SE_i_arrayidx32_conv20_add_x_p2_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx32_conv20_add_x_p2_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx32_conv20_add_x_p2_of_2_backEN;
    wire [0:0] SE_i_arrayidx32_conv20_add_x_p2_of_2_backStall;
    wire [0:0] SE_i_arrayidx32_conv20_add_x_p2_of_2_V0;
    reg [0:0] SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_R_v_0;
    reg [0:0] SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_R_v_1;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_s_tv_1;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_backEN;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_or0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_backStall;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_V0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_V1;
    reg [0:0] SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_R_v_0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_backEN;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_backStall;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_V0;
    reg [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_0;
    reg [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_1;
    reg [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_2;
    wire [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_s_tv_1;
    wire [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_s_tv_2;
    wire [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN;
    wire [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_or0;
    wire [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_or1;
    wire [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_backStall;
    wire [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_V0;
    wire [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_V1;
    wire [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_V2;
    reg [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_0;
    reg [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_1;
    wire [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_s_tv_1;
    wire [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_backEN;
    wire [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_or0;
    wire [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_backStall;
    wire [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_V0;
    wire [0:0] SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_V1;
    reg [0:0] SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_R_v_0;
    reg [0:0] SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_R_v_1;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_s_tv_1;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_backEN;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_or0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_backStall;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_V0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_V1;
    reg [0:0] SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_R_v_0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_backEN;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_backStall;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_V0;
    reg [0:0] SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_0;
    reg [0:0] SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_1;
    wire [0:0] SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_s_tv_1;
    wire [0:0] SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN;
    wire [0:0] SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_or0;
    wire [0:0] SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_backStall;
    wire [0:0] SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_V0;
    wire [0:0] SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_V1;
    reg [0:0] SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_0;
    wire [0:0] SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_v_s_0;
    wire [0:0] SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_s_tv_0;
    wire [0:0] SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_backEN;
    wire [0:0] SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_backStall;
    wire [0:0] SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_V0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_2_V0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_2_V1;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_b_wireValid;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_b_and0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_b_backStall;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_b_V0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel1_0_V0;
    wire [0:0] SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel1_0_V1;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_b_BitJoin_for_b_wireValid;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_b_BitJoin_for_b_and0;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_b_BitJoin_for_b_backStall;
    wire [0:0] SE_i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_b_BitJoin_for_b_V0;
    reg [0:0] SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_R_v_0;
    wire [0:0] SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_v_s_0;
    wire [0:0] SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_s_tv_0;
    wire [0:0] SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_backEN;
    wire [0:0] SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_backStall;
    wire [0:0] SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_V0;
    reg [0:0] SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_R_v_0;
    wire [0:0] SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_v_s_0;
    wire [0:0] SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_s_tv_0;
    wire [0:0] SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_backEN;
    wire [0:0] SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_backStall;
    wire [0:0] SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_V0;
    reg [0:0] SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_R_v_0;
    reg [0:0] SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_R_v_1;
    wire [0:0] SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_v_s_0;
    wire [0:0] SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_s_tv_0;
    wire [0:0] SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_s_tv_1;
    wire [0:0] SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_backEN;
    wire [0:0] SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_or0;
    wire [0:0] SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_backStall;
    wire [0:0] SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_V0;
    wire [0:0] SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_V1;
    reg [0:0] SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_R_v_0;
    reg [0:0] SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_R_v_1;
    wire [0:0] SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_v_s_0;
    wire [0:0] SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_s_tv_0;
    wire [0:0] SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_s_tv_1;
    wire [0:0] SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_backEN;
    wire [0:0] SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_or0;
    wire [0:0] SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_backStall;
    wire [0:0] SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_V0;
    wire [0:0] SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_V1;
    reg [0:0] SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_R_v_0;
    wire [0:0] SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_v_s_0;
    wire [0:0] SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_s_tv_0;
    wire [0:0] SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_backEN;
    wire [0:0] SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_backStall;
    wire [0:0] SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_V0;
    reg [0:0] SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_R_v_0;
    wire [0:0] SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_v_s_0;
    wire [0:0] SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_s_tv_0;
    wire [0:0] SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_backEN;
    wire [0:0] SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_backStall;
    wire [0:0] SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_V0;
    reg [0:0] SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_R_v_0;
    wire [0:0] SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_v_s_0;
    wire [0:0] SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_s_tv_0;
    wire [0:0] SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_backEN;
    wire [0:0] SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_backStall;
    wire [0:0] SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_V0;
    reg [0:0] SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_R_v_0;
    wire [0:0] SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_v_s_0;
    wire [0:0] SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_s_tv_0;
    wire [0:0] SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_backEN;
    wire [0:0] SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_backStall;
    wire [0:0] SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_V0;
    wire [0:0] SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_wireValid;
    wire [0:0] SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_wireStall;
    wire [0:0] SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_StallValid;
    wire [0:0] SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_toReg0;
    reg [0:0] SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_fromReg0;
    wire [0:0] SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_consumed0;
    wire [0:0] SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_toReg1;
    reg [0:0] SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_fromReg1;
    wire [0:0] SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_consumed1;
    wire [0:0] SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_or0;
    wire [0:0] SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_backStall;
    wire [0:0] SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_V0;
    wire [0:0] SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_V1;
    wire [0:0] SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_wireValid;
    wire [0:0] SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_backStall;
    wire [0:0] SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_V0;
    wire [0:0] SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_wireValid;
    wire [0:0] SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_backStall;
    wire [0:0] SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_V0;
    wire [0:0] SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_wireValid;
    wire [0:0] SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_backStall;
    wire [0:0] SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_V0;
    wire [0:0] SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_wireValid;
    wire [0:0] SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_backStall;
    wire [0:0] SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_V0;
    reg [0:0] SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_0;
    reg [0:0] SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_1;
    reg [0:0] SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_2;
    wire [0:0] SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_v_s_0;
    wire [0:0] SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_s_tv_0;
    wire [0:0] SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_s_tv_1;
    wire [0:0] SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_s_tv_2;
    wire [0:0] SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_backEN;
    wire [0:0] SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_or0;
    wire [0:0] SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_or1;
    wire [0:0] SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_backStall;
    wire [0:0] SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_V0;
    wire [0:0] SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_V1;
    wire [0:0] SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_V2;
    wire [0:0] SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_wireValid;
    wire [0:0] SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_backStall;
    wire [0:0] SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_V0;
    wire [0:0] SE_out_redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_wireValid;
    wire [0:0] SE_out_redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_backStall;
    wire [0:0] SE_out_redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_V0;
    wire [0:0] SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_wireValid;
    wire [0:0] SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_backStall;
    wire [0:0] SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_V0;
    wire [0:0] SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_wireValid;
    wire [0:0] SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_backStall;
    wire [0:0] SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_V0;
    wire [0:0] SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_wireValid;
    wire [0:0] SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_backStall;
    wire [0:0] SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_V0;
    wire [0:0] SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_wireValid;
    wire [0:0] SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_backStall;
    wire [0:0] SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_V0;
    wire [0:0] SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_wireValid;
    wire [0:0] SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_backStall;
    wire [0:0] SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_V0;
    wire [0:0] SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_wireValid;
    wire [0:0] SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_backStall;
    wire [0:0] SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_V0;
    wire [0:0] SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_wireValid;
    wire [0:0] SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_wireStall;
    wire [0:0] SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_StallValid;
    wire [0:0] SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_toReg0;
    reg [0:0] SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_fromReg0;
    wire [0:0] SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_consumed0;
    wire [0:0] SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_toReg1;
    reg [0:0] SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_fromReg1;
    wire [0:0] SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_consumed1;
    wire [0:0] SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_or0;
    wire [0:0] SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_backStall;
    wire [0:0] SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_V0;
    wire [0:0] SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_V1;
    wire [0:0] SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_wireValid;
    wire [0:0] SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_backStall;
    wire [0:0] SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_V0;
    wire [0:0] SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_wireValid;
    wire [0:0] SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_backStall;
    wire [0:0] SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_V0;
    wire [0:0] SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_wireValid;
    wire [0:0] SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_wireStall;
    wire [0:0] SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_StallValid;
    wire [0:0] SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_toReg0;
    reg [0:0] SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_fromReg0;
    wire [0:0] SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_consumed0;
    wire [0:0] SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_toReg1;
    reg [0:0] SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_fromReg1;
    wire [0:0] SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_consumed1;
    wire [0:0] SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_or0;
    wire [0:0] SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_backStall;
    wire [0:0] SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_V0;
    wire [0:0] SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_V1;
    wire [0:0] SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_wireValid;
    wire [0:0] SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_backStall;
    wire [0:0] SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_V0;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireStall;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_StallValid;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg0;
    reg [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg0;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed0;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg1;
    reg [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg1;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed1;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg2;
    reg [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg2;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed2;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg3;
    reg [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg3;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed3;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg4;
    reg [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg4;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed4;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg5;
    reg [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg5;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed5;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg6;
    reg [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg6;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed6;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg7;
    reg [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg7;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed7;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg8;
    reg [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg8;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed8;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg9;
    reg [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg9;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed9;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg10;
    reg [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg10;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed10;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg11;
    reg [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg11;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed11;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or0;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or1;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or2;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or3;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or4;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or5;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or6;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or7;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or8;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or9;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or10;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_backStall;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V0;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V1;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V2;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V3;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V4;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V5;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V6;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V7;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V8;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V9;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V10;
    wire [0:0] SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V11;
    wire [0:0] SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_wireValid;
    wire [0:0] SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_wireStall;
    wire [0:0] SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_StallValid;
    wire [0:0] SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_toReg0;
    reg [0:0] SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_fromReg0;
    wire [0:0] SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_consumed0;
    wire [0:0] SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_toReg1;
    reg [0:0] SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_fromReg1;
    wire [0:0] SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_consumed1;
    wire [0:0] SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_or0;
    wire [0:0] SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_backStall;
    wire [0:0] SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_V0;
    wire [0:0] SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_V1;
    wire [0:0] SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_wireValid;
    wire [0:0] SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_wireStall;
    wire [0:0] SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_StallValid;
    wire [0:0] SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_toReg0;
    reg [0:0] SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_fromReg0;
    wire [0:0] SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_consumed0;
    wire [0:0] SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_toReg1;
    reg [0:0] SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_fromReg1;
    wire [0:0] SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_consumed1;
    wire [0:0] SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_or0;
    wire [0:0] SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_backStall;
    wire [0:0] SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_V0;
    wire [0:0] SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_V1;
    reg [0:0] SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_R_v_0;
    reg [0:0] SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_R_v_1;
    wire [0:0] SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_v_s_0;
    wire [0:0] SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_s_tv_0;
    wire [0:0] SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_s_tv_1;
    wire [0:0] SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_backEN;
    wire [0:0] SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_or0;
    wire [0:0] SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_backStall;
    wire [0:0] SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_V0;
    wire [0:0] SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_V1;
    reg [0:0] SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_R_v_0;
    wire [0:0] SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_v_s_0;
    wire [0:0] SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_s_tv_0;
    wire [0:0] SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_backEN;
    wire [0:0] SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_backStall;
    wire [0:0] SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_V0;
    reg [0:0] SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_R_v_0;
    reg [0:0] SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_R_v_1;
    wire [0:0] SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_v_s_0;
    wire [0:0] SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_s_tv_0;
    wire [0:0] SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_s_tv_1;
    wire [0:0] SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_backEN;
    wire [0:0] SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_or0;
    wire [0:0] SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_backStall;
    wire [0:0] SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_V0;
    wire [0:0] SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_V1;
    reg [0:0] SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_R_v_0;
    wire [0:0] SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_v_s_0;
    wire [0:0] SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_s_tv_0;
    wire [0:0] SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_backEN;
    wire [0:0] SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_backStall;
    wire [0:0] SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_V0;
    reg [0:0] SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_0;
    reg [0:0] SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_1;
    reg [0:0] SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_2;
    wire [0:0] SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_v_s_0;
    wire [0:0] SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_s_tv_0;
    wire [0:0] SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_s_tv_1;
    wire [0:0] SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_s_tv_2;
    wire [0:0] SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_backEN;
    wire [0:0] SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_or0;
    wire [0:0] SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_or1;
    wire [0:0] SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_backStall;
    wire [0:0] SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_V0;
    wire [0:0] SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_V1;
    wire [0:0] SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_V2;
    reg [0:0] SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_R_v_0;
    reg [0:0] SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_R_v_1;
    wire [0:0] SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_v_s_0;
    wire [0:0] SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_s_tv_0;
    wire [0:0] SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_s_tv_1;
    wire [0:0] SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_backEN;
    wire [0:0] SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_or0;
    wire [0:0] SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_backStall;
    wire [0:0] SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_V0;
    wire [0:0] SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_V1;
    reg [0:0] SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_R_v_0;
    reg [0:0] SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_R_v_1;
    wire [0:0] SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_v_s_0;
    wire [0:0] SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_s_tv_0;
    wire [0:0] SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_s_tv_1;
    wire [0:0] SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_backEN;
    wire [0:0] SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_or0;
    wire [0:0] SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_backStall;
    wire [0:0] SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_V0;
    wire [0:0] SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_V1;
    reg [0:0] SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_0;
    reg [0:0] SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_1;
    reg [0:0] SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_2;
    reg [0:0] SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_3;
    wire [0:0] SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_v_s_0;
    wire [0:0] SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_s_tv_0;
    wire [0:0] SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_s_tv_1;
    wire [0:0] SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_s_tv_2;
    wire [0:0] SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_s_tv_3;
    wire [0:0] SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_backEN;
    wire [0:0] SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_or0;
    wire [0:0] SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_or1;
    wire [0:0] SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_or2;
    wire [0:0] SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_backStall;
    wire [0:0] SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_V0;
    wire [0:0] SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_V1;
    wire [0:0] SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_V2;
    wire [0:0] SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_V3;
    wire [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_wireValid;
    wire [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_wireStall;
    wire [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_StallValid;
    wire [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_toReg0;
    reg [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_fromReg0;
    wire [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_consumed0;
    wire [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_toReg1;
    reg [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_fromReg1;
    wire [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_consumed1;
    wire [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_toReg2;
    reg [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_fromReg2;
    wire [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_consumed2;
    wire [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_toReg3;
    reg [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_fromReg3;
    wire [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_consumed3;
    wire [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_or0;
    wire [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_or1;
    wire [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_or2;
    wire [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_backStall;
    wire [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_V0;
    wire [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_V1;
    wire [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_V2;
    wire [0:0] SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_V3;
    wire [0:0] SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_wireValid;
    wire [0:0] SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_wireStall;
    wire [0:0] SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_StallValid;
    wire [0:0] SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_toReg0;
    reg [0:0] SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_fromReg0;
    wire [0:0] SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_consumed0;
    wire [0:0] SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_toReg1;
    reg [0:0] SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_fromReg1;
    wire [0:0] SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_consumed1;
    wire [0:0] SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_or0;
    wire [0:0] SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_backStall;
    wire [0:0] SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_V0;
    wire [0:0] SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_V1;
    wire [0:0] SE_out_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_wireValid;
    wire [0:0] SE_out_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_and0;
    wire [0:0] SE_out_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_backStall;
    wire [0:0] SE_out_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_V0;
    wire [0:0] SE_out_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_wireValid;
    wire [0:0] SE_out_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_and0;
    wire [0:0] SE_out_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_backStall;
    wire [0:0] SE_out_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_V0;
    wire [0:0] SE_out_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_wireValid;
    wire [0:0] SE_out_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_and0;
    wire [0:0] SE_out_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_backStall;
    wire [0:0] SE_out_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_V0;
    wire [0:0] SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_wireValid;
    wire [0:0] SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_backStall;
    wire [0:0] SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_V0;
    wire [0:0] SE_out_coalesced_delay_0_fifo_wireValid;
    wire [0:0] SE_out_coalesced_delay_0_fifo_wireStall;
    wire [0:0] SE_out_coalesced_delay_0_fifo_StallValid;
    wire [0:0] SE_out_coalesced_delay_0_fifo_toReg0;
    reg [0:0] SE_out_coalesced_delay_0_fifo_fromReg0;
    wire [0:0] SE_out_coalesced_delay_0_fifo_consumed0;
    wire [0:0] SE_out_coalesced_delay_0_fifo_toReg1;
    reg [0:0] SE_out_coalesced_delay_0_fifo_fromReg1;
    wire [0:0] SE_out_coalesced_delay_0_fifo_consumed1;
    wire [0:0] SE_out_coalesced_delay_0_fifo_or0;
    wire [0:0] SE_out_coalesced_delay_0_fifo_backStall;
    wire [0:0] SE_out_coalesced_delay_0_fifo_V0;
    wire [0:0] SE_out_coalesced_delay_0_fifo_V1;
    wire [0:0] SE_out_coalesced_delay_1_fifo_wireValid;
    wire [0:0] SE_out_coalesced_delay_1_fifo_wireStall;
    wire [0:0] SE_out_coalesced_delay_1_fifo_StallValid;
    wire [0:0] SE_out_coalesced_delay_1_fifo_toReg0;
    reg [0:0] SE_out_coalesced_delay_1_fifo_fromReg0;
    wire [0:0] SE_out_coalesced_delay_1_fifo_consumed0;
    wire [0:0] SE_out_coalesced_delay_1_fifo_toReg1;
    reg [0:0] SE_out_coalesced_delay_1_fifo_fromReg1;
    wire [0:0] SE_out_coalesced_delay_1_fifo_consumed1;
    wire [0:0] SE_out_coalesced_delay_1_fifo_or0;
    wire [0:0] SE_out_coalesced_delay_1_fifo_backStall;
    wire [0:0] SE_out_coalesced_delay_1_fifo_V0;
    wire [0:0] SE_out_coalesced_delay_1_fifo_V1;
    wire [0:0] SE_out_coalesced_delay_2_fifo_wireValid;
    wire [0:0] SE_out_coalesced_delay_2_fifo_wireStall;
    wire [0:0] SE_out_coalesced_delay_2_fifo_StallValid;
    wire [0:0] SE_out_coalesced_delay_2_fifo_toReg0;
    reg [0:0] SE_out_coalesced_delay_2_fifo_fromReg0;
    wire [0:0] SE_out_coalesced_delay_2_fifo_consumed0;
    wire [0:0] SE_out_coalesced_delay_2_fifo_toReg1;
    reg [0:0] SE_out_coalesced_delay_2_fifo_fromReg1;
    wire [0:0] SE_out_coalesced_delay_2_fifo_consumed1;
    wire [0:0] SE_out_coalesced_delay_2_fifo_toReg2;
    reg [0:0] SE_out_coalesced_delay_2_fifo_fromReg2;
    wire [0:0] SE_out_coalesced_delay_2_fifo_consumed2;
    wire [0:0] SE_out_coalesced_delay_2_fifo_or0;
    wire [0:0] SE_out_coalesced_delay_2_fifo_or1;
    wire [0:0] SE_out_coalesced_delay_2_fifo_backStall;
    wire [0:0] SE_out_coalesced_delay_2_fifo_V0;
    wire [0:0] SE_out_coalesced_delay_2_fifo_V1;
    wire [0:0] SE_out_coalesced_delay_2_fifo_V2;
    wire [0:0] SE_out_coalesced_delay_3_fifo_wireValid;
    wire [0:0] SE_out_coalesced_delay_3_fifo_wireStall;
    wire [0:0] SE_out_coalesced_delay_3_fifo_StallValid;
    wire [0:0] SE_out_coalesced_delay_3_fifo_toReg0;
    reg [0:0] SE_out_coalesced_delay_3_fifo_fromReg0;
    wire [0:0] SE_out_coalesced_delay_3_fifo_consumed0;
    wire [0:0] SE_out_coalesced_delay_3_fifo_toReg1;
    reg [0:0] SE_out_coalesced_delay_3_fifo_fromReg1;
    wire [0:0] SE_out_coalesced_delay_3_fifo_consumed1;
    wire [0:0] SE_out_coalesced_delay_3_fifo_or0;
    wire [0:0] SE_out_coalesced_delay_3_fifo_backStall;
    wire [0:0] SE_out_coalesced_delay_3_fifo_V0;
    wire [0:0] SE_out_coalesced_delay_3_fifo_V1;
    wire [0:0] SE_out_coalesced_delay_4_fifo_wireValid;
    wire [0:0] SE_out_coalesced_delay_4_fifo_wireStall;
    wire [0:0] SE_out_coalesced_delay_4_fifo_StallValid;
    wire [0:0] SE_out_coalesced_delay_4_fifo_toReg0;
    reg [0:0] SE_out_coalesced_delay_4_fifo_fromReg0;
    wire [0:0] SE_out_coalesced_delay_4_fifo_consumed0;
    wire [0:0] SE_out_coalesced_delay_4_fifo_toReg1;
    reg [0:0] SE_out_coalesced_delay_4_fifo_fromReg1;
    wire [0:0] SE_out_coalesced_delay_4_fifo_consumed1;
    wire [0:0] SE_out_coalesced_delay_4_fifo_toReg2;
    reg [0:0] SE_out_coalesced_delay_4_fifo_fromReg2;
    wire [0:0] SE_out_coalesced_delay_4_fifo_consumed2;
    wire [0:0] SE_out_coalesced_delay_4_fifo_toReg3;
    reg [0:0] SE_out_coalesced_delay_4_fifo_fromReg3;
    wire [0:0] SE_out_coalesced_delay_4_fifo_consumed3;
    wire [0:0] SE_out_coalesced_delay_4_fifo_toReg4;
    reg [0:0] SE_out_coalesced_delay_4_fifo_fromReg4;
    wire [0:0] SE_out_coalesced_delay_4_fifo_consumed4;
    wire [0:0] SE_out_coalesced_delay_4_fifo_toReg5;
    reg [0:0] SE_out_coalesced_delay_4_fifo_fromReg5;
    wire [0:0] SE_out_coalesced_delay_4_fifo_consumed5;
    wire [0:0] SE_out_coalesced_delay_4_fifo_toReg6;
    reg [0:0] SE_out_coalesced_delay_4_fifo_fromReg6;
    wire [0:0] SE_out_coalesced_delay_4_fifo_consumed6;
    wire [0:0] SE_out_coalesced_delay_4_fifo_toReg7;
    reg [0:0] SE_out_coalesced_delay_4_fifo_fromReg7;
    wire [0:0] SE_out_coalesced_delay_4_fifo_consumed7;
    wire [0:0] SE_out_coalesced_delay_4_fifo_toReg8;
    reg [0:0] SE_out_coalesced_delay_4_fifo_fromReg8;
    wire [0:0] SE_out_coalesced_delay_4_fifo_consumed8;
    wire [0:0] SE_out_coalesced_delay_4_fifo_toReg9;
    reg [0:0] SE_out_coalesced_delay_4_fifo_fromReg9;
    wire [0:0] SE_out_coalesced_delay_4_fifo_consumed9;
    wire [0:0] SE_out_coalesced_delay_4_fifo_or0;
    wire [0:0] SE_out_coalesced_delay_4_fifo_or1;
    wire [0:0] SE_out_coalesced_delay_4_fifo_or2;
    wire [0:0] SE_out_coalesced_delay_4_fifo_or3;
    wire [0:0] SE_out_coalesced_delay_4_fifo_or4;
    wire [0:0] SE_out_coalesced_delay_4_fifo_or5;
    wire [0:0] SE_out_coalesced_delay_4_fifo_or6;
    wire [0:0] SE_out_coalesced_delay_4_fifo_or7;
    wire [0:0] SE_out_coalesced_delay_4_fifo_or8;
    wire [0:0] SE_out_coalesced_delay_4_fifo_backStall;
    wire [0:0] SE_out_coalesced_delay_4_fifo_V0;
    wire [0:0] SE_out_coalesced_delay_4_fifo_V1;
    wire [0:0] SE_out_coalesced_delay_4_fifo_V2;
    wire [0:0] SE_out_coalesced_delay_4_fifo_V3;
    wire [0:0] SE_out_coalesced_delay_4_fifo_V4;
    wire [0:0] SE_out_coalesced_delay_4_fifo_V5;
    wire [0:0] SE_out_coalesced_delay_4_fifo_V6;
    wire [0:0] SE_out_coalesced_delay_4_fifo_V7;
    wire [0:0] SE_out_coalesced_delay_4_fifo_V8;
    wire [0:0] SE_out_coalesced_delay_4_fifo_V9;
    wire [0:0] SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_1_wireValid;
    wire [0:0] SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_1_backStall;
    wire [0:0] SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_1_V0;
    wire [0:0] SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_2_wireValid;
    wire [0:0] SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_2_backStall;
    wire [0:0] SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_2_V0;
    wire [0:0] SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_wireValid;
    wire [0:0] SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and0;
    wire [0:0] SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and1;
    wire [0:0] SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and2;
    wire [0:0] SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and3;
    wire [0:0] SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and4;
    wire [0:0] SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and5;
    wire [0:0] SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and6;
    wire [0:0] SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and7;
    wire [0:0] SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and8;
    wire [0:0] SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and9;
    wire [0:0] SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and10;
    wire [0:0] SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and11;
    wire [0:0] SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and12;
    wire [0:0] SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and13;
    wire [0:0] SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and14;
    wire [0:0] SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and15;
    wire [0:0] SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_backStall;
    wire [0:0] SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_V0;
    wire [0:0] bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_valid_in;
    wire bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_valid_in_bitsignaltemp;
    wire [0:0] bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_stall_in;
    wire bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_stall_in_bitsignaltemp;
    wire [0:0] bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_valid_out;
    wire bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_valid_out_bitsignaltemp;
    wire [0:0] bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_stall_out;
    wire bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_stall_out_bitsignaltemp;
    wire [0:0] bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_valid_in;
    wire bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_valid_in_bitsignaltemp;
    wire [0:0] bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_stall_in;
    wire bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_stall_in_bitsignaltemp;
    wire [0:0] bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_valid_out;
    wire bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_valid_out_bitsignaltemp;
    wire [0:0] bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_stall_out;
    wire bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_stall_out_bitsignaltemp;
    wire [0:0] bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_valid_in;
    wire bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_valid_in_bitsignaltemp;
    wire [0:0] bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_stall_in;
    wire bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_stall_in_bitsignaltemp;
    wire [0:0] bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_valid_out;
    wire bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_valid_out_bitsignaltemp;
    wire [0:0] bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_stall_out;
    wire bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_stall_out_bitsignaltemp;
    wire [0:0] bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_valid_in;
    wire bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_valid_in_bitsignaltemp;
    wire [0:0] bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_stall_in;
    wire bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_stall_in_bitsignaltemp;
    wire [0:0] bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_valid_out;
    wire bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_valid_out_bitsignaltemp;
    wire [0:0] bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_stall_out;
    wire bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_stall_out_bitsignaltemp;
    wire [0:0] bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_valid_in;
    wire bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_valid_in_bitsignaltemp;
    wire [0:0] bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_stall_in;
    wire bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_stall_in_bitsignaltemp;
    wire [0:0] bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_valid_out;
    wire bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_valid_out_bitsignaltemp;
    wire [0:0] bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_stall_out;
    wire bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_stall_out_bitsignaltemp;
    wire [0:0] bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_valid_in;
    wire bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_valid_in_bitsignaltemp;
    wire [0:0] bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_stall_in;
    wire bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_stall_in_bitsignaltemp;
    wire [0:0] bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_valid_out;
    wire bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_valid_out_bitsignaltemp;
    wire [0:0] bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_stall_out;
    wire bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_stall_out_bitsignaltemp;
    wire [0:0] SR_SE_out_coalesced_delay_0_fifo_i_valid;
    reg [0:0] SR_SE_out_coalesced_delay_0_fifo_r_valid;
    reg [63:0] SR_SE_out_coalesced_delay_0_fifo_r_data0;
    reg [0:0] SR_SE_out_coalesced_delay_0_fifo_r_data1;
    reg [0:0] SR_SE_out_coalesced_delay_0_fifo_r_data2;
    wire [0:0] SR_SE_out_coalesced_delay_0_fifo_backStall;
    wire [0:0] SR_SE_out_coalesced_delay_0_fifo_V;
    wire [63:0] SR_SE_out_coalesced_delay_0_fifo_D0;
    wire [0:0] SR_SE_out_coalesced_delay_0_fifo_D1;
    wire [0:0] SR_SE_out_coalesced_delay_0_fifo_D2;
    wire [0:0] SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_i_valid;
    reg [0:0] SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_r_valid;
    reg [0:0] SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_r_data0;
    wire [0:0] SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_backStall;
    wire [0:0] SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_V;
    wire [0:0] SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_D0;
    wire [0:0] SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_i_valid;
    reg [0:0] SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_r_valid;
    reg [0:0] SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_r_data0;
    wire [0:0] SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_backStall;
    wire [0:0] SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_V;
    wire [0:0] SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_D0;
    wire [0:0] SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_i_valid;
    reg [0:0] SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_r_valid;
    reg [0:0] SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_r_data0;
    wire [0:0] SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_backStall;
    wire [0:0] SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_V;
    wire [0:0] SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_D0;
    wire [0:0] SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_i_valid;
    reg [0:0] SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_r_valid;
    reg [0:0] SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_r_data0;
    wire [0:0] SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_backStall;
    wire [0:0] SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_V;
    wire [0:0] SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_D0;
    wire [0:0] SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_i_valid;
    reg [0:0] SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_r_valid;
    reg [0:0] SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_r_data0;
    wire [0:0] SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_backStall;
    wire [0:0] SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_V;
    wire [0:0] SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_D0;
    wire [0:0] SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_i_valid;
    reg [0:0] SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_r_valid;
    reg [0:0] SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_r_data0;
    wire [0:0] SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_backStall;
    wire [0:0] SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_V;
    wire [0:0] SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_D0;
    wire [0:0] SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_i_valid;
    reg [0:0] SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_r_valid;
    reg [0:0] SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_r_data0;
    wire [0:0] SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_backStall;
    wire [0:0] SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_V;
    wire [0:0] SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_D0;
    wire [0:0] SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_i_valid;
    reg [0:0] SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_r_valid;
    reg [0:0] SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_r_data0;
    wire [0:0] SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_backStall;
    wire [0:0] SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_V;
    wire [0:0] SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_D0;
    wire [0:0] SR_SE_out_coalesced_delay_3_fifo_i_valid;
    reg [0:0] SR_SE_out_coalesced_delay_3_fifo_r_valid;
    wire [0:0] SR_SE_out_coalesced_delay_3_fifo_and0;
    reg [31:0] SR_SE_out_coalesced_delay_3_fifo_r_data0;
    reg [0:0] SR_SE_out_coalesced_delay_3_fifo_r_data1;
    reg [0:0] SR_SE_out_coalesced_delay_3_fifo_r_data2;
    reg [31:0] SR_SE_out_coalesced_delay_3_fifo_r_data3;
    wire [0:0] SR_SE_out_coalesced_delay_3_fifo_backStall;
    wire [0:0] SR_SE_out_coalesced_delay_3_fifo_V;
    wire [31:0] SR_SE_out_coalesced_delay_3_fifo_D0;
    wire [0:0] SR_SE_out_coalesced_delay_3_fifo_D1;
    wire [0:0] SR_SE_out_coalesced_delay_3_fifo_D2;
    wire [31:0] SR_SE_out_coalesced_delay_3_fifo_D3;
    wire [0:0] SR_SE_i_masked_conv287_i_valid;
    reg [0:0] SR_SE_i_masked_conv287_r_valid;
    wire [0:0] SR_SE_i_masked_conv287_and0;
    reg [0:0] SR_SE_i_masked_conv287_r_data0;
    reg [0:0] SR_SE_i_masked_conv287_r_data1;
    wire [0:0] SR_SE_i_masked_conv287_backStall;
    wire [0:0] SR_SE_i_masked_conv287_V;
    wire [0:0] SR_SE_i_masked_conv287_D0;
    wire [0:0] SR_SE_i_masked_conv287_D1;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_i_valid;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_valid;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_and0;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_data0;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_data1;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_data2;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_data3;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_data4;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_data5;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_data6;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_data7;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_data8;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_data9;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_data10;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_data11;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_data12;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_data13;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_data14;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_data15;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_data16;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_data17;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_data18;
    reg [0:0] SR_SE_out_coalesced_delay_4_fifo_r_data19;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_backStall;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_V;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_D0;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_D1;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_D2;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_D3;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_D4;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_D5;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_D6;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_D7;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_D8;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_D9;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_D10;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_D11;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_D12;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_D13;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_D14;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_D15;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_D16;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_D17;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_D18;
    wire [0:0] SR_SE_out_coalesced_delay_4_fifo_D19;
    wire [0:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid;
    reg [51:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data0;
    reg [51:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data1;
    reg [21:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data2;
    reg [11:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data3;
    wire [0:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_V;
    wire [51:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_D0;
    wire [51:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_D1;
    wire [21:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_D2;
    wire [11:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_D3;
    wire [0:0] SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_r_valid;
    wire [0:0] SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_and0;
    reg [51:0] SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_r_data0;
    reg [51:0] SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_r_data1;
    wire [0:0] SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_V;
    wire [51:0] SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_D0;
    wire [51:0] SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_D1;
    wire [0:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid;
    reg [51:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data0;
    reg [51:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data1;
    reg [51:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data2;
    reg [51:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data3;
    reg [18:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data4;
    reg [21:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data5;
    reg [8:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data6;
    reg [11:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data7;
    wire [0:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_V;
    wire [51:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D0;
    wire [51:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D1;
    wire [51:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D2;
    wire [51:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D3;
    wire [18:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D4;
    wire [21:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D5;
    wire [8:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D6;
    wire [11:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D7;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_r_valid;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_and0;
    reg [51:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_r_data0;
    reg [51:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_r_data1;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_V;
    wire [51:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_D0;
    wire [51:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_D1;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_r_valid;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_and0;
    reg [51:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_r_data0;
    reg [51:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_r_data1;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_V;
    wire [51:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_D0;
    wire [51:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_D1;
    wire [0:0] SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_i_valid;
    reg [0:0] SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_r_valid;
    reg [31:0] SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_r_data0;
    wire [0:0] SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_backStall;
    wire [0:0] SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_V;
    wire [31:0] SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_D0;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_r_valid;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_and0;
    reg [51:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_r_data0;
    reg [51:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_r_data1;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_V;
    wire [51:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_D0;
    wire [51:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_D1;
    wire [0:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid;
    reg [22:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data0;
    reg [22:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data1;
    reg [0:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data2;
    wire [0:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_V;
    wire [22:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_D0;
    wire [22:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_D1;
    wire [0:0] SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_D2;
    wire [0:0] SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_valid;
    wire [0:0] SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_and0;
    wire [0:0] SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_and1;
    reg [12:0] SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_data0;
    reg [12:0] SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_data1;
    reg [0:0] SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_data2;
    wire [0:0] SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_V;
    wire [12:0] SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_D0;
    wire [12:0] SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_D1;
    wire [0:0] SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_D2;
    wire [0:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid;
    reg [22:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data0;
    reg [22:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data1;
    reg [0:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data2;
    reg [19:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data3;
    reg [19:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data4;
    reg [0:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data5;
    wire [0:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_V;
    wire [22:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_D0;
    wire [22:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_D1;
    wire [0:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_D2;
    wire [19:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_D3;
    wire [19:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_D4;
    wire [0:0] SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_D5;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_valid;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_and0;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_and1;
    reg [12:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_data0;
    reg [12:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_data1;
    reg [0:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_data2;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_V;
    wire [12:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_D0;
    wire [12:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_D1;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_D2;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_valid;
    reg [17:0] SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_data0;
    reg [17:0] SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_data1;
    reg [0:0] SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_data2;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_V;
    wire [17:0] SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_D0;
    wire [17:0] SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_D1;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_D2;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_valid;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_and0;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_and1;
    reg [12:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_data0;
    reg [12:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_data1;
    reg [0:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_data2;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_V;
    wire [12:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_D0;
    wire [12:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_D1;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_D2;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_valid;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_and0;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_and1;
    reg [12:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_data0;
    reg [12:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_data1;
    reg [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_data2;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_V;
    wire [12:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_D0;
    wire [12:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_D1;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_D2;
    wire [0:0] SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_i_valid;
    reg [0:0] SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_r_valid;
    reg [51:0] SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_r_data0;
    wire [0:0] SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_backStall;
    wire [0:0] SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_V;
    wire [51:0] SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_D0;
    wire [0:0] SR_SE_out_coalesced_delay_1_fifo_i_valid;
    reg [0:0] SR_SE_out_coalesced_delay_1_fifo_r_valid;
    wire [0:0] SR_SE_out_coalesced_delay_1_fifo_and0;
    reg [0:0] SR_SE_out_coalesced_delay_1_fifo_r_data0;
    reg [0:0] SR_SE_out_coalesced_delay_1_fifo_r_data1;
    reg [0:0] SR_SE_out_coalesced_delay_1_fifo_r_data2;
    reg [0:0] SR_SE_out_coalesced_delay_1_fifo_r_data3;
    wire [0:0] SR_SE_out_coalesced_delay_1_fifo_backStall;
    wire [0:0] SR_SE_out_coalesced_delay_1_fifo_V;
    wire [0:0] SR_SE_out_coalesced_delay_1_fifo_D0;
    wire [0:0] SR_SE_out_coalesced_delay_1_fifo_D1;
    wire [0:0] SR_SE_out_coalesced_delay_1_fifo_D2;
    wire [0:0] SR_SE_out_coalesced_delay_1_fifo_D3;
    wire [0:0] SR_SE_out_coalesced_delay_2_fifo_i_valid;
    reg [0:0] SR_SE_out_coalesced_delay_2_fifo_r_valid;
    wire [0:0] SR_SE_out_coalesced_delay_2_fifo_and0;
    reg [0:0] SR_SE_out_coalesced_delay_2_fifo_r_data0;
    reg [0:0] SR_SE_out_coalesced_delay_2_fifo_r_data1;
    reg [0:0] SR_SE_out_coalesced_delay_2_fifo_r_data2;
    reg [0:0] SR_SE_out_coalesced_delay_2_fifo_r_data3;
    reg [63:0] SR_SE_out_coalesced_delay_2_fifo_r_data4;
    reg [63:0] SR_SE_out_coalesced_delay_2_fifo_r_data5;
    wire [0:0] SR_SE_out_coalesced_delay_2_fifo_backStall;
    wire [0:0] SR_SE_out_coalesced_delay_2_fifo_V;
    wire [0:0] SR_SE_out_coalesced_delay_2_fifo_D0;
    wire [0:0] SR_SE_out_coalesced_delay_2_fifo_D1;
    wire [0:0] SR_SE_out_coalesced_delay_2_fifo_D2;
    wire [0:0] SR_SE_out_coalesced_delay_2_fifo_D3;
    wire [63:0] SR_SE_out_coalesced_delay_2_fifo_D4;
    wire [63:0] SR_SE_out_coalesced_delay_2_fifo_D5;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_i_valid;
    reg [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_valid;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_and0;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_and1;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_and2;
    reg [63:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_data0;
    reg [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_data1;
    reg [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_data2;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_backStall;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_V;
    wire [63:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_D0;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_D1;
    wire [0:0] SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_D2;
    wire [0:0] SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_r_valid;
    wire [0:0] SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_and0;
    reg [51:0] SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_r_data0;
    reg [51:0] SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_r_data1;
    wire [0:0] SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_V;
    wire [51:0] SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_D0;
    wire [51:0] SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_D1;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_valid;
    reg [51:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_data0;
    reg [51:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_data1;
    reg [17:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_data2;
    reg [7:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_data3;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_V;
    wire [51:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_D0;
    wire [51:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_D1;
    wire [17:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_D2;
    wire [7:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_D3;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_r_valid;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_and0;
    reg [51:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_r_data0;
    reg [51:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_r_data1;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_V;
    wire [51:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_D0;
    wire [51:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_D1;
    wire [0:0] SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_i_valid;
    reg [0:0] SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_r_valid;
    wire [0:0] SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_and0;
    reg [31:0] SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_r_data0;
    reg [0:0] SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_r_data1;
    wire [0:0] SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_backStall;
    wire [0:0] SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_V;
    wire [31:0] SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_D0;
    wire [0:0] SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_D1;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_r_valid;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_and0;
    reg [51:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_r_data0;
    reg [51:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_r_data1;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_V;
    wire [51:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_D0;
    wire [51:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_D1;
    wire [0:0] SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_valid;
    wire [0:0] SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_and0;
    wire [0:0] SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_and1;
    reg [12:0] SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_data0;
    reg [12:0] SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_data1;
    reg [0:0] SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_data2;
    wire [0:0] SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_V;
    wire [12:0] SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_D0;
    wire [12:0] SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_D1;
    wire [0:0] SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_D2;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_valid;
    reg [18:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_data0;
    reg [18:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_data1;
    reg [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_data2;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_V;
    wire [18:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_D0;
    wire [18:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_D1;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_D2;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_valid;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_and0;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_and1;
    reg [12:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_data0;
    reg [12:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_data1;
    reg [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_data2;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_V;
    wire [12:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_D0;
    wire [12:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_D1;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_D2;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_i_valid;
    reg [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_valid;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_and0;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_and1;
    reg [12:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_data0;
    reg [12:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_data1;
    reg [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_data2;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_backStall;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_V;
    wire [12:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_D0;
    wire [12:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_D1;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_D2;
    wire [0:0] SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_i_valid;
    reg [0:0] SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_r_valid;
    reg [51:0] SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_r_data0;
    wire [0:0] SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_backStall;
    wire [0:0] SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_V;
    wire [51:0] SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_D0;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_i_valid;
    reg [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_valid;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_and0;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_and1;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_and2;
    reg [63:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_data0;
    reg [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_data1;
    reg [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_data2;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_backStall;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_V;
    wire [63:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_D0;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_D1;
    wire [0:0] SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_D2;
    wire [0:0] SR_SE_i_unnamed_conv246_i_valid;
    reg [0:0] SR_SE_i_unnamed_conv246_r_valid;
    wire [0:0] SR_SE_i_unnamed_conv246_and0;
    reg [31:0] SR_SE_i_unnamed_conv246_r_data0;
    reg [31:0] SR_SE_i_unnamed_conv246_r_data1;
    wire [0:0] SR_SE_i_unnamed_conv246_backStall;
    wire [0:0] SR_SE_i_unnamed_conv246_V;
    wire [31:0] SR_SE_i_unnamed_conv246_D0;
    wire [31:0] SR_SE_i_unnamed_conv246_D1;
    wire [0:0] SR_SE_i_unnamed_conv281_i_valid;
    reg [0:0] SR_SE_i_unnamed_conv281_r_valid;
    reg [31:0] SR_SE_i_unnamed_conv281_r_data0;
    wire [0:0] SR_SE_i_unnamed_conv281_backStall;
    wire [0:0] SR_SE_i_unnamed_conv281_V;
    wire [31:0] SR_SE_i_unnamed_conv281_D0;
    wire [0:0] SR_SE_i_arrayidx34_arrayidx64_conv288_i_valid;
    reg [0:0] SR_SE_i_arrayidx34_arrayidx64_conv288_r_valid;
    wire [0:0] SR_SE_i_arrayidx34_arrayidx64_conv288_and0;
    wire [0:0] SR_SE_i_arrayidx34_arrayidx64_conv288_and1;
    wire [0:0] SR_SE_i_arrayidx34_arrayidx64_conv288_and2;
    wire [0:0] SR_SE_i_arrayidx34_arrayidx64_conv288_and3;
    reg [63:0] SR_SE_i_arrayidx34_arrayidx64_conv288_r_data0;
    reg [0:0] SR_SE_i_arrayidx34_arrayidx64_conv288_r_data1;
    reg [0:0] SR_SE_i_arrayidx34_arrayidx64_conv288_r_data2;
    wire [0:0] SR_SE_i_arrayidx34_arrayidx64_conv288_backStall;
    wire [0:0] SR_SE_i_arrayidx34_arrayidx64_conv288_V;
    wire [63:0] SR_SE_i_arrayidx34_arrayidx64_conv288_D0;
    wire [0:0] SR_SE_i_arrayidx34_arrayidx64_conv288_D1;
    wire [0:0] SR_SE_i_arrayidx34_arrayidx64_conv288_D2;
    wire [0:0] SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_i_valid;
    reg [0:0] SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_valid;
    wire [0:0] SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_and0;
    wire [0:0] SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_and1;
    reg [63:0] SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_data0;
    reg [0:0] SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_data1;
    reg [31:0] SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_data2;
    wire [0:0] SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_backStall;
    wire [0:0] SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_V;
    wire [63:0] SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_D0;
    wire [0:0] SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_D1;
    wire [31:0] SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_D2;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_i_valid;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_r_valid;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_and0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_r_data0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_r_data1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_backStall;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_V;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_D0;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_D1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_i_valid;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_r_valid;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_and0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_r_data0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_r_data1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_backStall;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_V;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_D0;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_D1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_i_valid;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_r_valid;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_and0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_r_data0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_r_data1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_backStall;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_V;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_D0;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_D1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_i_valid;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_r_valid;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_and0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_r_data0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_r_data1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_backStall;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_V;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_D0;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_D1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_i_valid;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_r_valid;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_and0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_r_data0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_r_data1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_backStall;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_V;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_D0;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_D1;
    wire [0:0] SR_SE_i_next_initerations_conv235_vt_select_0_i_valid;
    reg [0:0] SR_SE_i_next_initerations_conv235_vt_select_0_r_valid;
    wire [0:0] SR_SE_i_next_initerations_conv235_vt_select_0_and0;
    reg [0:0] SR_SE_i_next_initerations_conv235_vt_select_0_r_data0;
    reg [0:0] SR_SE_i_next_initerations_conv235_vt_select_0_r_data1;
    reg [0:0] SR_SE_i_next_initerations_conv235_vt_select_0_r_data2;
    reg [1:0] SR_SE_i_next_initerations_conv235_vt_select_0_r_data3;
    wire [0:0] SR_SE_i_next_initerations_conv235_vt_select_0_backStall;
    wire [0:0] SR_SE_i_next_initerations_conv235_vt_select_0_V;
    wire [0:0] SR_SE_i_next_initerations_conv235_vt_select_0_D0;
    wire [0:0] SR_SE_i_next_initerations_conv235_vt_select_0_D1;
    wire [0:0] SR_SE_i_next_initerations_conv235_vt_select_0_D2;
    wire [1:0] SR_SE_i_next_initerations_conv235_vt_select_0_D3;
    wire [0:0] SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_i_valid;
    reg [0:0] SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_r_valid;
    wire [0:0] SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_and0;
    reg [0:0] SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_r_data0;
    reg [0:0] SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_r_data1;
    wire [0:0] SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_backStall;
    wire [0:0] SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_V;
    wire [0:0] SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_D0;
    wire [0:0] SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_D1;
    wire [0:0] SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_i_valid;
    reg [0:0] SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_r_valid;
    wire [0:0] SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_and0;
    reg [0:0] SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_r_data0;
    reg [0:0] SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_r_data1;
    wire [0:0] SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_backStall;
    wire [0:0] SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_V;
    wire [0:0] SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_D0;
    wire [0:0] SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_D1;
    wire [0:0] SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_i_valid;
    reg [0:0] SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_r_valid;
    wire [0:0] SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_and0;
    reg [0:0] SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_r_data0;
    reg [0:0] SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_r_data1;
    wire [0:0] SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_backStall;
    wire [0:0] SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_V;
    wire [0:0] SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_D0;
    wire [0:0] SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_D1;
    wire [0:0] SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_i_valid;
    reg [0:0] SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_r_valid;
    wire [0:0] SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_and0;
    reg [0:0] SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_r_data0;
    reg [0:0] SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_r_data1;
    wire [0:0] SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_backStall;
    wire [0:0] SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_V;
    wire [0:0] SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_D0;
    wire [0:0] SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_D1;
    wire [0:0] SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_i_valid;
    reg [0:0] SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_r_valid;
    wire [0:0] SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_and0;
    reg [0:0] SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_r_data0;
    reg [0:0] SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_r_data1;
    wire [0:0] SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_backStall;
    wire [0:0] SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_V;
    wire [0:0] SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_D0;
    wire [0:0] SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_D1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_i_valid;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_r_valid;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_and0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_r_data0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_r_data1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_backStall;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_V;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_D0;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_D1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_i_valid;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_r_valid;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_and0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_r_data0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_r_data1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_backStall;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_V;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_D0;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_D1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_i_valid;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_r_valid;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_and0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_r_data0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_r_data1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_backStall;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_V;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_D0;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_D1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_i_valid;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_r_valid;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_and0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_r_data0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_r_data1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_backStall;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_V;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_D0;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_D1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_i_valid;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_r_valid;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_and0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_r_data0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_r_data1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_backStall;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_V;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_D0;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_D1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_i_valid;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_r_valid;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_and0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_r_data0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_r_data1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_backStall;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_V;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_D0;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_D1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_i_valid;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_r_valid;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_and0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_r_data0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_r_data1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_backStall;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_V;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_D0;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_D1;
    wire [0:0] SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_i_valid;
    reg [0:0] SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_r_valid;
    wire [0:0] SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_and0;
    wire [0:0] SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_and1;
    wire [0:0] SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_and2;
    reg [1:0] SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_r_data0;
    reg [0:0] SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_r_data1;
    wire [0:0] SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_backStall;
    wire [0:0] SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_V;
    wire [1:0] SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_D0;
    wire [0:0] SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_D1;
    wire [0:0] SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_i_valid;
    reg [0:0] SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_r_valid;
    wire [0:0] SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_and0;
    reg [31:0] SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_r_data0;
    reg [0:0] SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_r_data1;
    wire [0:0] SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_backStall;
    wire [0:0] SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_V;
    wire [31:0] SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_D0;
    wire [0:0] SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_D1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_i_valid;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_r_valid;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_and0;
    reg [31:0] SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_r_data0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_r_data1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_backStall;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_V;
    wire [31:0] SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_D0;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_D1;
    wire [0:0] SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_i_valid;
    reg [0:0] SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_r_valid;
    wire [0:0] SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_and0;
    reg [31:0] SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_r_data0;
    reg [0:0] SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_r_data1;
    wire [0:0] SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_backStall;
    wire [0:0] SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_V;
    wire [31:0] SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_D0;
    wire [0:0] SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_D1;
    wire [0:0] SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_i_valid;
    reg [0:0] SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_r_valid;
    wire [0:0] SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_and0;
    reg [31:0] SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_r_data0;
    reg [0:0] SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_r_data1;
    wire [0:0] SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_backStall;
    wire [0:0] SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_V;
    wire [31:0] SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_D0;
    wire [0:0] SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_D1;
    wire [0:0] SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_i_valid;
    reg [0:0] SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_r_valid;
    wire [0:0] SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_and0;
    reg [31:0] SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_r_data0;
    reg [0:0] SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_r_data1;
    wire [0:0] SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_backStall;
    wire [0:0] SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_V;
    wire [31:0] SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_D0;
    wire [0:0] SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_D1;
    wire [0:0] SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_i_valid;
    reg [0:0] SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_r_valid;
    wire [0:0] SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_and0;
    reg [31:0] SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_r_data0;
    reg [0:0] SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_r_data1;
    wire [0:0] SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_backStall;
    wire [0:0] SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_V;
    wire [31:0] SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_D0;
    wire [0:0] SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_D1;
    wire [0:0] SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_i_valid;
    reg [0:0] SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_r_valid;
    wire [0:0] SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_and0;
    reg [31:0] SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_r_data0;
    reg [0:0] SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_r_data1;
    wire [0:0] SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_backStall;
    wire [0:0] SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_V;
    wire [31:0] SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_D0;
    wire [0:0] SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_D1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_i_valid;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_r_valid;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_and0;
    reg [31:0] SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_r_data0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_r_data1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_backStall;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_V;
    wire [31:0] SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_D0;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_D1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_i_valid;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_r_valid;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_and0;
    reg [3:0] SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_r_data0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_r_data1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_backStall;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_V;
    wire [3:0] SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_D0;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_D1;
    wire [0:0] SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_i_valid;
    reg [0:0] SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_r_valid;
    wire [0:0] SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_and0;
    reg [63:0] SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_r_data0;
    reg [0:0] SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_r_data1;
    wire [0:0] SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_backStall;
    wire [0:0] SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_V;
    wire [63:0] SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_D0;
    wire [0:0] SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_D1;
    wire [0:0] SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_i_valid;
    reg [0:0] SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_r_valid;
    wire [0:0] SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_and0;
    reg [63:0] SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_r_data0;
    reg [0:0] SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_r_data1;
    wire [0:0] SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_backStall;
    wire [0:0] SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_V;
    wire [63:0] SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_D0;
    wire [0:0] SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_D1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_i_valid;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_r_valid;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_and0;
    reg [63:0] SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_r_data0;
    reg [0:0] SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_r_data1;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_backStall;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_V;
    wire [63:0] SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_D0;
    wire [0:0] SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_D1;


    // SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q(STALLENABLE,2854)
    // Valid signal propagation
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_V0 = SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_wireValid;
    // Backward Stall generation
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_backStall = i_llvm_fpga_mem_unnamed_conv28_conv294_out_o_stall | ~ (SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_wireValid);
    // Computing multiple Valid(s)
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_wireValid = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_V;

    // bubble_join_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x(BITJOIN,2282)
    assign bubble_join_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_q = i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_out_c0_exit715_1_tpl;

    // bubble_select_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x(BITSELECT,2283)
    assign bubble_select_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_b = $unsigned(bubble_join_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_q[31:0]);

    // VCC(CONSTANT,1)
    assign VCC_q = $unsigned(1'b1);

    // bubble_join_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo(BITJOIN,2482)
    assign bubble_join_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_q = redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_data_out;

    // bubble_select_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo(BITSELECT,2483)
    assign bubble_select_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_b = $unsigned(bubble_join_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_q[0:0]);

    // rightShiftStage0Idx1Rng1_uid490_i_next_initerations_conv20_shift_x(BITSELECT,489)@131
    assign rightShiftStage0Idx1Rng1_uid490_i_next_initerations_conv20_shift_x_b = bubble_select_i_llvm_fpga_pop_i2_initerations_pop80_conv24_b[1:1];

    // rightShiftStage0Idx1_uid492_i_next_initerations_conv20_shift_x(BITJOIN,491)@131
    assign rightShiftStage0Idx1_uid492_i_next_initerations_conv20_shift_x_q = {GND_q, rightShiftStage0Idx1Rng1_uid490_i_next_initerations_conv20_shift_x_b};

    // bubble_join_i_llvm_fpga_pop_i2_initerations_pop80_conv24(BITJOIN,2369)
    assign bubble_join_i_llvm_fpga_pop_i2_initerations_pop80_conv24_q = i_llvm_fpga_pop_i2_initerations_pop80_conv24_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i2_initerations_pop80_conv24(BITSELECT,2370)
    assign bubble_select_i_llvm_fpga_pop_i2_initerations_pop80_conv24_b = $unsigned(bubble_join_i_llvm_fpga_pop_i2_initerations_pop80_conv24_q[1:0]);

    // rightShiftStage0_uid494_i_next_initerations_conv20_shift_x(MUX,493)@131
    assign rightShiftStage0_uid494_i_next_initerations_conv20_shift_x_s = VCC_q;
    always @(rightShiftStage0_uid494_i_next_initerations_conv20_shift_x_s or bubble_select_i_llvm_fpga_pop_i2_initerations_pop80_conv24_b or rightShiftStage0Idx1_uid492_i_next_initerations_conv20_shift_x_q)
    begin
        unique case (rightShiftStage0_uid494_i_next_initerations_conv20_shift_x_s)
            1'b0 : rightShiftStage0_uid494_i_next_initerations_conv20_shift_x_q = bubble_select_i_llvm_fpga_pop_i2_initerations_pop80_conv24_b;
            1'b1 : rightShiftStage0_uid494_i_next_initerations_conv20_shift_x_q = rightShiftStage0Idx1_uid492_i_next_initerations_conv20_shift_x_q;
            default : rightShiftStage0_uid494_i_next_initerations_conv20_shift_x_q = 2'b0;
        endcase
    end

    // i_next_initerations_conv235_vt_select_0(BITSELECT,213)@131
    assign i_next_initerations_conv235_vt_select_0_b = rightShiftStage0_uid494_i_next_initerations_conv20_shift_x_q[0:0];

    // i_next_initerations_conv235_vt_join(BITJOIN,212)@131
    assign i_next_initerations_conv235_vt_join_q = {GND_q, i_next_initerations_conv235_vt_select_0_b};

    // bubble_join_i_llvm_fpga_pipeline_keep_going_conv23(BITJOIN,2304)
    assign bubble_join_i_llvm_fpga_pipeline_keep_going_conv23_q = i_llvm_fpga_pipeline_keep_going_conv23_out_data_out;

    // bubble_select_i_llvm_fpga_pipeline_keep_going_conv23(BITSELECT,2305)
    assign bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b = $unsigned(bubble_join_i_llvm_fpga_pipeline_keep_going_conv23_q[0:0]);

    // SE_out_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264(STALLENABLE,2677)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_wireValid = i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_out_valid_out;

    // bubble_join_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224(BITJOIN,2406)
    assign bubble_join_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_q = i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out;

    // bubble_select_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224(BITSELECT,2407)
    assign bubble_select_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_b = $unsigned(bubble_join_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_q[63:0]);

    // redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo(STALLFIFO,2230)
    assign redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_valid_in = SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_V1;
    assign redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_stall_in = SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_backStall;
    assign redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_data_in = bubble_select_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_b;
    assign redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_valid_in_bitsignaltemp = redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_valid_in[0];
    assign redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_stall_in_bitsignaltemp = redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_stall_in[0];
    assign redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_valid_out[0] = redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_valid_out_bitsignaltemp;
    assign redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_stall_out[0] = redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(68),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(64),
        .IMPL("ram")
    ) theredist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo (
        .valid_in(redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_valid_in_bitsignaltemp),
        .stall_in(redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_stall_in_bitsignaltemp),
        .data_in(bubble_select_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_b),
        .valid_out(redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_valid_out_bitsignaltemp),
        .stall_out(redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_stall_out_bitsignaltemp),
        .data_out(redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232(BITJOIN,2331)
    assign bubble_join_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_q = i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232(BITSELECT,2332)
    assign bubble_select_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_b = $unsigned(bubble_join_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_q[0:0]);

    // redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo(STALLFIFO,2250)
    assign redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_valid_in = SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_V1;
    assign redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_stall_in = SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_backStall;
    assign redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_data_in = bubble_select_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_b;
    assign redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_valid_in_bitsignaltemp = redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_valid_in[0];
    assign redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_stall_in_bitsignaltemp = redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_stall_in[0];
    assign redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_valid_out[0] = redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_valid_out_bitsignaltemp;
    assign redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_stall_out[0] = redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(69),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(1),
        .IMPL("ram")
    ) theredist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo (
        .valid_in(redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_valid_in_bitsignaltemp),
        .stall_in(redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_stall_in_bitsignaltemp),
        .data_in(bubble_select_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_b),
        .valid_out(redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_valid_out_bitsignaltemp),
        .stall_out(redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_stall_out_bitsignaltemp),
        .data_out(redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo(BITJOIN,2467)
    assign bubble_join_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_q = redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_data_out;

    // bubble_select_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo(BITSELECT,2468)
    assign bubble_select_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_b = $unsigned(bubble_join_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_q[0:0]);

    // redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo(STALLFIFO,2252)
    assign redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_valid_in = SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_V1;
    assign redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_stall_in = SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_backStall;
    assign redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_data_in = bubble_select_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_b;
    assign redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_valid_in_bitsignaltemp = redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_valid_in[0];
    assign redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_stall_in_bitsignaltemp = redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_stall_in[0];
    assign redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_valid_out[0] = redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_valid_out_bitsignaltemp;
    assign redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_stall_out[0] = redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(69),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(1),
        .IMPL("ram")
    ) theredist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo (
        .valid_in(redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_valid_in_bitsignaltemp),
        .stall_in(redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_stall_in_bitsignaltemp),
        .data_in(bubble_select_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_b),
        .valid_out(redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_valid_out_bitsignaltemp),
        .stall_out(redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_stall_out_bitsignaltemp),
        .data_out(redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // join_for_coalesced_delay_4(BITJOIN,2179)
    assign join_for_coalesced_delay_4_q = {bubble_select_conv2_B7_merge_reg_aunroll_x_z, bubble_select_conv2_B7_merge_reg_aunroll_x_y, bubble_select_conv2_B7_merge_reg_aunroll_x_w, bubble_select_conv2_B7_merge_reg_aunroll_x_v, bubble_select_conv2_B7_merge_reg_aunroll_x_p, bubble_select_conv2_B7_merge_reg_aunroll_x_o, bubble_select_conv2_B7_merge_reg_aunroll_x_l, bubble_select_conv2_B7_merge_reg_aunroll_x_k, bubble_select_conv2_B7_merge_reg_aunroll_x_i, bubble_select_conv2_B7_merge_reg_aunroll_x_h};

    // coalesced_delay_4_fifo(STALLFIFO,2274)
    assign coalesced_delay_4_fifo_valid_in = SE_out_conv2_B7_merge_reg_aunroll_x_V13;
    assign coalesced_delay_4_fifo_stall_in = SR_SE_out_coalesced_delay_4_fifo_backStall;
    assign coalesced_delay_4_fifo_data_in = join_for_coalesced_delay_4_q;
    assign coalesced_delay_4_fifo_valid_in_bitsignaltemp = coalesced_delay_4_fifo_valid_in[0];
    assign coalesced_delay_4_fifo_stall_in_bitsignaltemp = coalesced_delay_4_fifo_stall_in[0];
    assign coalesced_delay_4_fifo_valid_out[0] = coalesced_delay_4_fifo_valid_out_bitsignaltemp;
    assign coalesced_delay_4_fifo_stall_out[0] = coalesced_delay_4_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(130),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(10),
        .IMPL("ram")
    ) thecoalesced_delay_4_fifo (
        .valid_in(coalesced_delay_4_fifo_valid_in_bitsignaltemp),
        .stall_in(coalesced_delay_4_fifo_stall_in_bitsignaltemp),
        .data_in(join_for_coalesced_delay_4_q),
        .valid_out(coalesced_delay_4_fifo_valid_out_bitsignaltemp),
        .stall_out(coalesced_delay_4_fifo_stall_out_bitsignaltemp),
        .data_out(coalesced_delay_4_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // join_for_coalesced_delay_3(BITJOIN,2176)
    assign join_for_coalesced_delay_3_q = {bubble_select_conv2_B7_merge_reg_aunroll_x_m, bubble_select_conv2_B7_merge_reg_aunroll_x_f};

    // coalesced_delay_3_fifo(STALLFIFO,2273)
    assign coalesced_delay_3_fifo_valid_in = SE_out_conv2_B7_merge_reg_aunroll_x_V12;
    assign coalesced_delay_3_fifo_stall_in = SR_SE_out_coalesced_delay_3_fifo_backStall;
    assign coalesced_delay_3_fifo_data_in = join_for_coalesced_delay_3_q;
    assign coalesced_delay_3_fifo_valid_in_bitsignaltemp = coalesced_delay_3_fifo_valid_in[0];
    assign coalesced_delay_3_fifo_stall_in_bitsignaltemp = coalesced_delay_3_fifo_stall_in[0];
    assign coalesced_delay_3_fifo_valid_out[0] = coalesced_delay_3_fifo_valid_out_bitsignaltemp;
    assign coalesced_delay_3_fifo_stall_out[0] = coalesced_delay_3_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(99),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(64),
        .IMPL("ram")
    ) thecoalesced_delay_3_fifo (
        .valid_in(coalesced_delay_3_fifo_valid_in_bitsignaltemp),
        .stall_in(coalesced_delay_3_fifo_stall_in_bitsignaltemp),
        .data_in(join_for_coalesced_delay_3_q),
        .valid_out(coalesced_delay_3_fifo_valid_out_bitsignaltemp),
        .stall_out(coalesced_delay_3_fifo_stall_out_bitsignaltemp),
        .data_out(coalesced_delay_3_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // join_for_coalesced_delay_2(BITJOIN,2173)
    assign join_for_coalesced_delay_2_q = {bubble_select_conv2_B7_merge_reg_aunroll_x_n, bubble_select_conv2_B7_merge_reg_aunroll_x_u, bubble_select_conv2_B7_merge_reg_aunroll_x_s};

    // coalesced_delay_2_fifo(STALLFIFO,2272)
    assign coalesced_delay_2_fifo_valid_in = SE_out_conv2_B7_merge_reg_aunroll_x_V11;
    assign coalesced_delay_2_fifo_stall_in = SR_SE_out_coalesced_delay_2_fifo_backStall;
    assign coalesced_delay_2_fifo_data_in = join_for_coalesced_delay_2_q;
    assign coalesced_delay_2_fifo_valid_in_bitsignaltemp = coalesced_delay_2_fifo_valid_in[0];
    assign coalesced_delay_2_fifo_stall_in_bitsignaltemp = coalesced_delay_2_fifo_stall_in[0];
    assign coalesced_delay_2_fifo_valid_out[0] = coalesced_delay_2_fifo_valid_out_bitsignaltemp;
    assign coalesced_delay_2_fifo_stall_out[0] = coalesced_delay_2_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(32),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(129),
        .IMPL("ram")
    ) thecoalesced_delay_2_fifo (
        .valid_in(coalesced_delay_2_fifo_valid_in_bitsignaltemp),
        .stall_in(coalesced_delay_2_fifo_stall_in_bitsignaltemp),
        .data_in(join_for_coalesced_delay_2_q),
        .valid_out(coalesced_delay_2_fifo_valid_out_bitsignaltemp),
        .stall_out(coalesced_delay_2_fifo_stall_out_bitsignaltemp),
        .data_out(coalesced_delay_2_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // join_for_coalesced_delay_1(BITJOIN,2170)
    assign join_for_coalesced_delay_1_q = {bubble_select_conv2_B7_merge_reg_aunroll_x_aa, bubble_select_conv2_B7_merge_reg_aunroll_x_q};

    // coalesced_delay_1_fifo(STALLFIFO,2271)
    assign coalesced_delay_1_fifo_valid_in = SE_out_conv2_B7_merge_reg_aunroll_x_V10;
    assign coalesced_delay_1_fifo_stall_in = SR_SE_out_coalesced_delay_1_fifo_backStall;
    assign coalesced_delay_1_fifo_data_in = join_for_coalesced_delay_1_q;
    assign coalesced_delay_1_fifo_valid_in_bitsignaltemp = coalesced_delay_1_fifo_valid_in[0];
    assign coalesced_delay_1_fifo_stall_in_bitsignaltemp = coalesced_delay_1_fifo_stall_in[0];
    assign coalesced_delay_1_fifo_valid_out[0] = coalesced_delay_1_fifo_valid_out_bitsignaltemp;
    assign coalesced_delay_1_fifo_stall_out[0] = coalesced_delay_1_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(31),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(2),
        .IMPL("ram")
    ) thecoalesced_delay_1_fifo (
        .valid_in(coalesced_delay_1_fifo_valid_in_bitsignaltemp),
        .stall_in(coalesced_delay_1_fifo_stall_in_bitsignaltemp),
        .data_in(join_for_coalesced_delay_1_q),
        .valid_out(coalesced_delay_1_fifo_valid_out_bitsignaltemp),
        .stall_out(coalesced_delay_1_fifo_stall_out_bitsignaltemp),
        .data_out(coalesced_delay_1_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // join_for_coalesced_delay_0(BITJOIN,2167)
    assign join_for_coalesced_delay_0_q = {bubble_select_conv2_B7_merge_reg_aunroll_x_b, bubble_select_conv2_B7_merge_reg_aunroll_x_r};

    // bubble_join_coalesced_delay_0_fifo(BITJOIN,2500)
    assign bubble_join_coalesced_delay_0_fifo_q = coalesced_delay_0_fifo_data_out;

    // bubble_select_coalesced_delay_0_fifo(BITSELECT,2501)
    assign bubble_select_coalesced_delay_0_fifo_b = $unsigned(bubble_join_coalesced_delay_0_fifo_q[64:0]);

    // sel_for_coalesced_delay_0(BITSELECT,2168)
    assign sel_for_coalesced_delay_0_b = $unsigned(bubble_select_coalesced_delay_0_fifo_b[63:0]);
    assign sel_for_coalesced_delay_0_c = $unsigned(bubble_select_coalesced_delay_0_fifo_b[64:64]);

    // highBBits_uid1658_i_arrayidx32_conv20_mult_x_im6(BITSELECT,1657)@25
    assign highBBits_uid1658_i_arrayidx32_conv20_mult_x_im6_b = i_arrayidx32_conv20_mult_x_bs7_b[17:3];

    // bubble_join_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223(BITJOIN,2403)
    assign bubble_join_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_q = i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223(BITSELECT,2404)
    assign bubble_select_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_b = $unsigned(bubble_join_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_q[63:0]);

    // i_arrayidx32_conv20_mult_x_bs7(BITSELECT,468)@25
    assign i_arrayidx32_conv20_mult_x_bs7_in = bubble_select_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_b[53:0];
    assign i_arrayidx32_conv20_mult_x_bs7_b = i_arrayidx32_conv20_mult_x_bs7_in[53:36];

    // addsumAHighB_uid1659_i_arrayidx32_conv20_mult_x_im6(ADD,1658)@25 + 1
    assign addsumAHighB_uid1659_i_arrayidx32_conv20_mult_x_im6_a = {1'b0, i_arrayidx32_conv20_mult_x_bs7_b};
    assign addsumAHighB_uid1659_i_arrayidx32_conv20_mult_x_im6_b = {4'b0000, highBBits_uid1658_i_arrayidx32_conv20_mult_x_im6_b};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            addsumAHighB_uid1659_i_arrayidx32_conv20_mult_x_im6_o <= 19'b0;
        end
        else if (SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN == 1'b1)
        begin
            addsumAHighB_uid1659_i_arrayidx32_conv20_mult_x_im6_o <= $unsigned(addsumAHighB_uid1659_i_arrayidx32_conv20_mult_x_im6_a) + $unsigned(addsumAHighB_uid1659_i_arrayidx32_conv20_mult_x_im6_b);
        end
    end
    assign addsumAHighB_uid1659_i_arrayidx32_conv20_mult_x_im6_q = addsumAHighB_uid1659_i_arrayidx32_conv20_mult_x_im6_o[18:0];

    // lowRangeB_uid1657_i_arrayidx32_conv20_mult_x_im6(BITSELECT,1656)@25
    assign lowRangeB_uid1657_i_arrayidx32_conv20_mult_x_im6_in = i_arrayidx32_conv20_mult_x_bs7_b[2:0];
    assign lowRangeB_uid1657_i_arrayidx32_conv20_mult_x_im6_b = lowRangeB_uid1657_i_arrayidx32_conv20_mult_x_im6_in[2:0];

    // redist31_lowRangeB_uid1657_i_arrayidx32_conv20_mult_x_im6_b_1_0(REG,2212)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist31_lowRangeB_uid1657_i_arrayidx32_conv20_mult_x_im6_b_1_0_q <= $unsigned(3'b000);
        end
        else if (SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN == 1'b1)
        begin
            redist31_lowRangeB_uid1657_i_arrayidx32_conv20_mult_x_im6_b_1_0_q <= $unsigned(lowRangeB_uid1657_i_arrayidx32_conv20_mult_x_im6_b);
        end
    end

    // add_uid1660_i_arrayidx32_conv20_mult_x_im6(BITJOIN,1659)@26
    assign add_uid1660_i_arrayidx32_conv20_mult_x_im6_q = {addsumAHighB_uid1659_i_arrayidx32_conv20_mult_x_im6_q, redist31_lowRangeB_uid1657_i_arrayidx32_conv20_mult_x_im6_b_1_0_q};

    // a_subconst_75_sumAHighB_uid1664_i_arrayidx32_conv20_mult_x_im6(ADD,1663)@26
    assign a_subconst_75_sumAHighB_uid1664_i_arrayidx32_conv20_mult_x_im6_a = {1'b0, add_uid1660_i_arrayidx32_conv20_mult_x_im6_q};
    assign a_subconst_75_sumAHighB_uid1664_i_arrayidx32_conv20_mult_x_im6_b = {6'b000000, lowRangeB_uid1662_i_arrayidx32_conv20_mult_x_im6_merged_bit_select_c};
    assign a_subconst_75_sumAHighB_uid1664_i_arrayidx32_conv20_mult_x_im6_o = $unsigned(a_subconst_75_sumAHighB_uid1664_i_arrayidx32_conv20_mult_x_im6_a) + $unsigned(a_subconst_75_sumAHighB_uid1664_i_arrayidx32_conv20_mult_x_im6_b);
    assign a_subconst_75_sumAHighB_uid1664_i_arrayidx32_conv20_mult_x_im6_q = a_subconst_75_sumAHighB_uid1664_i_arrayidx32_conv20_mult_x_im6_o[22:0];

    // highBBits_uid1652_i_arrayidx32_conv20_mult_x_im6(BITSELECT,1651)@25
    assign highBBits_uid1652_i_arrayidx32_conv20_mult_x_im6_b = i_arrayidx32_conv20_mult_x_bs7_b[17:1];

    // addsumAHighB_uid1653_i_arrayidx32_conv20_mult_x_im6(ADD,1652)@25 + 1
    assign addsumAHighB_uid1653_i_arrayidx32_conv20_mult_x_im6_a = {1'b0, i_arrayidx32_conv20_mult_x_bs7_b};
    assign addsumAHighB_uid1653_i_arrayidx32_conv20_mult_x_im6_b = {2'b00, highBBits_uid1652_i_arrayidx32_conv20_mult_x_im6_b};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            addsumAHighB_uid1653_i_arrayidx32_conv20_mult_x_im6_o <= 19'b0;
        end
        else if (SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN == 1'b1)
        begin
            addsumAHighB_uid1653_i_arrayidx32_conv20_mult_x_im6_o <= $unsigned(addsumAHighB_uid1653_i_arrayidx32_conv20_mult_x_im6_a) + $unsigned(addsumAHighB_uid1653_i_arrayidx32_conv20_mult_x_im6_b);
        end
    end
    assign addsumAHighB_uid1653_i_arrayidx32_conv20_mult_x_im6_q = addsumAHighB_uid1653_i_arrayidx32_conv20_mult_x_im6_o[18:0];

    // lowRangeB_uid1651_i_arrayidx32_conv20_mult_x_im6(BITSELECT,1650)@25
    assign lowRangeB_uid1651_i_arrayidx32_conv20_mult_x_im6_in = i_arrayidx32_conv20_mult_x_bs7_b[0:0];
    assign lowRangeB_uid1651_i_arrayidx32_conv20_mult_x_im6_b = lowRangeB_uid1651_i_arrayidx32_conv20_mult_x_im6_in[0:0];

    // redist32_lowRangeB_uid1651_i_arrayidx32_conv20_mult_x_im6_b_1_0(REG,2213)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist32_lowRangeB_uid1651_i_arrayidx32_conv20_mult_x_im6_b_1_0_q <= $unsigned(1'b0);
        end
        else if (SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN == 1'b1)
        begin
            redist32_lowRangeB_uid1651_i_arrayidx32_conv20_mult_x_im6_b_1_0_q <= $unsigned(lowRangeB_uid1651_i_arrayidx32_conv20_mult_x_im6_b);
        end
    end

    // add_uid1654_i_arrayidx32_conv20_mult_x_im6(BITJOIN,1653)@26
    assign add_uid1654_i_arrayidx32_conv20_mult_x_im6_q = {addsumAHighB_uid1653_i_arrayidx32_conv20_mult_x_im6_q, redist32_lowRangeB_uid1651_i_arrayidx32_conv20_mult_x_im6_b_1_0_q};

    // lowRangeB_uid1662_i_arrayidx32_conv20_mult_x_im6_merged_bit_select(BITSELECT,2057)@26
    assign lowRangeB_uid1662_i_arrayidx32_conv20_mult_x_im6_merged_bit_select_b = add_uid1654_i_arrayidx32_conv20_mult_x_im6_q[2:0];
    assign lowRangeB_uid1662_i_arrayidx32_conv20_mult_x_im6_merged_bit_select_c = add_uid1654_i_arrayidx32_conv20_mult_x_im6_q[19:3];

    // a_subconst_75_uid1665_i_arrayidx32_conv20_mult_x_im6(BITJOIN,1664)@26
    assign a_subconst_75_uid1665_i_arrayidx32_conv20_mult_x_im6_q = {a_subconst_75_sumAHighB_uid1664_i_arrayidx32_conv20_mult_x_im6_q, lowRangeB_uid1662_i_arrayidx32_conv20_mult_x_im6_merged_bit_select_b};

    // sR_bottomRange_uid1669_i_arrayidx32_conv20_mult_x_im6(BITSELECT,1668)@26
    assign sR_bottomRange_uid1669_i_arrayidx32_conv20_mult_x_im6_in = a_subconst_75_uid1665_i_arrayidx32_conv20_mult_x_im6_q[24:0];
    assign sR_bottomRange_uid1669_i_arrayidx32_conv20_mult_x_im6_b = sR_bottomRange_uid1669_i_arrayidx32_conv20_mult_x_im6_in[24:0];

    // redist30_sR_bottomRange_uid1669_i_arrayidx32_conv20_mult_x_im6_b_1_0(REG,2211)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist30_sR_bottomRange_uid1669_i_arrayidx32_conv20_mult_x_im6_b_1_0_q <= $unsigned(25'b0000000000000000000000000);
        end
        else if (SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_backEN == 1'b1)
        begin
            redist30_sR_bottomRange_uid1669_i_arrayidx32_conv20_mult_x_im6_b_1_0_q <= $unsigned(sR_bottomRange_uid1669_i_arrayidx32_conv20_mult_x_im6_b);
        end
    end

    // padACst_uid527_i_arrayidx24_conv20_dupName_0_mult_x_im0(CONSTANT,526)
    assign padACst_uid527_i_arrayidx24_conv20_dupName_0_mult_x_im0_q = $unsigned(3'b000);

    // sR_mergedSignalTM_uid1670_i_arrayidx32_conv20_mult_x_im6(BITJOIN,1669)@27
    assign sR_mergedSignalTM_uid1670_i_arrayidx32_conv20_mult_x_im6_q = {redist30_sR_bottomRange_uid1669_i_arrayidx32_conv20_mult_x_im6_b_1_0_q, padACst_uid527_i_arrayidx24_conv20_dupName_0_mult_x_im0_q};

    // i_arrayidx32_conv20_mult_x_sums_align_0(BITSHIFT,473)@27
    assign i_arrayidx32_conv20_mult_x_sums_align_0_qint = { sR_mergedSignalTM_uid1670_i_arrayidx32_conv20_mult_x_im6_q, 8'b00000000 };
    assign i_arrayidx32_conv20_mult_x_sums_align_0_q = i_arrayidx32_conv20_mult_x_sums_align_0_qint[35:0];

    // i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_4_merged_bit_select(BITSELECT,2054)@27
    assign i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_4_merged_bit_select_b = $unsigned(i_arrayidx32_conv20_mult_x_sums_align_0_q[23:0]);
    assign i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_4_merged_bit_select_c = $unsigned(i_arrayidx32_conv20_mult_x_sums_align_0_q[35:24]);

    // highBBits_uid1737_i_arrayidx32_conv20_mult_x_im9(BITSELECT,1736)@25
    assign highBBits_uid1737_i_arrayidx32_conv20_mult_x_im9_b = i_arrayidx32_conv20_mult_x_bs10_b[9:3];

    // i_arrayidx32_conv20_mult_x_bs10(BITSELECT,471)@25
    assign i_arrayidx32_conv20_mult_x_bs10_b = bubble_select_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_b[63:54];

    // addsumAHighB_uid1738_i_arrayidx32_conv20_mult_x_im9(ADD,1737)@25 + 1
    assign addsumAHighB_uid1738_i_arrayidx32_conv20_mult_x_im9_a = {1'b0, i_arrayidx32_conv20_mult_x_bs10_b};
    assign addsumAHighB_uid1738_i_arrayidx32_conv20_mult_x_im9_b = {4'b0000, highBBits_uid1737_i_arrayidx32_conv20_mult_x_im9_b};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            addsumAHighB_uid1738_i_arrayidx32_conv20_mult_x_im9_o <= 11'b0;
        end
        else if (SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN == 1'b1)
        begin
            addsumAHighB_uid1738_i_arrayidx32_conv20_mult_x_im9_o <= $unsigned(addsumAHighB_uid1738_i_arrayidx32_conv20_mult_x_im9_a) + $unsigned(addsumAHighB_uid1738_i_arrayidx32_conv20_mult_x_im9_b);
        end
    end
    assign addsumAHighB_uid1738_i_arrayidx32_conv20_mult_x_im9_q = addsumAHighB_uid1738_i_arrayidx32_conv20_mult_x_im9_o[10:0];

    // lowRangeB_uid1736_i_arrayidx32_conv20_mult_x_im9(BITSELECT,1735)@25
    assign lowRangeB_uid1736_i_arrayidx32_conv20_mult_x_im9_in = i_arrayidx32_conv20_mult_x_bs10_b[2:0];
    assign lowRangeB_uid1736_i_arrayidx32_conv20_mult_x_im9_b = lowRangeB_uid1736_i_arrayidx32_conv20_mult_x_im9_in[2:0];

    // redist28_lowRangeB_uid1736_i_arrayidx32_conv20_mult_x_im9_b_1_0(REG,2209)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist28_lowRangeB_uid1736_i_arrayidx32_conv20_mult_x_im9_b_1_0_q <= $unsigned(3'b000);
        end
        else if (SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN == 1'b1)
        begin
            redist28_lowRangeB_uid1736_i_arrayidx32_conv20_mult_x_im9_b_1_0_q <= $unsigned(lowRangeB_uid1736_i_arrayidx32_conv20_mult_x_im9_b);
        end
    end

    // add_uid1739_i_arrayidx32_conv20_mult_x_im9(BITJOIN,1738)@26
    assign add_uid1739_i_arrayidx32_conv20_mult_x_im9_q = {addsumAHighB_uid1738_i_arrayidx32_conv20_mult_x_im9_q, redist28_lowRangeB_uid1736_i_arrayidx32_conv20_mult_x_im9_b_1_0_q};

    // a_subconst_75_sumAHighB_uid1743_i_arrayidx32_conv20_mult_x_im9(ADD,1742)@26
    assign a_subconst_75_sumAHighB_uid1743_i_arrayidx32_conv20_mult_x_im9_a = {1'b0, add_uid1739_i_arrayidx32_conv20_mult_x_im9_q};
    assign a_subconst_75_sumAHighB_uid1743_i_arrayidx32_conv20_mult_x_im9_b = {6'b000000, lowRangeB_uid1741_i_arrayidx32_conv20_mult_x_im9_merged_bit_select_c};
    assign a_subconst_75_sumAHighB_uid1743_i_arrayidx32_conv20_mult_x_im9_o = $unsigned(a_subconst_75_sumAHighB_uid1743_i_arrayidx32_conv20_mult_x_im9_a) + $unsigned(a_subconst_75_sumAHighB_uid1743_i_arrayidx32_conv20_mult_x_im9_b);
    assign a_subconst_75_sumAHighB_uid1743_i_arrayidx32_conv20_mult_x_im9_q = a_subconst_75_sumAHighB_uid1743_i_arrayidx32_conv20_mult_x_im9_o[14:0];

    // highBBits_uid1731_i_arrayidx32_conv20_mult_x_im9(BITSELECT,1730)@25
    assign highBBits_uid1731_i_arrayidx32_conv20_mult_x_im9_b = i_arrayidx32_conv20_mult_x_bs10_b[9:1];

    // addsumAHighB_uid1732_i_arrayidx32_conv20_mult_x_im9(ADD,1731)@25 + 1
    assign addsumAHighB_uid1732_i_arrayidx32_conv20_mult_x_im9_a = {1'b0, i_arrayidx32_conv20_mult_x_bs10_b};
    assign addsumAHighB_uid1732_i_arrayidx32_conv20_mult_x_im9_b = {2'b00, highBBits_uid1731_i_arrayidx32_conv20_mult_x_im9_b};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            addsumAHighB_uid1732_i_arrayidx32_conv20_mult_x_im9_o <= 11'b0;
        end
        else if (SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN == 1'b1)
        begin
            addsumAHighB_uid1732_i_arrayidx32_conv20_mult_x_im9_o <= $unsigned(addsumAHighB_uid1732_i_arrayidx32_conv20_mult_x_im9_a) + $unsigned(addsumAHighB_uid1732_i_arrayidx32_conv20_mult_x_im9_b);
        end
    end
    assign addsumAHighB_uid1732_i_arrayidx32_conv20_mult_x_im9_q = addsumAHighB_uid1732_i_arrayidx32_conv20_mult_x_im9_o[10:0];

    // lowRangeB_uid1730_i_arrayidx32_conv20_mult_x_im9(BITSELECT,1729)@25
    assign lowRangeB_uid1730_i_arrayidx32_conv20_mult_x_im9_in = i_arrayidx32_conv20_mult_x_bs10_b[0:0];
    assign lowRangeB_uid1730_i_arrayidx32_conv20_mult_x_im9_b = lowRangeB_uid1730_i_arrayidx32_conv20_mult_x_im9_in[0:0];

    // redist29_lowRangeB_uid1730_i_arrayidx32_conv20_mult_x_im9_b_1_0(REG,2210)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist29_lowRangeB_uid1730_i_arrayidx32_conv20_mult_x_im9_b_1_0_q <= $unsigned(1'b0);
        end
        else if (SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN == 1'b1)
        begin
            redist29_lowRangeB_uid1730_i_arrayidx32_conv20_mult_x_im9_b_1_0_q <= $unsigned(lowRangeB_uid1730_i_arrayidx32_conv20_mult_x_im9_b);
        end
    end

    // add_uid1733_i_arrayidx32_conv20_mult_x_im9(BITJOIN,1732)@26
    assign add_uid1733_i_arrayidx32_conv20_mult_x_im9_q = {addsumAHighB_uid1732_i_arrayidx32_conv20_mult_x_im9_q, redist29_lowRangeB_uid1730_i_arrayidx32_conv20_mult_x_im9_b_1_0_q};

    // lowRangeB_uid1741_i_arrayidx32_conv20_mult_x_im9_merged_bit_select(BITSELECT,2058)@26
    assign lowRangeB_uid1741_i_arrayidx32_conv20_mult_x_im9_merged_bit_select_b = add_uid1733_i_arrayidx32_conv20_mult_x_im9_q[2:0];
    assign lowRangeB_uid1741_i_arrayidx32_conv20_mult_x_im9_merged_bit_select_c = add_uid1733_i_arrayidx32_conv20_mult_x_im9_q[11:3];

    // a_subconst_75_uid1744_i_arrayidx32_conv20_mult_x_im9(BITJOIN,1743)@26
    assign a_subconst_75_uid1744_i_arrayidx32_conv20_mult_x_im9_q = {a_subconst_75_sumAHighB_uid1743_i_arrayidx32_conv20_mult_x_im9_q, lowRangeB_uid1741_i_arrayidx32_conv20_mult_x_im9_merged_bit_select_b};

    // sR_bottomRange_uid1748_i_arrayidx32_conv20_mult_x_im9(BITSELECT,1747)@26
    assign sR_bottomRange_uid1748_i_arrayidx32_conv20_mult_x_im9_in = a_subconst_75_uid1744_i_arrayidx32_conv20_mult_x_im9_q[16:0];
    assign sR_bottomRange_uid1748_i_arrayidx32_conv20_mult_x_im9_b = sR_bottomRange_uid1748_i_arrayidx32_conv20_mult_x_im9_in[16:0];

    // redist27_sR_bottomRange_uid1748_i_arrayidx32_conv20_mult_x_im9_b_1_0(REG,2208)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist27_sR_bottomRange_uid1748_i_arrayidx32_conv20_mult_x_im9_b_1_0_q <= $unsigned(17'b00000000000000000);
        end
        else if (SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_backEN == 1'b1)
        begin
            redist27_sR_bottomRange_uid1748_i_arrayidx32_conv20_mult_x_im9_b_1_0_q <= $unsigned(sR_bottomRange_uid1748_i_arrayidx32_conv20_mult_x_im9_b);
        end
    end

    // sR_mergedSignalTM_uid1749_i_arrayidx32_conv20_mult_x_im9(BITJOIN,1748)@27
    assign sR_mergedSignalTM_uid1749_i_arrayidx32_conv20_mult_x_im9_q = {redist27_sR_bottomRange_uid1748_i_arrayidx32_conv20_mult_x_im9_b_1_0_q, padACst_uid527_i_arrayidx24_conv20_dupName_0_mult_x_im0_q};

    // i_arrayidx32_conv20_mult_x_sums_align_3(BITSHIFT,476)@27
    assign i_arrayidx32_conv20_mult_x_sums_align_3_qint = { sR_mergedSignalTM_uid1749_i_arrayidx32_conv20_mult_x_im9_q, 8'b00000000 };
    assign i_arrayidx32_conv20_mult_x_sums_align_3_q = i_arrayidx32_conv20_mult_x_sums_align_3_qint[27:0];

    // i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select(BITSELECT,2055)@27
    assign i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_b = $unsigned(i_arrayidx32_conv20_mult_x_sums_align_3_q[5:0]);
    assign i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c = $unsigned(i_arrayidx32_conv20_mult_x_sums_align_3_q[27:6]);

    // highBBits_uid1579_i_arrayidx32_conv20_mult_x_im3(BITSELECT,1578)@25
    assign highBBits_uid1579_i_arrayidx32_conv20_mult_x_im3_b = i_arrayidx32_conv20_mult_x_bs4_b[17:3];

    // i_arrayidx32_conv20_mult_x_bs4(BITSELECT,465)@25
    assign i_arrayidx32_conv20_mult_x_bs4_in = bubble_select_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_b[35:0];
    assign i_arrayidx32_conv20_mult_x_bs4_b = i_arrayidx32_conv20_mult_x_bs4_in[35:18];

    // addsumAHighB_uid1580_i_arrayidx32_conv20_mult_x_im3(ADD,1579)@25 + 1
    assign addsumAHighB_uid1580_i_arrayidx32_conv20_mult_x_im3_a = {1'b0, i_arrayidx32_conv20_mult_x_bs4_b};
    assign addsumAHighB_uid1580_i_arrayidx32_conv20_mult_x_im3_b = {4'b0000, highBBits_uid1579_i_arrayidx32_conv20_mult_x_im3_b};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            addsumAHighB_uid1580_i_arrayidx32_conv20_mult_x_im3_o <= 19'b0;
        end
        else if (SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN == 1'b1)
        begin
            addsumAHighB_uid1580_i_arrayidx32_conv20_mult_x_im3_o <= $unsigned(addsumAHighB_uid1580_i_arrayidx32_conv20_mult_x_im3_a) + $unsigned(addsumAHighB_uid1580_i_arrayidx32_conv20_mult_x_im3_b);
        end
    end
    assign addsumAHighB_uid1580_i_arrayidx32_conv20_mult_x_im3_q = addsumAHighB_uid1580_i_arrayidx32_conv20_mult_x_im3_o[18:0];

    // lowRangeB_uid1578_i_arrayidx32_conv20_mult_x_im3(BITSELECT,1577)@25
    assign lowRangeB_uid1578_i_arrayidx32_conv20_mult_x_im3_in = i_arrayidx32_conv20_mult_x_bs4_b[2:0];
    assign lowRangeB_uid1578_i_arrayidx32_conv20_mult_x_im3_b = lowRangeB_uid1578_i_arrayidx32_conv20_mult_x_im3_in[2:0];

    // redist34_lowRangeB_uid1578_i_arrayidx32_conv20_mult_x_im3_b_1_0(REG,2215)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist34_lowRangeB_uid1578_i_arrayidx32_conv20_mult_x_im3_b_1_0_q <= $unsigned(3'b000);
        end
        else if (SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN == 1'b1)
        begin
            redist34_lowRangeB_uid1578_i_arrayidx32_conv20_mult_x_im3_b_1_0_q <= $unsigned(lowRangeB_uid1578_i_arrayidx32_conv20_mult_x_im3_b);
        end
    end

    // add_uid1581_i_arrayidx32_conv20_mult_x_im3(BITJOIN,1580)@26
    assign add_uid1581_i_arrayidx32_conv20_mult_x_im3_q = {addsumAHighB_uid1580_i_arrayidx32_conv20_mult_x_im3_q, redist34_lowRangeB_uid1578_i_arrayidx32_conv20_mult_x_im3_b_1_0_q};

    // a_subconst_75_sumAHighB_uid1585_i_arrayidx32_conv20_mult_x_im3(ADD,1584)@26
    assign a_subconst_75_sumAHighB_uid1585_i_arrayidx32_conv20_mult_x_im3_a = {1'b0, add_uid1581_i_arrayidx32_conv20_mult_x_im3_q};
    assign a_subconst_75_sumAHighB_uid1585_i_arrayidx32_conv20_mult_x_im3_b = {6'b000000, lowRangeB_uid1583_i_arrayidx32_conv20_mult_x_im3_merged_bit_select_c};
    assign a_subconst_75_sumAHighB_uid1585_i_arrayidx32_conv20_mult_x_im3_o = $unsigned(a_subconst_75_sumAHighB_uid1585_i_arrayidx32_conv20_mult_x_im3_a) + $unsigned(a_subconst_75_sumAHighB_uid1585_i_arrayidx32_conv20_mult_x_im3_b);
    assign a_subconst_75_sumAHighB_uid1585_i_arrayidx32_conv20_mult_x_im3_q = a_subconst_75_sumAHighB_uid1585_i_arrayidx32_conv20_mult_x_im3_o[22:0];

    // highBBits_uid1573_i_arrayidx32_conv20_mult_x_im3(BITSELECT,1572)@25
    assign highBBits_uid1573_i_arrayidx32_conv20_mult_x_im3_b = i_arrayidx32_conv20_mult_x_bs4_b[17:1];

    // addsumAHighB_uid1574_i_arrayidx32_conv20_mult_x_im3(ADD,1573)@25 + 1
    assign addsumAHighB_uid1574_i_arrayidx32_conv20_mult_x_im3_a = {1'b0, i_arrayidx32_conv20_mult_x_bs4_b};
    assign addsumAHighB_uid1574_i_arrayidx32_conv20_mult_x_im3_b = {2'b00, highBBits_uid1573_i_arrayidx32_conv20_mult_x_im3_b};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            addsumAHighB_uid1574_i_arrayidx32_conv20_mult_x_im3_o <= 19'b0;
        end
        else if (SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN == 1'b1)
        begin
            addsumAHighB_uid1574_i_arrayidx32_conv20_mult_x_im3_o <= $unsigned(addsumAHighB_uid1574_i_arrayidx32_conv20_mult_x_im3_a) + $unsigned(addsumAHighB_uid1574_i_arrayidx32_conv20_mult_x_im3_b);
        end
    end
    assign addsumAHighB_uid1574_i_arrayidx32_conv20_mult_x_im3_q = addsumAHighB_uid1574_i_arrayidx32_conv20_mult_x_im3_o[18:0];

    // lowRangeB_uid1572_i_arrayidx32_conv20_mult_x_im3(BITSELECT,1571)@25
    assign lowRangeB_uid1572_i_arrayidx32_conv20_mult_x_im3_in = i_arrayidx32_conv20_mult_x_bs4_b[0:0];
    assign lowRangeB_uid1572_i_arrayidx32_conv20_mult_x_im3_b = lowRangeB_uid1572_i_arrayidx32_conv20_mult_x_im3_in[0:0];

    // redist35_lowRangeB_uid1572_i_arrayidx32_conv20_mult_x_im3_b_1_0(REG,2216)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist35_lowRangeB_uid1572_i_arrayidx32_conv20_mult_x_im3_b_1_0_q <= $unsigned(1'b0);
        end
        else if (SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN == 1'b1)
        begin
            redist35_lowRangeB_uid1572_i_arrayidx32_conv20_mult_x_im3_b_1_0_q <= $unsigned(lowRangeB_uid1572_i_arrayidx32_conv20_mult_x_im3_b);
        end
    end

    // add_uid1575_i_arrayidx32_conv20_mult_x_im3(BITJOIN,1574)@26
    assign add_uid1575_i_arrayidx32_conv20_mult_x_im3_q = {addsumAHighB_uid1574_i_arrayidx32_conv20_mult_x_im3_q, redist35_lowRangeB_uid1572_i_arrayidx32_conv20_mult_x_im3_b_1_0_q};

    // lowRangeB_uid1583_i_arrayidx32_conv20_mult_x_im3_merged_bit_select(BITSELECT,2056)@26
    assign lowRangeB_uid1583_i_arrayidx32_conv20_mult_x_im3_merged_bit_select_b = add_uid1575_i_arrayidx32_conv20_mult_x_im3_q[2:0];
    assign lowRangeB_uid1583_i_arrayidx32_conv20_mult_x_im3_merged_bit_select_c = add_uid1575_i_arrayidx32_conv20_mult_x_im3_q[19:3];

    // a_subconst_75_uid1586_i_arrayidx32_conv20_mult_x_im3(BITJOIN,1585)@26
    assign a_subconst_75_uid1586_i_arrayidx32_conv20_mult_x_im3_q = {a_subconst_75_sumAHighB_uid1585_i_arrayidx32_conv20_mult_x_im3_q, lowRangeB_uid1583_i_arrayidx32_conv20_mult_x_im3_merged_bit_select_b};

    // sR_bottomRange_uid1590_i_arrayidx32_conv20_mult_x_im3(BITSELECT,1589)@26
    assign sR_bottomRange_uid1590_i_arrayidx32_conv20_mult_x_im3_in = a_subconst_75_uid1586_i_arrayidx32_conv20_mult_x_im3_q[24:0];
    assign sR_bottomRange_uid1590_i_arrayidx32_conv20_mult_x_im3_b = sR_bottomRange_uid1590_i_arrayidx32_conv20_mult_x_im3_in[24:0];

    // redist33_sR_bottomRange_uid1590_i_arrayidx32_conv20_mult_x_im3_b_1_0(REG,2214)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist33_sR_bottomRange_uid1590_i_arrayidx32_conv20_mult_x_im3_b_1_0_q <= $unsigned(25'b0000000000000000000000000);
        end
        else if (SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_backEN == 1'b1)
        begin
            redist33_sR_bottomRange_uid1590_i_arrayidx32_conv20_mult_x_im3_b_1_0_q <= $unsigned(sR_bottomRange_uid1590_i_arrayidx32_conv20_mult_x_im3_b);
        end
    end

    // sR_mergedSignalTM_uid1591_i_arrayidx32_conv20_mult_x_im3(BITJOIN,1590)@27
    assign sR_mergedSignalTM_uid1591_i_arrayidx32_conv20_mult_x_im3_q = {redist33_sR_bottomRange_uid1590_i_arrayidx32_conv20_mult_x_im3_b_1_0_q, padACst_uid527_i_arrayidx24_conv20_dupName_0_mult_x_im0_q};

    // i_arrayidx32_conv20_mult_x_sums_align_2(BITSHIFT,475)@27
    assign i_arrayidx32_conv20_mult_x_sums_align_2_qint = { sR_mergedSignalTM_uid1591_i_arrayidx32_conv20_mult_x_im3_q, 18'b000000000000000000 };
    assign i_arrayidx32_conv20_mult_x_sums_align_2_q = i_arrayidx32_conv20_mult_x_sums_align_2_qint[45:0];

    // i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b(BITJOIN,2037)@27
    assign i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b_q = {i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_b, i_arrayidx32_conv20_mult_x_sums_align_2_q};

    // highBBits_uid1494_i_arrayidx32_conv20_mult_x_im0(BITSELECT,1493)@25
    assign highBBits_uid1494_i_arrayidx32_conv20_mult_x_im0_b = i_arrayidx32_conv20_mult_x_bs1_b[17:1];

    // i_arrayidx32_conv20_mult_x_bs1(BITSELECT,462)@25
    assign i_arrayidx32_conv20_mult_x_bs1_in = bubble_select_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_b[17:0];
    assign i_arrayidx32_conv20_mult_x_bs1_b = i_arrayidx32_conv20_mult_x_bs1_in[17:0];

    // addsumAHighB_uid1495_i_arrayidx32_conv20_mult_x_im0(ADD,1494)@25
    assign addsumAHighB_uid1495_i_arrayidx32_conv20_mult_x_im0_a = {1'b0, i_arrayidx32_conv20_mult_x_bs1_b};
    assign addsumAHighB_uid1495_i_arrayidx32_conv20_mult_x_im0_b = {2'b00, highBBits_uid1494_i_arrayidx32_conv20_mult_x_im0_b};
    assign addsumAHighB_uid1495_i_arrayidx32_conv20_mult_x_im0_o = $unsigned(addsumAHighB_uid1495_i_arrayidx32_conv20_mult_x_im0_a) + $unsigned(addsumAHighB_uid1495_i_arrayidx32_conv20_mult_x_im0_b);
    assign addsumAHighB_uid1495_i_arrayidx32_conv20_mult_x_im0_q = addsumAHighB_uid1495_i_arrayidx32_conv20_mult_x_im0_o[18:0];

    // lowRangeB_uid1493_i_arrayidx32_conv20_mult_x_im0(BITSELECT,1492)@25
    assign lowRangeB_uid1493_i_arrayidx32_conv20_mult_x_im0_in = i_arrayidx32_conv20_mult_x_bs1_b[0:0];
    assign lowRangeB_uid1493_i_arrayidx32_conv20_mult_x_im0_b = lowRangeB_uid1493_i_arrayidx32_conv20_mult_x_im0_in[0:0];

    // add_uid1496_i_arrayidx32_conv20_mult_x_im0(BITJOIN,1495)@25
    assign add_uid1496_i_arrayidx32_conv20_mult_x_im0_q = {addsumAHighB_uid1495_i_arrayidx32_conv20_mult_x_im0_q, lowRangeB_uid1493_i_arrayidx32_conv20_mult_x_im0_b};

    // highBBits_uid1505_i_arrayidx32_conv20_mult_x_im0(BITSELECT,1504)@25
    assign highBBits_uid1505_i_arrayidx32_conv20_mult_x_im0_b = add_uid1496_i_arrayidx32_conv20_mult_x_im0_q[19:3];

    // redist36_highBBits_uid1505_i_arrayidx32_conv20_mult_x_im0_b_1_0(REG,2217)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist36_highBBits_uid1505_i_arrayidx32_conv20_mult_x_im0_b_1_0_q <= $unsigned(17'b00000000000000000);
        end
        else if (SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN == 1'b1)
        begin
            redist36_highBBits_uid1505_i_arrayidx32_conv20_mult_x_im0_b_1_0_q <= $unsigned(highBBits_uid1505_i_arrayidx32_conv20_mult_x_im0_b);
        end
    end

    // highBBits_uid1500_i_arrayidx32_conv20_mult_x_im0(BITSELECT,1499)@25
    assign highBBits_uid1500_i_arrayidx32_conv20_mult_x_im0_b = i_arrayidx32_conv20_mult_x_bs1_b[17:3];

    // addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0(ADD,1500)@25 + 1
    assign addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_a = {1'b0, i_arrayidx32_conv20_mult_x_bs1_b};
    assign addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_b = {4'b0000, highBBits_uid1500_i_arrayidx32_conv20_mult_x_im0_b};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_o <= 19'b0;
        end
        else if (SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN == 1'b1)
        begin
            addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_o <= $unsigned(addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_a) + $unsigned(addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_b);
        end
    end
    assign addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_q = addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_o[18:0];

    // lowRangeB_uid1499_i_arrayidx32_conv20_mult_x_im0(BITSELECT,1498)@25
    assign lowRangeB_uid1499_i_arrayidx32_conv20_mult_x_im0_in = i_arrayidx32_conv20_mult_x_bs1_b[2:0];
    assign lowRangeB_uid1499_i_arrayidx32_conv20_mult_x_im0_b = lowRangeB_uid1499_i_arrayidx32_conv20_mult_x_im0_in[2:0];

    // redist37_lowRangeB_uid1499_i_arrayidx32_conv20_mult_x_im0_b_1_0(REG,2218)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist37_lowRangeB_uid1499_i_arrayidx32_conv20_mult_x_im0_b_1_0_q <= $unsigned(3'b000);
        end
        else if (SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN == 1'b1)
        begin
            redist37_lowRangeB_uid1499_i_arrayidx32_conv20_mult_x_im0_b_1_0_q <= $unsigned(lowRangeB_uid1499_i_arrayidx32_conv20_mult_x_im0_b);
        end
    end

    // add_uid1502_i_arrayidx32_conv20_mult_x_im0(BITJOIN,1501)@26
    assign add_uid1502_i_arrayidx32_conv20_mult_x_im0_q = {addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_q, redist37_lowRangeB_uid1499_i_arrayidx32_conv20_mult_x_im0_b_1_0_q};

    // a_subconst_75_sumAHighB_uid1506_i_arrayidx32_conv20_mult_x_im0(ADD,1505)@26
    assign a_subconst_75_sumAHighB_uid1506_i_arrayidx32_conv20_mult_x_im0_a = {1'b0, add_uid1502_i_arrayidx32_conv20_mult_x_im0_q};
    assign a_subconst_75_sumAHighB_uid1506_i_arrayidx32_conv20_mult_x_im0_b = {6'b000000, redist36_highBBits_uid1505_i_arrayidx32_conv20_mult_x_im0_b_1_0_q};
    assign a_subconst_75_sumAHighB_uid1506_i_arrayidx32_conv20_mult_x_im0_o = $unsigned(a_subconst_75_sumAHighB_uid1506_i_arrayidx32_conv20_mult_x_im0_a) + $unsigned(a_subconst_75_sumAHighB_uid1506_i_arrayidx32_conv20_mult_x_im0_b);
    assign a_subconst_75_sumAHighB_uid1506_i_arrayidx32_conv20_mult_x_im0_q = a_subconst_75_sumAHighB_uid1506_i_arrayidx32_conv20_mult_x_im0_o[22:0];

    // i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3(BITSELECT,2029)@26
    assign i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b = $unsigned(a_subconst_75_sumAHighB_uid1506_i_arrayidx32_conv20_mult_x_im0_q[21:0]);

    // redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0(REG,2199)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_q <= $unsigned(22'b0000000000000000000000);
        end
        else if (SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_backEN == 1'b1)
        begin
            redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_q <= $unsigned(i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b);
        end
    end

    // i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2(BITSELECT,2028)@25
    assign i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b = $unsigned(addsumAHighB_uid1495_i_arrayidx32_conv20_mult_x_im0_q[1:0]);

    // redist20_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_2_0(REG,2200)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist20_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_2_0_q <= $unsigned(2'b00);
        end
        else if (SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN == 1'b1)
        begin
            redist20_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_2_0_q <= $unsigned(i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b);
        end
    end

    // redist20_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_2_1(REG,2201)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist20_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_2_1_q <= $unsigned(2'b00);
        end
        else if (SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_backEN == 1'b1)
        begin
            redist20_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_2_1_q <= $unsigned(redist20_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_2_0_q);
        end
    end

    // redist50_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_2_0(REG,2231)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist50_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_2_0_q <= $unsigned(64'b0000000000000000000000000000000000000000000000000000000000000000);
        end
        else if (SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN == 1'b1)
        begin
            redist50_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_2_0_q <= $unsigned(bubble_select_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_b);
        end
    end

    // redist50_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_2_1(REG,2232)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist50_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_2_1_q <= $unsigned(64'b0000000000000000000000000000000000000000000000000000000000000000);
        end
        else if (SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_backEN == 1'b1)
        begin
            redist50_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_2_1_q <= $unsigned(redist50_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_2_0_q);
        end
    end

    // i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1(BITSELECT,2027)@27
    assign i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b = $unsigned(redist50_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_2_1_q[0:0]);

    // i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b(BITJOIN,2031)@27
    assign i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b_q = {i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_4_merged_bit_select_b, redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_q, redist20_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_2_1_q, i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b, padACst_uid527_i_arrayidx24_conv20_dupName_0_mult_x_im0_q};

    // i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2(ADD,1894)@27 + 1
    assign i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_a = {1'b0, SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_D0};
    assign i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_b = {1'b0, SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_D1};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_o <= 53'b0;
        end
        else if (SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b1)
        begin
            i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_o <= $unsigned(i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_a) + $unsigned(i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_b);
        end
    end
    assign i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_c[0] = i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_o[52];
    assign i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_q = i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_o[51:0];

    // redist3_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0(REG,2187)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist3_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0_q <= $unsigned(22'b0000000000000000000000);
        end
        else if (SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b1)
        begin
            redist3_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0_q <= $unsigned(SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_D2);
        end
    end

    // i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c(BITJOIN,2040)@28
    assign i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c_q = {GND_q, redist3_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0_q};

    // i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_UpperBits_for_a(CONSTANT,1853)
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_UpperBits_for_a_q = $unsigned(11'b00000000000);

    // redist4_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_4_merged_bit_select_c_1_0(REG,2188)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist4_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_4_merged_bit_select_c_1_0_q <= $unsigned(12'b000000000000);
        end
        else if (SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b1)
        begin
            redist4_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_4_merged_bit_select_c_1_0_q <= $unsigned(SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_D3);
        end
    end

    // i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c(BITJOIN,2034)@28
    assign i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c_q = {i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_UpperBits_for_a_q, redist4_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_4_merged_bit_select_c_1_0_q};

    // i_arrayidx32_conv20_add_x_p1_of_2(ADD,1849)@28 + 1
    assign i_arrayidx32_conv20_add_x_p1_of_2_a = {1'b0, SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_D0};
    assign i_arrayidx32_conv20_add_x_p1_of_2_b = {1'b0, SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_D1};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx32_conv20_add_x_p1_of_2_o <= 53'b0;
        end
        else if (SE_i_arrayidx32_conv20_add_x_p1_of_2_backEN == 1'b1)
        begin
            i_arrayidx32_conv20_add_x_p1_of_2_o <= $unsigned(i_arrayidx32_conv20_add_x_p1_of_2_a) + $unsigned(i_arrayidx32_conv20_add_x_p1_of_2_b);
        end
    end
    assign i_arrayidx32_conv20_add_x_p1_of_2_c[0] = i_arrayidx32_conv20_add_x_p1_of_2_o[52];
    assign i_arrayidx32_conv20_add_x_p1_of_2_q = i_arrayidx32_conv20_add_x_p1_of_2_o[51:0];

    // i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2(ADD,1895)@28 + 1
    assign i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_cin = SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_D2;
    assign i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_a = { {1'b0, SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_D0}, 1'b1 };
    assign i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_b = { {1'b0, SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_D1}, i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_cin[0] };
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_o <= 25'b0;
        end
        else if (SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_backEN == 1'b1)
        begin
            i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_o <= $unsigned(i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_a) + $unsigned(i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_b);
        end
    end
    assign i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_q = i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_o[23:1];

    // i_arrayidx32_conv20_add_x_BitSelect_for_b_tessel1_0(BITSELECT,1968)@29
    assign i_arrayidx32_conv20_add_x_BitSelect_for_b_tessel1_0_b = $unsigned(i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_q[11:0]);

    // i_arrayidx32_conv20_add_x_BitSelect_for_b_BitJoin_for_c(BITJOIN,1970)@29
    assign i_arrayidx32_conv20_add_x_BitSelect_for_b_BitJoin_for_c_q = {GND_q, i_arrayidx32_conv20_add_x_BitSelect_for_b_tessel1_0_b};

    // SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_2(STALLENABLE,3098)
    // Valid signal propagation
    assign SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_2_V0 = SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_2_wireValid;
    // Backward Stall generation
    assign SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_2_backStall = i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_out_stall_out | ~ (SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_2_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_2_wireValid = bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_valid_out;

    // SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21(STALLENABLE,2543)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_fromReg0 <= '0;
            SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_fromReg0 <= SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_fromReg1 <= SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_consumed0 = (~ (SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_backStall) & SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_wireValid) | SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_fromReg0;
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_consumed1 = (~ (SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_backStall) & SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_wireValid) | SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_StallValid = SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_backStall & SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_wireValid;
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_toReg0 = SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_StallValid & SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_consumed0;
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_toReg1 = SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_StallValid & SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_or0 = SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_consumed0;
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_wireStall = ~ (SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_consumed1 & SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_or0);
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_backStall = SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_V0 = SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_wireValid & ~ (SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_fromReg0);
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_V1 = SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_wireValid & ~ (SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_wireValid = i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_out_valid_out;

    // i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21(BLACKBOX,141)@27
    // in in_stall_in@20000000
    // out out_dest_data_out_1_0@28
    // out out_stall_out@20000000
    // out out_valid_out@28
    conv2_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_0 thei_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21 (
        .in_intel_reserved_ffwd_1_0(in_intel_reserved_ffwd_1_0),
        .in_stall_in(SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_backStall),
        .in_valid_in(SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_2_V0),
        .out_dest_data_out_1_0(i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_out_dest_data_out_1_0),
        .out_stall_out(i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_out_stall_out),
        .out_valid_out(i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21(BITJOIN,2288)
    assign bubble_join_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_q = i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_out_dest_data_out_1_0;

    // bubble_select_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21(BITSELECT,2289)
    assign bubble_select_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_b = $unsigned(bubble_join_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_q[63:0]);

    // i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select(BITSELECT,2045)@28
    assign i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_b = $unsigned(bubble_select_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_b[51:0]);
    assign i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c = $unsigned(bubble_select_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_b[63:52]);

    // redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0(REG,2197)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_q <= $unsigned(12'b000000000000);
        end
        else if (SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_backEN == 1'b1)
        begin
            redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_q <= $unsigned(i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c);
        end
    end

    // i_arrayidx32_conv20_add_x_BitSelect_for_a_BitJoin_for_c(BITJOIN,1965)@29
    assign i_arrayidx32_conv20_add_x_BitSelect_for_a_BitJoin_for_c_q = {GND_q, redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_q};

    // SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0(STALLENABLE,2979)
    // Valid signal propagation
    assign SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_V0 = SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_R_v_0;
    // Stall signal propagation
    assign SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_s_tv_0 = SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_backStall & SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_R_v_0;
    // Backward Enable generation
    assign SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_backEN = ~ (SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_v_s_0 = SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_backEN & SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_V1;
    // Backward Stall generation
    assign SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_backStall = ~ (SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_v_s_0);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_backEN == 1'b0)
            begin
                SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_R_v_0 <= SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_R_v_0 & SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_s_tv_0;
            end
            else
            begin
                SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_R_v_0 <= SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_v_s_0;
            end

        end
    end

    // redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0(REG,2257)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_q <= $unsigned(1'b0);
        end
        else if (SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_backEN == 1'b1)
        begin
            redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_q <= $unsigned(SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_D0);
        end
    end

    // redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1(REG,2258)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_q <= $unsigned(1'b0);
        end
        else if (SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_backEN == 1'b1)
        begin
            redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_q <= $unsigned(SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_D0);
        end
    end

    // redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0(REG,2259)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_q <= $unsigned(1'b0);
        end
        else if (SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_backEN == 1'b1)
        begin
            redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_q <= $unsigned(SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_D0);
        end
    end

    // bubble_join_i_llvm_fpga_pop_i32_j_034_pop78_conv25(BITJOIN,2386)
    assign bubble_join_i_llvm_fpga_pop_i32_j_034_pop78_conv25_q = i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i32_j_034_pop78_conv25(BITSELECT,2387)
    assign bubble_select_i_llvm_fpga_pop_i32_j_034_pop78_conv25_b = $unsigned(bubble_join_i_llvm_fpga_pop_i32_j_034_pop78_conv25_q[31:0]);

    // redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0(REG,2238)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_q <= $unsigned(32'b00000000000000000000000000000000);
        end
        else if (SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_backEN == 1'b1)
        begin
            redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_q <= $unsigned(SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_D0);
        end
    end

    // redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo(STALLFIFO,2239)
    assign redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_valid_in = SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_V2;
    assign redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_stall_in = SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_backStall;
    assign redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_data_in = redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_q;
    assign redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_valid_in_bitsignaltemp = redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_valid_in[0];
    assign redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_stall_in_bitsignaltemp = redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_stall_in[0];
    assign redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_valid_out[0] = redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_valid_out_bitsignaltemp;
    assign redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_stall_out[0] = redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(70),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(32),
        .IMPL("ram")
    ) theredist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo (
        .valid_in(redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_valid_in_bitsignaltemp),
        .stall_in(redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_stall_in_bitsignaltemp),
        .data_in(redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_q),
        .valid_out(redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_valid_out_bitsignaltemp),
        .stall_out(redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_stall_out_bitsignaltemp),
        .data_out(redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_2(BITSELECT,1914)
    assign i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_2_b = $unsigned(c_i32_0104_recast_x_q[17:0]);

    // i_arrayidx24_conv20_c_i2_03_x(CONSTANT,36)
    assign i_arrayidx24_conv20_c_i2_03_x_q = $unsigned(2'b00);

    // i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_b_BitJoin_for_b(BITJOIN,1957)@31
    assign i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_b_BitJoin_for_b_q = {i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_2_b, redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_q, i_arrayidx24_conv20_c_i2_03_x_q};

    // bubble_join_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28(BITJOIN,2383)
    assign bubble_join_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_q = i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28(BITSELECT,2384)
    assign bubble_select_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_b = $unsigned(bubble_join_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_q[31:0]);

    // SE_out_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28(STALLENABLE,2597)
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_V0 = SE_out_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_wireValid;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_backStall = redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_stall_out | ~ (SE_out_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_wireValid = i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_valid_out;

    // redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo(STALLFIFO,2240)
    assign redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_valid_in = SE_out_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_V0;
    assign redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_stall_in = SE_out_redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_backStall;
    assign redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_data_in = bubble_select_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_b;
    assign redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_valid_in_bitsignaltemp = redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_valid_in[0];
    assign redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_stall_in_bitsignaltemp = redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_stall_in[0];
    assign redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_valid_out[0] = redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_valid_out_bitsignaltemp;
    assign redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_stall_out[0] = redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(27),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(32),
        .IMPL("ram")
    ) theredist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo (
        .valid_in(redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_valid_in_bitsignaltemp),
        .stall_in(redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_stall_in_bitsignaltemp),
        .data_in(bubble_select_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_b),
        .valid_out(redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_valid_out_bitsignaltemp),
        .stall_out(redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_stall_out_bitsignaltemp),
        .data_out(redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo(BITJOIN,2437)
    assign bubble_join_redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_q = redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_data_out;

    // bubble_select_redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo(BITSELECT,2438)
    assign bubble_select_redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_b = $unsigned(bubble_join_redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_q[31:0]);

    // redist58_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_27_0(REG,2241)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist58_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_27_0_q <= $unsigned(32'b00000000000000000000000000000000);
        end
        else if (SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_backEN == 1'b1)
        begin
            redist58_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_27_0_q <= $unsigned(bubble_select_redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_b);
        end
    end

    // redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo(STALLFIFO,2242)
    assign redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_valid_in = SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_V0;
    assign redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_stall_in = SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_backStall;
    assign redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_data_in = redist58_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_27_0_q;
    assign redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_valid_in_bitsignaltemp = redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_valid_in[0];
    assign redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_stall_in_bitsignaltemp = redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_stall_in[0];
    assign redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_valid_out[0] = redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_valid_out_bitsignaltemp;
    assign redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_stall_out[0] = redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(72),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(32),
        .IMPL("ram")
    ) theredist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo (
        .valid_in(redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_valid_in_bitsignaltemp),
        .stall_in(redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_stall_in_bitsignaltemp),
        .data_in(redist58_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_27_0_q),
        .valid_out(redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_valid_out_bitsignaltemp),
        .stall_out(redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_stall_out_bitsignaltemp),
        .data_out(redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo(STALLENABLE,3030)
    // Valid signal propagation
    assign SE_out_redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_V0 = SE_out_redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_wireValid;
    // Backward Stall generation
    assign SE_out_redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_backStall = SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_backStall | ~ (SE_out_redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_wireValid = redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_valid_out;

    // SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0(STALLENABLE,2794)
    // Valid signal propagation
    assign SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_V0 = SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_R_v_0;
    assign SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_V1 = SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_R_v_1;
    // Stall signal propagation
    assign SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_s_tv_0 = redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_stall_out & SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_R_v_0;
    assign SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_s_tv_1 = SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_backStall & SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_R_v_1;
    // Backward Enable generation
    assign SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_or0 = SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_s_tv_0;
    assign SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_backEN = ~ (SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_s_tv_1 | SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_or0);
    // Determine whether to write valid data into the first register stage
    assign SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_v_s_0 = SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_backEN & SE_out_redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_V0;
    // Backward Stall generation
    assign SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_backStall = ~ (SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_v_s_0);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_R_v_0 <= 1'b0;
            SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_R_v_1 <= 1'b0;
        end
        else
        begin
            if (SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_backEN == 1'b0)
            begin
                SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_R_v_0 <= SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_R_v_0 & SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_s_tv_0;
            end
            else
            begin
                SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_R_v_0 <= SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_v_s_0;
            end

            if (SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_backEN == 1'b0)
            begin
                SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_R_v_1 <= SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_R_v_1 & SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_s_tv_1;
            end
            else
            begin
                SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_R_v_1 <= SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_v_s_0;
            end

        end
    end

    // lowRangeB_uid1447_i_arrayidx32_conv20_dupName_1_mult_x_im9_merged_bit_select(BITSELECT,2061)@28
    assign lowRangeB_uid1447_i_arrayidx32_conv20_dupName_1_mult_x_im9_merged_bit_select_b = i_arrayidx32_conv20_dupName_1_mult_x_bs1_merged_bit_select_e[1:0];
    assign lowRangeB_uid1447_i_arrayidx32_conv20_dupName_1_mult_x_im9_merged_bit_select_c = i_arrayidx32_conv20_dupName_1_mult_x_bs1_merged_bit_select_e[9:2];

    // i_idxprom29_conv242_sel_x(BITSELECT,86)@28
    assign i_idxprom29_conv242_sel_x_b = {32'b00000000000000000000000000000000, bubble_select_redist57_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_26_fifo_b[31:0]};

    // i_idxprom29_conv242_vt_select_31(BITSELECT,129)@28
    assign i_idxprom29_conv242_vt_select_31_b = i_idxprom29_conv242_sel_x_b[31:0];

    // i_idxprom29_conv242_vt_join(BITJOIN,128)@28
    assign i_idxprom29_conv242_vt_join_q = {c_i32_0104_recast_x_q, i_idxprom29_conv242_vt_select_31_b};

    // i_arrayidx32_conv20_dupName_1_mult_x_bs1_merged_bit_select(BITSELECT,2042)@28
    assign i_arrayidx32_conv20_dupName_1_mult_x_bs1_merged_bit_select_b = i_idxprom29_conv242_vt_join_q[17:0];
    assign i_arrayidx32_conv20_dupName_1_mult_x_bs1_merged_bit_select_c = i_idxprom29_conv242_vt_join_q[35:18];
    assign i_arrayidx32_conv20_dupName_1_mult_x_bs1_merged_bit_select_d = i_idxprom29_conv242_vt_join_q[53:36];
    assign i_arrayidx32_conv20_dupName_1_mult_x_bs1_merged_bit_select_e = i_idxprom29_conv242_vt_join_q[63:54];

    // addsumAHighB_uid1449_i_arrayidx32_conv20_dupName_1_mult_x_im9(ADD,1448)@28 + 1
    assign addsumAHighB_uid1449_i_arrayidx32_conv20_dupName_1_mult_x_im9_a = {1'b0, i_arrayidx32_conv20_dupName_1_mult_x_bs1_merged_bit_select_e};
    assign addsumAHighB_uid1449_i_arrayidx32_conv20_dupName_1_mult_x_im9_b = {3'b000, lowRangeB_uid1447_i_arrayidx32_conv20_dupName_1_mult_x_im9_merged_bit_select_c};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            addsumAHighB_uid1449_i_arrayidx32_conv20_dupName_1_mult_x_im9_o <= 11'b0;
        end
        else if (SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_backEN == 1'b1)
        begin
            addsumAHighB_uid1449_i_arrayidx32_conv20_dupName_1_mult_x_im9_o <= $unsigned(addsumAHighB_uid1449_i_arrayidx32_conv20_dupName_1_mult_x_im9_a) + $unsigned(addsumAHighB_uid1449_i_arrayidx32_conv20_dupName_1_mult_x_im9_b);
        end
    end
    assign addsumAHighB_uid1449_i_arrayidx32_conv20_dupName_1_mult_x_im9_q = addsumAHighB_uid1449_i_arrayidx32_conv20_dupName_1_mult_x_im9_o[10:0];

    // redist0_lowRangeB_uid1447_i_arrayidx32_conv20_dupName_1_mult_x_im9_merged_bit_select_b_1_0(REG,2184)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist0_lowRangeB_uid1447_i_arrayidx32_conv20_dupName_1_mult_x_im9_merged_bit_select_b_1_0_q <= $unsigned(2'b00);
        end
        else if (SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_backEN == 1'b1)
        begin
            redist0_lowRangeB_uid1447_i_arrayidx32_conv20_dupName_1_mult_x_im9_merged_bit_select_b_1_0_q <= $unsigned(lowRangeB_uid1447_i_arrayidx32_conv20_dupName_1_mult_x_im9_merged_bit_select_b);
        end
    end

    // add_uid1450_i_arrayidx32_conv20_dupName_1_mult_x_im9(BITJOIN,1449)@29
    assign add_uid1450_i_arrayidx32_conv20_dupName_1_mult_x_im9_q = {addsumAHighB_uid1449_i_arrayidx32_conv20_dupName_1_mult_x_im9_q, redist0_lowRangeB_uid1447_i_arrayidx32_conv20_dupName_1_mult_x_im9_merged_bit_select_b_1_0_q};

    // sR_mergedSignalTM_uid1455_i_arrayidx32_conv20_dupName_1_mult_x_im9(BITJOIN,1454)@29
    assign sR_mergedSignalTM_uid1455_i_arrayidx32_conv20_dupName_1_mult_x_im9_q = {add_uid1450_i_arrayidx32_conv20_dupName_1_mult_x_im9_q, i_arrayidx24_conv20_c_i2_03_x_q};

    // i_arrayidx32_conv20_dupName_1_mult_x_sums_align_3(BITSHIFT,458)@29
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_align_3_qint = { sR_mergedSignalTM_uid1455_i_arrayidx32_conv20_dupName_1_mult_x_im9_q, 13'b0000000000000 };
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_align_3_q = i_arrayidx32_conv20_dupName_1_mult_x_sums_align_3_qint[27:0];

    // i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select(BITSELECT,2053)@29
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_b = $unsigned(i_arrayidx32_conv20_dupName_1_mult_x_sums_align_3_q[10:0]);
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c = $unsigned(i_arrayidx32_conv20_dupName_1_mult_x_sums_align_3_q[27:11]);

    // lowRangeB_uid1331_i_arrayidx32_conv20_dupName_1_mult_x_im3_merged_bit_select(BITSELECT,2059)@28
    assign lowRangeB_uid1331_i_arrayidx32_conv20_dupName_1_mult_x_im3_merged_bit_select_b = i_arrayidx32_conv20_dupName_1_mult_x_bs1_merged_bit_select_c[1:0];
    assign lowRangeB_uid1331_i_arrayidx32_conv20_dupName_1_mult_x_im3_merged_bit_select_c = i_arrayidx32_conv20_dupName_1_mult_x_bs1_merged_bit_select_c[17:2];

    // addsumAHighB_uid1333_i_arrayidx32_conv20_dupName_1_mult_x_im3(ADD,1332)@28 + 1
    assign addsumAHighB_uid1333_i_arrayidx32_conv20_dupName_1_mult_x_im3_a = {1'b0, i_arrayidx32_conv20_dupName_1_mult_x_bs1_merged_bit_select_c};
    assign addsumAHighB_uid1333_i_arrayidx32_conv20_dupName_1_mult_x_im3_b = {3'b000, lowRangeB_uid1331_i_arrayidx32_conv20_dupName_1_mult_x_im3_merged_bit_select_c};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            addsumAHighB_uid1333_i_arrayidx32_conv20_dupName_1_mult_x_im3_o <= 19'b0;
        end
        else if (SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_backEN == 1'b1)
        begin
            addsumAHighB_uid1333_i_arrayidx32_conv20_dupName_1_mult_x_im3_o <= $unsigned(addsumAHighB_uid1333_i_arrayidx32_conv20_dupName_1_mult_x_im3_a) + $unsigned(addsumAHighB_uid1333_i_arrayidx32_conv20_dupName_1_mult_x_im3_b);
        end
    end
    assign addsumAHighB_uid1333_i_arrayidx32_conv20_dupName_1_mult_x_im3_q = addsumAHighB_uid1333_i_arrayidx32_conv20_dupName_1_mult_x_im3_o[18:0];

    // redist2_lowRangeB_uid1331_i_arrayidx32_conv20_dupName_1_mult_x_im3_merged_bit_select_b_1_0(REG,2186)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist2_lowRangeB_uid1331_i_arrayidx32_conv20_dupName_1_mult_x_im3_merged_bit_select_b_1_0_q <= $unsigned(2'b00);
        end
        else if (SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_backEN == 1'b1)
        begin
            redist2_lowRangeB_uid1331_i_arrayidx32_conv20_dupName_1_mult_x_im3_merged_bit_select_b_1_0_q <= $unsigned(lowRangeB_uid1331_i_arrayidx32_conv20_dupName_1_mult_x_im3_merged_bit_select_b);
        end
    end

    // add_uid1334_i_arrayidx32_conv20_dupName_1_mult_x_im3(BITJOIN,1333)@29
    assign add_uid1334_i_arrayidx32_conv20_dupName_1_mult_x_im3_q = {addsumAHighB_uid1333_i_arrayidx32_conv20_dupName_1_mult_x_im3_q, redist2_lowRangeB_uid1331_i_arrayidx32_conv20_dupName_1_mult_x_im3_merged_bit_select_b_1_0_q};

    // sR_mergedSignalTM_uid1339_i_arrayidx32_conv20_dupName_1_mult_x_im3(BITJOIN,1338)@29
    assign sR_mergedSignalTM_uid1339_i_arrayidx32_conv20_dupName_1_mult_x_im3_q = {add_uid1334_i_arrayidx32_conv20_dupName_1_mult_x_im3_q, i_arrayidx24_conv20_c_i2_03_x_q};

    // i_arrayidx32_conv20_dupName_1_mult_x_sums_align_2(BITSHIFT,457)@29
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_align_2_qint = { sR_mergedSignalTM_uid1339_i_arrayidx32_conv20_dupName_1_mult_x_im3_q, 18'b000000000000000000 };
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_align_2_q = i_arrayidx32_conv20_dupName_1_mult_x_sums_align_2_qint[40:0];

    // i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b(BITJOIN,2022)@29
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b_q = {i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_b, i_arrayidx32_conv20_dupName_1_mult_x_sums_align_2_q};

    // lowRangeB_uid1389_i_arrayidx32_conv20_dupName_1_mult_x_im6_merged_bit_select(BITSELECT,2060)@28
    assign lowRangeB_uid1389_i_arrayidx32_conv20_dupName_1_mult_x_im6_merged_bit_select_b = i_arrayidx32_conv20_dupName_1_mult_x_bs1_merged_bit_select_d[1:0];
    assign lowRangeB_uid1389_i_arrayidx32_conv20_dupName_1_mult_x_im6_merged_bit_select_c = i_arrayidx32_conv20_dupName_1_mult_x_bs1_merged_bit_select_d[17:2];

    // addsumAHighB_uid1391_i_arrayidx32_conv20_dupName_1_mult_x_im6(ADD,1390)@28 + 1
    assign addsumAHighB_uid1391_i_arrayidx32_conv20_dupName_1_mult_x_im6_a = {1'b0, i_arrayidx32_conv20_dupName_1_mult_x_bs1_merged_bit_select_d};
    assign addsumAHighB_uid1391_i_arrayidx32_conv20_dupName_1_mult_x_im6_b = {3'b000, lowRangeB_uid1389_i_arrayidx32_conv20_dupName_1_mult_x_im6_merged_bit_select_c};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            addsumAHighB_uid1391_i_arrayidx32_conv20_dupName_1_mult_x_im6_o <= 19'b0;
        end
        else if (SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_backEN == 1'b1)
        begin
            addsumAHighB_uid1391_i_arrayidx32_conv20_dupName_1_mult_x_im6_o <= $unsigned(addsumAHighB_uid1391_i_arrayidx32_conv20_dupName_1_mult_x_im6_a) + $unsigned(addsumAHighB_uid1391_i_arrayidx32_conv20_dupName_1_mult_x_im6_b);
        end
    end
    assign addsumAHighB_uid1391_i_arrayidx32_conv20_dupName_1_mult_x_im6_q = addsumAHighB_uid1391_i_arrayidx32_conv20_dupName_1_mult_x_im6_o[18:0];

    // redist1_lowRangeB_uid1389_i_arrayidx32_conv20_dupName_1_mult_x_im6_merged_bit_select_b_1_0(REG,2185)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist1_lowRangeB_uid1389_i_arrayidx32_conv20_dupName_1_mult_x_im6_merged_bit_select_b_1_0_q <= $unsigned(2'b00);
        end
        else if (SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_backEN == 1'b1)
        begin
            redist1_lowRangeB_uid1389_i_arrayidx32_conv20_dupName_1_mult_x_im6_merged_bit_select_b_1_0_q <= $unsigned(lowRangeB_uid1389_i_arrayidx32_conv20_dupName_1_mult_x_im6_merged_bit_select_b);
        end
    end

    // add_uid1392_i_arrayidx32_conv20_dupName_1_mult_x_im6(BITJOIN,1391)@29
    assign add_uid1392_i_arrayidx32_conv20_dupName_1_mult_x_im6_q = {addsumAHighB_uid1391_i_arrayidx32_conv20_dupName_1_mult_x_im6_q, redist1_lowRangeB_uid1389_i_arrayidx32_conv20_dupName_1_mult_x_im6_merged_bit_select_b_1_0_q};

    // sR_mergedSignalTM_uid1397_i_arrayidx32_conv20_dupName_1_mult_x_im6(BITJOIN,1396)@29
    assign sR_mergedSignalTM_uid1397_i_arrayidx32_conv20_dupName_1_mult_x_im6_q = {add_uid1392_i_arrayidx32_conv20_dupName_1_mult_x_im6_q, i_arrayidx24_conv20_c_i2_03_x_q};

    // i_arrayidx32_conv20_dupName_1_mult_x_sums_align_0(BITSHIFT,455)@29
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_align_0_qint = { sR_mergedSignalTM_uid1397_i_arrayidx32_conv20_dupName_1_mult_x_im6_q, 13'b0000000000000 };
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_align_0_q = i_arrayidx32_conv20_dupName_1_mult_x_sums_align_0_qint[35:0];

    // i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select(BITSELECT,2052)@29
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_b = $unsigned(i_arrayidx32_conv20_dupName_1_mult_x_sums_align_0_q[28:0]);
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c = $unsigned(i_arrayidx32_conv20_dupName_1_mult_x_sums_align_0_q[35:29]);

    // highBBits_uid1274_i_arrayidx32_conv20_dupName_1_mult_x_im0(BITSELECT,1273)@28
    assign highBBits_uid1274_i_arrayidx32_conv20_dupName_1_mult_x_im0_b = i_arrayidx32_conv20_dupName_1_mult_x_bs1_merged_bit_select_b[17:2];

    // addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0(ADD,1274)@28 + 1
    assign addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_a = {1'b0, i_arrayidx32_conv20_dupName_1_mult_x_bs1_merged_bit_select_b};
    assign addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_b = {3'b000, highBBits_uid1274_i_arrayidx32_conv20_dupName_1_mult_x_im0_b};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_o <= 19'b0;
        end
        else if (SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_backEN == 1'b1)
        begin
            addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_o <= $unsigned(addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_a) + $unsigned(addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_b);
        end
    end
    assign addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_q = addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_o[18:0];

    // i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1(BITSELECT,2013)@29
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b = $unsigned(redist58_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_27_0_q[1:0]);

    // i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b(BITJOIN,2016)@29
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b_q = {i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_b, addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_q, i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b, i_arrayidx24_conv20_c_i2_03_x_q};

    // i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2(ADD,1885)@29 + 1
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_a = {1'b0, i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b_q};
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_b = {1'b0, i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b_q};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_o <= 53'b0;
        end
        else if (SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b1)
        begin
            i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_o <= $unsigned(i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_a) + $unsigned(i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_b);
        end
    end
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_c[0] = i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_o[52];
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_q = i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_o[51:0];

    // i_arrayidx32_conv20_dupName_0_add_x_p1_of_2(ADD,1822)@29 + 1
    assign i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_a = {1'b0, SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_D0};
    assign i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_b = {1'b0, SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_D1};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_o <= 53'b0;
        end
        else if (SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_backEN == 1'b1)
        begin
            i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_o <= $unsigned(i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_a) + $unsigned(i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_b);
        end
    end
    assign i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_c[0] = i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_o[52];
    assign i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_q = i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_o[51:0];

    // redist5_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0(REG,2189)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist5_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0_q <= $unsigned(17'b00000000000000000);
        end
        else if (SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b1)
        begin
            redist5_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0_q <= $unsigned(i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c);
        end
    end

    // i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c(BITJOIN,2025)@30
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c_q = {GND_q, redist5_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0_q};

    // redist6_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c_1_0(REG,2190)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist6_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c_1_0_q <= $unsigned(7'b0000000);
        end
        else if (SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b1)
        begin
            redist6_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c_1_0_q <= $unsigned(i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c);
        end
    end

    // i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c(BITJOIN,2019)@30
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c_q = {i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_UpperBits_for_a_q, redist6_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c_1_0_q};

    // i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2(ADD,1886)@30 + 1
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_cin = SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_D2;
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_a = { {1'b0, SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_D0}, 1'b1 };
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_b = { {1'b0, SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_D1}, i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_cin[0] };
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_o <= 20'b0;
        end
        else if (SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_backEN == 1'b1)
        begin
            i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_o <= $unsigned(i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_a) + $unsigned(i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_b);
        end
    end
    assign i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_q = i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_o[18:1];

    // i_arrayidx32_conv20_dupName_1_add_x_BitSelect_for_b_tessel1_0(BITSELECT,1946)@31
    assign i_arrayidx32_conv20_dupName_1_add_x_BitSelect_for_b_tessel1_0_b = $unsigned(i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_q[11:0]);

    // i_arrayidx32_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_c(BITJOIN,1948)@31
    assign i_arrayidx32_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_c_q = {GND_q, i_arrayidx32_conv20_dupName_1_add_x_BitSelect_for_b_tessel1_0_b};

    // redist7_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0(REG,2191)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist7_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0_q <= $unsigned(19'b0000000000000000000);
        end
        else if (SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b1)
        begin
            redist7_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0_q <= $unsigned(SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D4);
        end
    end

    // i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c(BITJOIN,2011)@29
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c_q = {GND_q, redist7_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0_q};

    // redist8_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c_1_0(REG,2192)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist8_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c_1_0_q <= $unsigned(9'b000000000);
        end
        else if (SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b1)
        begin
            redist8_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c_1_0_q <= $unsigned(SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D6);
        end
    end

    // i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c(BITJOIN,2005)@29
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c_q = {i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_UpperBits_for_a_q, redist8_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c_1_0_q};

    // i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2(ADD,1867)@28 + 1
    assign i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_a = {1'b0, SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D0};
    assign i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_b = {1'b0, SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D1};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_o <= 53'b0;
        end
        else if (SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b1)
        begin
            i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_o <= $unsigned(i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_a) + $unsigned(i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_b);
        end
    end
    assign i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_c[0] = i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_o[52];
    assign i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_q = i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_o[51:0];

    // redist9_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0(REG,2193)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist9_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0_q <= $unsigned(22'b0000000000000000000000);
        end
        else if (SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b1)
        begin
            redist9_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0_q <= $unsigned(SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D5);
        end
    end

    // i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c(BITJOIN,1997)@29
    assign i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c_q = {GND_q, redist9_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0_q};

    // redist10_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c_1_0(REG,2194)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist10_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c_1_0_q <= $unsigned(12'b000000000000);
        end
        else if (SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b1)
        begin
            redist10_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c_1_0_q <= $unsigned(SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D7);
        end
    end

    // i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c(BITJOIN,1991)@29
    assign i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c_q = {i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_UpperBits_for_a_q, redist10_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c_1_0_q};

    // SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2(STALLREG,3448)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data0 <= 23'bxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data1 <= 23'bxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data2 <= 1'bx;
            SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data3 <= 20'bxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data4 <= 20'bxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data5 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid <= SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_backStall & (SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid | SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_i_valid);

            if (SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data0 <= $unsigned(i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c_q);
                SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data1 <= $unsigned(i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c_q);
                SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data2 <= $unsigned(i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_c);
                SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data3 <= $unsigned(i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c_q);
                SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data4 <= $unsigned(i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c_q);
                SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data5 <= $unsigned(i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_c);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_i_valid = SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_V1;
    // Stall signal propagation
    assign SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_backStall = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid | ~ (SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_V = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid : SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_D0 = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data0 : i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c_q;
    // Data1
    assign SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_D1 = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data1 : i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c_q;
    // Data2
    assign SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_D2 = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data2 : i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_c;
    // Data3
    assign SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_D3 = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data3 : i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c_q;
    // Data4
    assign SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_D4 = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data4 : i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c_q;
    // Data5
    assign SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_D5 = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data5 : i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_c;

    // i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2(ADD,1877)@29 + 1
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_cin = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_D5;
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_a = { {1'b0, SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_D3}, 1'b1 };
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_b = { {1'b0, SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_D4}, i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_cin[0] };
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_o <= 22'b0;
        end
        else if (SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_backEN == 1'b1)
        begin
            i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_o <= $unsigned(i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_a) + $unsigned(i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_b);
        end
    end
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_q = i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_o[20:1];

    // i_arrayidx32_conv20_dupName_0_add_x_BitSelect_for_b_tessel1_0(BITSELECT,1936)@30
    assign i_arrayidx32_conv20_dupName_0_add_x_BitSelect_for_b_tessel1_0_b = $unsigned(i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_q[11:0]);

    // i_arrayidx32_conv20_dupName_0_add_x_BitSelect_for_b_BitJoin_for_c(BITJOIN,1938)@30
    assign i_arrayidx32_conv20_dupName_0_add_x_BitSelect_for_b_BitJoin_for_c_q = {GND_q, i_arrayidx32_conv20_dupName_0_add_x_BitSelect_for_b_tessel1_0_b};

    // i_arrayidx32_conv20_add_x_p2_of_2(ADD,1850)@29 + 1
    assign i_arrayidx32_conv20_add_x_p2_of_2_cin = SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_D2;
    assign i_arrayidx32_conv20_add_x_p2_of_2_a = { {1'b0, SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_D0}, 1'b1 };
    assign i_arrayidx32_conv20_add_x_p2_of_2_b = { {1'b0, SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_D1}, i_arrayidx32_conv20_add_x_p2_of_2_cin[0] };
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx32_conv20_add_x_p2_of_2_o <= 15'b0;
        end
        else if (SE_i_arrayidx32_conv20_add_x_p2_of_2_backEN == 1'b1)
        begin
            i_arrayidx32_conv20_add_x_p2_of_2_o <= $unsigned(i_arrayidx32_conv20_add_x_p2_of_2_a) + $unsigned(i_arrayidx32_conv20_add_x_p2_of_2_b);
        end
    end
    assign i_arrayidx32_conv20_add_x_p2_of_2_q = i_arrayidx32_conv20_add_x_p2_of_2_o[13:1];

    // i_arrayidx32_conv20_dupName_0_add_x_BitSelect_for_a_tessel1_0(BITSELECT,1931)@30
    assign i_arrayidx32_conv20_dupName_0_add_x_BitSelect_for_a_tessel1_0_b = $unsigned(i_arrayidx32_conv20_add_x_p2_of_2_q[11:0]);

    // i_arrayidx32_conv20_dupName_0_add_x_BitSelect_for_a_BitJoin_for_c(BITJOIN,1933)@30
    assign i_arrayidx32_conv20_dupName_0_add_x_BitSelect_for_a_BitJoin_for_c_q = {GND_q, i_arrayidx32_conv20_dupName_0_add_x_BitSelect_for_a_tessel1_0_b};

    // SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_1(STALLENABLE,3096)
    // Valid signal propagation
    assign SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_1_V0 = SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_1_wireValid;
    // Backward Stall generation
    assign SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_1_backStall = i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_out_stall_out | ~ (SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_1_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_1_wireValid = bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_valid_out;

    // i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20(BLACKBOX,140)@28
    // in in_stall_in@20000000
    // out out_dest_data_out_0_0@29
    // out out_stall_out@20000000
    // out out_valid_out@29
    conv2_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_0 thei_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20 (
        .in_intel_reserved_ffwd_0_0(in_intel_reserved_ffwd_0_0),
        .in_stall_in(SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_backStall),
        .in_valid_in(SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_1_V0),
        .out_dest_data_out_0_0(i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_out_dest_data_out_0_0),
        .out_stall_out(i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_out_stall_out),
        .out_valid_out(i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20(BITJOIN,2285)
    assign bubble_join_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_q = i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_out_dest_data_out_0_0;

    // bubble_select_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20(BITSELECT,2286)
    assign bubble_select_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_b = $unsigned(bubble_join_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_q[63:0]);

    // i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select(BITSELECT,2044)@29
    assign i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_b = $unsigned(bubble_select_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_b[51:0]);
    assign i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c = $unsigned(bubble_select_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_b[63:52]);

    // SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20(STALLENABLE,2541)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_fromReg0 <= '0;
            SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_fromReg0 <= SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_fromReg1 <= SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_consumed0 = (~ (SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_backStall) & SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_wireValid) | SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_fromReg0;
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_consumed1 = (~ (SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_backStall) & SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_wireValid) | SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_StallValid = SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_backStall & SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_wireValid;
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_toReg0 = SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_StallValid & SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_consumed0;
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_toReg1 = SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_StallValid & SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_or0 = SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_consumed0;
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_wireStall = ~ (SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_consumed1 & SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_or0);
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_backStall = SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_V0 = SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_wireValid & ~ (SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_fromReg0);
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_V1 = SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_wireValid & ~ (SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_wireValid = i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_out_valid_out;

    // SR_SE_i_arrayidx24_conv20_add_x_p1_of_2(STALLREG,3457)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_r_data0 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_r_data1 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_r_valid <= SE_i_arrayidx24_conv20_add_x_p1_of_2_backStall & (SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_r_valid | SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_i_valid);

            if (SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_r_data0 <= $unsigned(i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_b);
                SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_r_data1 <= $unsigned(i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_q);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_and0 = SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_V0;
    assign SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_i_valid = SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_V0 & SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_and0;
    // Stall signal propagation
    assign SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_backStall = SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_r_valid | ~ (SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_V = SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_r_valid : SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_D0 = SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_r_data0 : i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_b;
    // Data1
    assign SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_D1 = SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_r_data1 : i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_q;

    // i_arrayidx24_conv20_add_x_p1_of_2(ADD,1813)@29 + 1
    assign i_arrayidx24_conv20_add_x_p1_of_2_a = {1'b0, SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_D0};
    assign i_arrayidx24_conv20_add_x_p1_of_2_b = {1'b0, SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_D1};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx24_conv20_add_x_p1_of_2_o <= 53'b0;
        end
        else if (SE_i_arrayidx24_conv20_add_x_p1_of_2_backEN == 1'b1)
        begin
            i_arrayidx24_conv20_add_x_p1_of_2_o <= $unsigned(i_arrayidx24_conv20_add_x_p1_of_2_a) + $unsigned(i_arrayidx24_conv20_add_x_p1_of_2_b);
        end
    end
    assign i_arrayidx24_conv20_add_x_p1_of_2_c[0] = i_arrayidx24_conv20_add_x_p1_of_2_o[52];
    assign i_arrayidx24_conv20_add_x_p1_of_2_q = i_arrayidx24_conv20_add_x_p1_of_2_o[51:0];

    // i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2(ADD,1868)@29 + 1
    assign i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_cin = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_D2;
    assign i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_a = { {1'b0, SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_D0}, 1'b1 };
    assign i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_b = { {1'b0, SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_D1}, i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_cin[0] };
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_o <= 25'b0;
        end
        else if (SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_backEN == 1'b1)
        begin
            i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_o <= $unsigned(i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_a) + $unsigned(i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_b);
        end
    end
    assign i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_q = i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_o[23:1];

    // i_arrayidx24_conv20_add_x_BitSelect_for_b_tessel1_0(BITSELECT,1926)@30
    assign i_arrayidx24_conv20_add_x_BitSelect_for_b_tessel1_0_b = $unsigned(i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_q[11:0]);

    // i_arrayidx24_conv20_add_x_BitSelect_for_b_BitJoin_for_c(BITJOIN,1928)@30
    assign i_arrayidx24_conv20_add_x_BitSelect_for_b_BitJoin_for_c_q = {GND_q, i_arrayidx24_conv20_add_x_BitSelect_for_b_tessel1_0_b};

    // redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0(REG,2198)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_q <= $unsigned(12'b000000000000);
        end
        else if (SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_backEN == 1'b1)
        begin
            redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_q <= $unsigned(i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c);
        end
    end

    // i_arrayidx24_conv20_add_x_BitSelect_for_a_BitJoin_for_c(BITJOIN,1923)@30
    assign i_arrayidx24_conv20_add_x_BitSelect_for_a_BitJoin_for_c_q = {GND_q, redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_q};

    // SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0(STALLENABLE,2980)
    // Valid signal propagation
    assign SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_V0 = SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_R_v_0;
    // Stall signal propagation
    assign SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_s_tv_0 = SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_backStall & SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_R_v_0;
    // Backward Enable generation
    assign SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_backEN = ~ (SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_v_s_0 = SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_backEN & SE_out_i_llvm_fpga_ffwd_dest_p1024a14a14f32_in04032_conv20_V1;
    // Backward Stall generation
    assign SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_backStall = ~ (SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_v_s_0);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_backEN == 1'b0)
            begin
                SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_R_v_0 <= SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_R_v_0 & SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_s_tv_0;
            end
            else
            begin
                SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_R_v_0 <= SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_v_s_0;
            end

        end
    end

    // redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo(STALLFIFO,2244)
    assign redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_valid_in = SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_V0;
    assign redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_stall_in = SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_backStall;
    assign redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_data_in = bubble_select_i_llvm_fpga_pop_i32_add136_pop103_conv212_b;
    assign redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_valid_in_bitsignaltemp = redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_valid_in[0];
    assign redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_stall_in_bitsignaltemp = redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_stall_in[0];
    assign redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_valid_out[0] = redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_valid_out_bitsignaltemp;
    assign redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_stall_out[0] = redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(73),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(32),
        .IMPL("ram")
    ) theredist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo (
        .valid_in(redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_valid_in_bitsignaltemp),
        .stall_in(redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_stall_in_bitsignaltemp),
        .data_in(bubble_select_i_llvm_fpga_pop_i32_add136_pop103_conv212_b),
        .valid_out(redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_valid_out_bitsignaltemp),
        .stall_out(redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_stall_out_bitsignaltemp),
        .data_out(redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212(STALLENABLE,2591)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_fromReg0 <= SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_fromReg1 <= SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_consumed0 = (~ (redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_stall_out) & SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_wireValid) | SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_consumed1 = (~ (SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_backStall) & SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_wireValid) | SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_StallValid = SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_backStall & SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_wireValid;
    assign SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_toReg0 = SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_StallValid & SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_consumed0;
    assign SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_toReg1 = SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_StallValid & SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_or0 = SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_consumed0;
    assign SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_wireStall = ~ (SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_consumed1 & SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_or0);
    assign SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_backStall = SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_V0 = SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_wireValid & ~ (SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_V1 = SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_wireValid & ~ (SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_wireValid = i_llvm_fpga_pop_i32_add136_pop103_conv212_out_valid_out;

    // SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo(STALLENABLE,3037)
    // Valid signal propagation
    assign SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_V0 = SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_wireValid;
    // Backward Stall generation
    assign SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_backStall = i_llvm_fpga_push_i32_add136_push103_conv248_out_stall_out | ~ (SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_wireValid = SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_V;

    // SE_out_i_llvm_fpga_push_i32_add136_push103_conv248(STALLENABLE,2655)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i32_add136_push103_conv248_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i32_add136_push103_conv248_wireValid = i_llvm_fpga_push_i32_add136_push103_conv248_out_valid_out;

    // i_llvm_fpga_push_i32_add136_push103_conv248(BLACKBOX,197)@100
    // in in_stall_in@20000000
    // out out_data_out@101
    // out out_feedback_out_103@20000000
    // out out_feedback_valid_out_103@20000000
    // out out_stall_out@20000000
    // out out_valid_out@101
    conv2_i_llvm_fpga_push_i32_add136_push103_0 thei_llvm_fpga_push_i32_add136_push103_conv248 (
        .in_data_in(SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_D0),
        .in_feedback_stall_in_103(i_llvm_fpga_pop_i32_add136_pop103_conv212_out_feedback_stall_out_103),
        .in_keep_going(SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i32_add136_push103_conv248_backStall),
        .in_valid_in(SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_V0),
        .out_data_out(),
        .out_feedback_out_103(i_llvm_fpga_push_i32_add136_push103_conv248_out_feedback_out_103),
        .out_feedback_valid_out_103(i_llvm_fpga_push_i32_add136_push103_conv248_out_feedback_valid_out_103),
        .out_stall_out(i_llvm_fpga_push_i32_add136_push103_conv248_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i32_add136_push103_conv248_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo(BITJOIN,2494)
    assign bubble_join_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_q = redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_data_out;

    // bubble_select_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo(BITSELECT,2495)
    assign bubble_select_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_b = $unsigned(bubble_join_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_q[31:0]);

    // i_llvm_fpga_pop_i32_add136_pop103_conv212(BLACKBOX,165)@27
    // in in_stall_in@20000000
    // out out_data_out@28
    // out out_feedback_stall_out_103@20000000
    // out out_stall_out@20000000
    // out out_valid_out@28
    conv2_i_llvm_fpga_pop_i32_add136_pop103_0 thei_llvm_fpga_pop_i32_add136_pop103_conv212 (
        .in_data_in(bubble_select_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_b),
        .in_dir(redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_q),
        .in_feedback_in_103(i_llvm_fpga_push_i32_add136_push103_conv248_out_feedback_out_103),
        .in_feedback_valid_in_103(i_llvm_fpga_push_i32_add136_push103_conv248_out_feedback_valid_out_103),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_backStall),
        .in_valid_in(SE_out_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_V0),
        .out_data_out(i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out),
        .out_feedback_stall_out_103(i_llvm_fpga_pop_i32_add136_pop103_conv212_out_feedback_stall_out_103),
        .out_stall_out(i_llvm_fpga_pop_i32_add136_pop103_conv212_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i32_add136_pop103_conv212_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_i_llvm_fpga_pop_i32_add136_pop103_conv212(BITJOIN,2373)
    assign bubble_join_i_llvm_fpga_pop_i32_add136_pop103_conv212_q = i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i32_add136_pop103_conv212(BITSELECT,2374)
    assign bubble_select_i_llvm_fpga_pop_i32_add136_pop103_conv212_b = $unsigned(bubble_join_i_llvm_fpga_pop_i32_add136_pop103_conv212_q[31:0]);

    // i_idxprom20_conv249_sel_x(BITSELECT,84)@28
    assign i_idxprom20_conv249_sel_x_b = {32'b00000000000000000000000000000000, bubble_select_i_llvm_fpga_pop_i32_add136_pop103_conv212_b[31:0]};

    // i_idxprom20_conv249_vt_select_31(BITSELECT,121)@28
    assign i_idxprom20_conv249_vt_select_31_b = i_idxprom20_conv249_sel_x_b[31:0];

    // i_idxprom20_conv249_vt_join(BITJOIN,120)@28
    assign i_idxprom20_conv249_vt_join_q = {c_i32_0104_recast_x_q, i_idxprom20_conv249_vt_select_31_b};

    // i_arrayidx24_conv20_dupName_0_mult_x_bs1_merged_bit_select(BITSELECT,2041)@28
    assign i_arrayidx24_conv20_dupName_0_mult_x_bs1_merged_bit_select_b = i_idxprom20_conv249_vt_join_q[17:0];
    assign i_arrayidx24_conv20_dupName_0_mult_x_bs1_merged_bit_select_c = i_idxprom20_conv249_vt_join_q[35:18];
    assign i_arrayidx24_conv20_dupName_0_mult_x_bs1_merged_bit_select_d = i_idxprom20_conv249_vt_join_q[53:36];
    assign i_arrayidx24_conv20_dupName_0_mult_x_bs1_merged_bit_select_e = i_idxprom20_conv249_vt_join_q[63:54];

    // xIfSign_mergedSignalTM_uid649_i_arrayidx24_conv20_dupName_0_mult_x_im6(BITJOIN,648)@28
    assign xIfSign_mergedSignalTM_uid649_i_arrayidx24_conv20_dupName_0_mult_x_im6_q = {GND_q, i_arrayidx24_conv20_dupName_0_mult_x_bs1_merged_bit_select_d};

    // aPostPad_uid654_i_arrayidx24_conv20_dupName_0_mult_x_im6(BITJOIN,653)@28
    assign aPostPad_uid654_i_arrayidx24_conv20_dupName_0_mult_x_im6_q = {xIfSign_mergedSignalTM_uid649_i_arrayidx24_conv20_dupName_0_mult_x_im6_q, padACst_uid527_i_arrayidx24_conv20_dupName_0_mult_x_im0_q};

    // sub_uid655_i_arrayidx24_conv20_dupName_0_mult_x_im6(SUB,654)@28
    assign sub_uid655_i_arrayidx24_conv20_dupName_0_mult_x_im6_a = $unsigned({{1{aPostPad_uid654_i_arrayidx24_conv20_dupName_0_mult_x_im6_q[21]}}, aPostPad_uid654_i_arrayidx24_conv20_dupName_0_mult_x_im6_q});
    assign sub_uid655_i_arrayidx24_conv20_dupName_0_mult_x_im6_b = $unsigned({{4{xIfSign_mergedSignalTM_uid649_i_arrayidx24_conv20_dupName_0_mult_x_im6_q[18]}}, xIfSign_mergedSignalTM_uid649_i_arrayidx24_conv20_dupName_0_mult_x_im6_q});
    assign sub_uid655_i_arrayidx24_conv20_dupName_0_mult_x_im6_o = $unsigned($signed(sub_uid655_i_arrayidx24_conv20_dupName_0_mult_x_im6_a) - $signed(sub_uid655_i_arrayidx24_conv20_dupName_0_mult_x_im6_b));
    assign sub_uid655_i_arrayidx24_conv20_dupName_0_mult_x_im6_q = sub_uid655_i_arrayidx24_conv20_dupName_0_mult_x_im6_o[22:0];

    // sR_bottomRange_uid659_i_arrayidx24_conv20_dupName_0_mult_x_im6(BITSELECT,658)@28
    assign sR_bottomRange_uid659_i_arrayidx24_conv20_dupName_0_mult_x_im6_in = $unsigned(sub_uid655_i_arrayidx24_conv20_dupName_0_mult_x_im6_q[20:0]);
    assign sR_bottomRange_uid659_i_arrayidx24_conv20_dupName_0_mult_x_im6_b = $unsigned(sR_bottomRange_uid659_i_arrayidx24_conv20_dupName_0_mult_x_im6_in[20:0]);

    // redist45_sR_bottomRange_uid659_i_arrayidx24_conv20_dupName_0_mult_x_im6_b_1_0(REG,2226)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist45_sR_bottomRange_uid659_i_arrayidx24_conv20_dupName_0_mult_x_im6_b_1_0_q <= $unsigned(21'b000000000000000000000);
        end
        else if (SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_backEN == 1'b1)
        begin
            redist45_sR_bottomRange_uid659_i_arrayidx24_conv20_dupName_0_mult_x_im6_b_1_0_q <= $unsigned(sR_bottomRange_uid659_i_arrayidx24_conv20_dupName_0_mult_x_im6_b);
        end
    end

    // sR_mergedSignalTM_uid660_i_arrayidx24_conv20_dupName_0_mult_x_im6(BITJOIN,659)@29
    assign sR_mergedSignalTM_uid660_i_arrayidx24_conv20_dupName_0_mult_x_im6_q = {redist45_sR_bottomRange_uid659_i_arrayidx24_conv20_dupName_0_mult_x_im6_b_1_0_q, padACst_uid527_i_arrayidx24_conv20_dupName_0_mult_x_im0_q};

    // i_arrayidx24_conv20_dupName_0_mult_x_sums_align_0(BITSHIFT,401)@29
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_align_0_qint = { sR_mergedSignalTM_uid660_i_arrayidx24_conv20_dupName_0_mult_x_im6_q, 12'b000000000000 };
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_align_0_q = i_arrayidx24_conv20_dupName_0_mult_x_sums_align_0_qint[35:0];

    // i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_merged_bit_select(BITSELECT,2046)@29
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_merged_bit_select_b = $unsigned(i_arrayidx24_conv20_dupName_0_mult_x_sums_align_0_q[27:0]);
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_merged_bit_select_c = $unsigned(i_arrayidx24_conv20_dupName_0_mult_x_sums_align_0_q[35:28]);

    // xIfSign_mergedSignalTM_uid712_i_arrayidx24_conv20_dupName_0_mult_x_im9(BITJOIN,711)@28
    assign xIfSign_mergedSignalTM_uid712_i_arrayidx24_conv20_dupName_0_mult_x_im9_q = {GND_q, i_arrayidx24_conv20_dupName_0_mult_x_bs1_merged_bit_select_e};

    // aPostPad_uid717_i_arrayidx24_conv20_dupName_0_mult_x_im9(BITJOIN,716)@28
    assign aPostPad_uid717_i_arrayidx24_conv20_dupName_0_mult_x_im9_q = {xIfSign_mergedSignalTM_uid712_i_arrayidx24_conv20_dupName_0_mult_x_im9_q, padACst_uid527_i_arrayidx24_conv20_dupName_0_mult_x_im0_q};

    // sub_uid718_i_arrayidx24_conv20_dupName_0_mult_x_im9(SUB,717)@28
    assign sub_uid718_i_arrayidx24_conv20_dupName_0_mult_x_im9_a = $unsigned({{1{aPostPad_uid717_i_arrayidx24_conv20_dupName_0_mult_x_im9_q[13]}}, aPostPad_uid717_i_arrayidx24_conv20_dupName_0_mult_x_im9_q});
    assign sub_uid718_i_arrayidx24_conv20_dupName_0_mult_x_im9_b = $unsigned({{4{xIfSign_mergedSignalTM_uid712_i_arrayidx24_conv20_dupName_0_mult_x_im9_q[10]}}, xIfSign_mergedSignalTM_uid712_i_arrayidx24_conv20_dupName_0_mult_x_im9_q});
    assign sub_uid718_i_arrayidx24_conv20_dupName_0_mult_x_im9_o = $unsigned($signed(sub_uid718_i_arrayidx24_conv20_dupName_0_mult_x_im9_a) - $signed(sub_uid718_i_arrayidx24_conv20_dupName_0_mult_x_im9_b));
    assign sub_uid718_i_arrayidx24_conv20_dupName_0_mult_x_im9_q = sub_uid718_i_arrayidx24_conv20_dupName_0_mult_x_im9_o[14:0];

    // sR_bottomRange_uid722_i_arrayidx24_conv20_dupName_0_mult_x_im9(BITSELECT,721)@28
    assign sR_bottomRange_uid722_i_arrayidx24_conv20_dupName_0_mult_x_im9_in = $unsigned(sub_uid718_i_arrayidx24_conv20_dupName_0_mult_x_im9_q[12:0]);
    assign sR_bottomRange_uid722_i_arrayidx24_conv20_dupName_0_mult_x_im9_b = $unsigned(sR_bottomRange_uid722_i_arrayidx24_conv20_dupName_0_mult_x_im9_in[12:0]);

    // redist44_sR_bottomRange_uid722_i_arrayidx24_conv20_dupName_0_mult_x_im9_b_1_0(REG,2225)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist44_sR_bottomRange_uid722_i_arrayidx24_conv20_dupName_0_mult_x_im9_b_1_0_q <= $unsigned(13'b0000000000000);
        end
        else if (SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_backEN == 1'b1)
        begin
            redist44_sR_bottomRange_uid722_i_arrayidx24_conv20_dupName_0_mult_x_im9_b_1_0_q <= $unsigned(sR_bottomRange_uid722_i_arrayidx24_conv20_dupName_0_mult_x_im9_b);
        end
    end

    // sR_mergedSignalTM_uid723_i_arrayidx24_conv20_dupName_0_mult_x_im9(BITJOIN,722)@29
    assign sR_mergedSignalTM_uid723_i_arrayidx24_conv20_dupName_0_mult_x_im9_q = {redist44_sR_bottomRange_uid722_i_arrayidx24_conv20_dupName_0_mult_x_im9_b_1_0_q, padACst_uid527_i_arrayidx24_conv20_dupName_0_mult_x_im0_q};

    // i_arrayidx24_conv20_dupName_0_mult_x_sums_align_3(BITSHIFT,404)@29
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_align_3_qint = { sR_mergedSignalTM_uid723_i_arrayidx24_conv20_dupName_0_mult_x_im9_q, 12'b000000000000 };
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_align_3_q = i_arrayidx24_conv20_dupName_0_mult_x_sums_align_3_qint[27:0];

    // i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select(BITSELECT,2047)@29
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_b = $unsigned(i_arrayidx24_conv20_dupName_0_mult_x_sums_align_3_q[9:0]);
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c = $unsigned(i_arrayidx24_conv20_dupName_0_mult_x_sums_align_3_q[27:10]);

    // xIfSign_mergedSignalTM_uid586_i_arrayidx24_conv20_dupName_0_mult_x_im3(BITJOIN,585)@28
    assign xIfSign_mergedSignalTM_uid586_i_arrayidx24_conv20_dupName_0_mult_x_im3_q = {GND_q, i_arrayidx24_conv20_dupName_0_mult_x_bs1_merged_bit_select_c};

    // aPostPad_uid591_i_arrayidx24_conv20_dupName_0_mult_x_im3(BITJOIN,590)@28
    assign aPostPad_uid591_i_arrayidx24_conv20_dupName_0_mult_x_im3_q = {xIfSign_mergedSignalTM_uid586_i_arrayidx24_conv20_dupName_0_mult_x_im3_q, padACst_uid527_i_arrayidx24_conv20_dupName_0_mult_x_im0_q};

    // sub_uid592_i_arrayidx24_conv20_dupName_0_mult_x_im3(SUB,591)@28
    assign sub_uid592_i_arrayidx24_conv20_dupName_0_mult_x_im3_a = $unsigned({{1{aPostPad_uid591_i_arrayidx24_conv20_dupName_0_mult_x_im3_q[21]}}, aPostPad_uid591_i_arrayidx24_conv20_dupName_0_mult_x_im3_q});
    assign sub_uid592_i_arrayidx24_conv20_dupName_0_mult_x_im3_b = $unsigned({{4{xIfSign_mergedSignalTM_uid586_i_arrayidx24_conv20_dupName_0_mult_x_im3_q[18]}}, xIfSign_mergedSignalTM_uid586_i_arrayidx24_conv20_dupName_0_mult_x_im3_q});
    assign sub_uid592_i_arrayidx24_conv20_dupName_0_mult_x_im3_o = $unsigned($signed(sub_uid592_i_arrayidx24_conv20_dupName_0_mult_x_im3_a) - $signed(sub_uid592_i_arrayidx24_conv20_dupName_0_mult_x_im3_b));
    assign sub_uid592_i_arrayidx24_conv20_dupName_0_mult_x_im3_q = sub_uid592_i_arrayidx24_conv20_dupName_0_mult_x_im3_o[22:0];

    // sR_bottomRange_uid596_i_arrayidx24_conv20_dupName_0_mult_x_im3(BITSELECT,595)@28
    assign sR_bottomRange_uid596_i_arrayidx24_conv20_dupName_0_mult_x_im3_in = $unsigned(sub_uid592_i_arrayidx24_conv20_dupName_0_mult_x_im3_q[20:0]);
    assign sR_bottomRange_uid596_i_arrayidx24_conv20_dupName_0_mult_x_im3_b = $unsigned(sR_bottomRange_uid596_i_arrayidx24_conv20_dupName_0_mult_x_im3_in[20:0]);

    // redist46_sR_bottomRange_uid596_i_arrayidx24_conv20_dupName_0_mult_x_im3_b_1_0(REG,2227)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist46_sR_bottomRange_uid596_i_arrayidx24_conv20_dupName_0_mult_x_im3_b_1_0_q <= $unsigned(21'b000000000000000000000);
        end
        else if (SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_backEN == 1'b1)
        begin
            redist46_sR_bottomRange_uid596_i_arrayidx24_conv20_dupName_0_mult_x_im3_b_1_0_q <= $unsigned(sR_bottomRange_uid596_i_arrayidx24_conv20_dupName_0_mult_x_im3_b);
        end
    end

    // sR_mergedSignalTM_uid597_i_arrayidx24_conv20_dupName_0_mult_x_im3(BITJOIN,596)@29
    assign sR_mergedSignalTM_uid597_i_arrayidx24_conv20_dupName_0_mult_x_im3_q = {redist46_sR_bottomRange_uid596_i_arrayidx24_conv20_dupName_0_mult_x_im3_b_1_0_q, padACst_uid527_i_arrayidx24_conv20_dupName_0_mult_x_im0_q};

    // i_arrayidx24_conv20_dupName_0_mult_x_sums_align_2(BITSHIFT,403)@29
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_align_2_qint = { sR_mergedSignalTM_uid597_i_arrayidx24_conv20_dupName_0_mult_x_im3_q, 18'b000000000000000000 };
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_align_2_q = i_arrayidx24_conv20_dupName_0_mult_x_sums_align_2_qint[41:0];

    // i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b(BITJOIN,1980)@29
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b_q = {i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_b, i_arrayidx24_conv20_dupName_0_mult_x_sums_align_2_q};

    // xIfSign_mergedSignalTM_uid523_i_arrayidx24_conv20_dupName_0_mult_x_im0(BITJOIN,522)@28
    assign xIfSign_mergedSignalTM_uid523_i_arrayidx24_conv20_dupName_0_mult_x_im0_q = {GND_q, i_arrayidx24_conv20_dupName_0_mult_x_bs1_merged_bit_select_b};

    // aPostPad_uid528_i_arrayidx24_conv20_dupName_0_mult_x_im0(BITJOIN,527)@28
    assign aPostPad_uid528_i_arrayidx24_conv20_dupName_0_mult_x_im0_q = {xIfSign_mergedSignalTM_uid523_i_arrayidx24_conv20_dupName_0_mult_x_im0_q, padACst_uid527_i_arrayidx24_conv20_dupName_0_mult_x_im0_q};

    // sub_uid529_i_arrayidx24_conv20_dupName_0_mult_x_im0(SUB,528)@28
    assign sub_uid529_i_arrayidx24_conv20_dupName_0_mult_x_im0_a = $unsigned({{1{aPostPad_uid528_i_arrayidx24_conv20_dupName_0_mult_x_im0_q[21]}}, aPostPad_uid528_i_arrayidx24_conv20_dupName_0_mult_x_im0_q});
    assign sub_uid529_i_arrayidx24_conv20_dupName_0_mult_x_im0_b = $unsigned({{4{xIfSign_mergedSignalTM_uid523_i_arrayidx24_conv20_dupName_0_mult_x_im0_q[18]}}, xIfSign_mergedSignalTM_uid523_i_arrayidx24_conv20_dupName_0_mult_x_im0_q});
    assign sub_uid529_i_arrayidx24_conv20_dupName_0_mult_x_im0_o = $unsigned($signed(sub_uid529_i_arrayidx24_conv20_dupName_0_mult_x_im0_a) - $signed(sub_uid529_i_arrayidx24_conv20_dupName_0_mult_x_im0_b));
    assign sub_uid529_i_arrayidx24_conv20_dupName_0_mult_x_im0_q = sub_uid529_i_arrayidx24_conv20_dupName_0_mult_x_im0_o[22:0];

    // i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1(BITSELECT,1972)@28
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b = $unsigned(sub_uid529_i_arrayidx24_conv20_dupName_0_mult_x_im0_q[20:0]);

    // redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0(REG,2204)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_q <= $unsigned(21'b000000000000000000000);
        end
        else if (SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_backEN == 1'b1)
        begin
            redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_q <= $unsigned(i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b);
        end
    end

    // i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b(BITJOIN,1974)@29
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b_q = {i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_merged_bit_select_b, redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_q, padACst_uid527_i_arrayidx24_conv20_dupName_0_mult_x_im0_q};

    // SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0(STALLENABLE,2986)
    // Valid signal propagation
    assign SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_V0 = SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_R_v_0;
    // Stall signal propagation
    assign SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_s_tv_0 = SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_backStall & SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_R_v_0;
    // Backward Enable generation
    assign SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_backEN = ~ (SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_v_s_0 = SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_backEN & SE_out_i_llvm_fpga_pop_i32_add136_pop103_conv212_V1;
    // Backward Stall generation
    assign SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_backStall = ~ (SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_v_s_0);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_backEN == 1'b0)
            begin
                SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_R_v_0 <= SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_R_v_0 & SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_s_tv_0;
            end
            else
            begin
                SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_R_v_0 <= SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_v_s_0;
            end

        end
    end

    // SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2(STALLREG,3458)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_data0 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_data1 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_data2 <= 18'bxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_data3 <= 8'bxxxxxxxx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_valid <= SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_backStall & (SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_valid | SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_i_valid);

            if (SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_data0 <= $unsigned(i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b_q);
                SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_data1 <= $unsigned(i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b_q);
                SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_data2 <= $unsigned(i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c);
                SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_data3 <= $unsigned(i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_merged_bit_select_c);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_i_valid = SE_redist23_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b_1_0_V0;
    // Stall signal propagation
    assign SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_backStall = SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_valid | ~ (SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_V = SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_valid : SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_D0 = SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_data0 : i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b_q;
    // Data1
    assign SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_D1 = SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_data1 : i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b_q;
    // Data2
    assign SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_D2 = SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_data2 : i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c;
    // Data3
    assign SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_D3 = SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_r_data3 : i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_merged_bit_select_c;

    // i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2(ADD,1858)@29 + 1
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_a = {1'b0, SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_D0};
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_b = {1'b0, SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_D1};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_o <= 53'b0;
        end
        else if (SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b1)
        begin
            i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_o <= $unsigned(i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_a) + $unsigned(i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_b);
        end
    end
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_c[0] = i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_o[52];
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_q = i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_o[51:0];

    // redist11_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0(REG,2195)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist11_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0_q <= $unsigned(18'b000000000000000000);
        end
        else if (SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b1)
        begin
            redist11_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0_q <= $unsigned(SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_D2);
        end
    end

    // i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c(BITJOIN,1983)@30
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c_q = {GND_q, redist11_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c_1_0_q};

    // redist12_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_merged_bit_select_c_1_0(REG,2196)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist12_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_merged_bit_select_c_1_0_q <= $unsigned(8'b00000000);
        end
        else if (SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b1)
        begin
            redist12_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_merged_bit_select_c_1_0_q <= $unsigned(SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_D3);
        end
    end

    // i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c(BITJOIN,1977)@30
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c_q = {i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_UpperBits_for_a_q, redist12_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_merged_bit_select_c_1_0_q};

    // i_arrayidx24_conv20_dupName_0_add_x_p1_of_2(ADD,1795)@30 + 1
    assign i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_a = {1'b0, SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_D0};
    assign i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_b = {1'b0, SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_D1};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_o <= 53'b0;
        end
        else if (SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_backEN == 1'b1)
        begin
            i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_o <= $unsigned(i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_a) + $unsigned(i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_b);
        end
    end
    assign i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_c[0] = i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_o[52];
    assign i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_q = i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_o[51:0];

    // i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2(ADD,1859)@30 + 1
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_cin = SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_D2;
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_a = { {1'b0, SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_D0}, 1'b1 };
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_b = { {1'b0, SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_D1}, i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_cin[0] };
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_o <= 21'b0;
        end
        else if (SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_backEN == 1'b1)
        begin
            i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_o <= $unsigned(i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_a) + $unsigned(i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_b);
        end
    end
    assign i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_q = i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_o[19:1];

    // i_arrayidx24_conv20_dupName_0_add_x_BitSelect_for_b_tessel1_0(BITSELECT,1904)@31
    assign i_arrayidx24_conv20_dupName_0_add_x_BitSelect_for_b_tessel1_0_b = $unsigned(i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_q[11:0]);

    // i_arrayidx24_conv20_dupName_0_add_x_BitSelect_for_b_BitJoin_for_c(BITJOIN,1906)@31
    assign i_arrayidx24_conv20_dupName_0_add_x_BitSelect_for_b_BitJoin_for_c_q = {GND_q, i_arrayidx24_conv20_dupName_0_add_x_BitSelect_for_b_tessel1_0_b};

    // i_arrayidx24_conv20_add_x_p2_of_2(ADD,1814)@30 + 1
    assign i_arrayidx24_conv20_add_x_p2_of_2_cin = SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_D2;
    assign i_arrayidx24_conv20_add_x_p2_of_2_a = { {1'b0, SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_D0}, 1'b1 };
    assign i_arrayidx24_conv20_add_x_p2_of_2_b = { {1'b0, SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_D1}, i_arrayidx24_conv20_add_x_p2_of_2_cin[0] };
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx24_conv20_add_x_p2_of_2_o <= 15'b0;
        end
        else if (SE_i_arrayidx24_conv20_add_x_p2_of_2_backEN == 1'b1)
        begin
            i_arrayidx24_conv20_add_x_p2_of_2_o <= $unsigned(i_arrayidx24_conv20_add_x_p2_of_2_a) + $unsigned(i_arrayidx24_conv20_add_x_p2_of_2_b);
        end
    end
    assign i_arrayidx24_conv20_add_x_p2_of_2_q = i_arrayidx24_conv20_add_x_p2_of_2_o[13:1];

    // i_arrayidx24_conv20_dupName_0_add_x_BitSelect_for_a_tessel1_0(BITSELECT,1899)@31
    assign i_arrayidx24_conv20_dupName_0_add_x_BitSelect_for_a_tessel1_0_b = $unsigned(i_arrayidx24_conv20_add_x_p2_of_2_q[11:0]);

    // i_arrayidx24_conv20_dupName_0_add_x_BitSelect_for_a_BitJoin_for_c(BITJOIN,1901)@31
    assign i_arrayidx24_conv20_dupName_0_add_x_BitSelect_for_a_BitJoin_for_c_q = {GND_q, i_arrayidx24_conv20_dupName_0_add_x_BitSelect_for_a_tessel1_0_b};

    // SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0(STALLENABLE,2987)
    // Valid signal propagation
    assign SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_V0 = SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_R_v_0;
    // Stall signal propagation
    assign SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_s_tv_0 = SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_b_backStall & SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_R_v_0;
    // Backward Enable generation
    assign SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_backEN = ~ (SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_v_s_0 = SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_backEN & SE_i_add22_conv263_V0;
    // Backward Stall generation
    assign SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_backStall = ~ (SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_v_s_0);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_backEN == 1'b0)
            begin
                SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_R_v_0 <= SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_R_v_0 & SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_s_tv_0;
            end
            else
            begin
                SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_R_v_0 <= SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_v_s_0;
            end

        end
    end

    // SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo(STALLENABLE,3079)
    // Valid signal propagation
    assign SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_V0 = SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_wireValid;
    // Backward Stall generation
    assign SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_backStall = i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_stall_out | ~ (SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_wireValid = SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_V;

    // redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo(STALLFIFO,2243)
    assign redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_valid_in = SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_V1;
    assign redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_stall_in = SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_backStall;
    assign redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_data_in = bubble_select_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_b;
    assign redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_valid_in_bitsignaltemp = redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_valid_in[0];
    assign redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_stall_in_bitsignaltemp = redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_stall_in[0];
    assign redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_valid_out[0] = redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_valid_out_bitsignaltemp;
    assign redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_stall_out[0] = redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(71),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(32),
        .IMPL("ram")
    ) theredist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo (
        .valid_in(redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_valid_in_bitsignaltemp),
        .stall_in(redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_stall_in_bitsignaltemp),
        .data_in(bubble_select_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_b),
        .valid_out(redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_valid_out_bitsignaltemp),
        .stall_out(redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_stall_out_bitsignaltemp),
        .data_out(redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225(STALLENABLE,2595)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_fromReg0 <= SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_fromReg1 <= SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_consumed0 = (~ (SE_i_add22_conv263_backStall) & SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_wireValid) | SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_consumed1 = (~ (redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_stall_out) & SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_wireValid) | SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_StallValid = SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_backStall & SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_wireValid;
    assign SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_toReg0 = SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_StallValid & SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_consumed0;
    assign SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_toReg1 = SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_StallValid & SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_or0 = SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_consumed0;
    assign SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_wireStall = ~ (SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_consumed1 & SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_or0);
    assign SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_backStall = SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_V0 = SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_wireValid & ~ (SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_V1 = SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_wireValid & ~ (SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_wireValid = i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_valid_out;

    // SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo(STALLENABLE,3035)
    // Valid signal propagation
    assign SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_V0 = SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_wireValid;
    // Backward Stall generation
    assign SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_backStall = i_llvm_fpga_push_i32_col_037_pop27113_push92_conv262_out_stall_out | ~ (SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_wireValid = SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_V;

    // SE_out_i_llvm_fpga_push_i32_col_037_pop27113_push92_conv262(STALLENABLE,2659)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i32_col_037_pop27113_push92_conv262_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i32_col_037_pop27113_push92_conv262_wireValid = i_llvm_fpga_push_i32_col_037_pop27113_push92_conv262_out_valid_out;

    // i_llvm_fpga_push_i32_col_037_pop27113_push92_conv262(BLACKBOX,199)@100
    // in in_stall_in@20000000
    // out out_data_out@101
    // out out_feedback_out_92@20000000
    // out out_feedback_valid_out_92@20000000
    // out out_stall_out@20000000
    // out out_valid_out@101
    conv2_i_llvm_fpga_push_i32_col_037_pop27113_push92_0 thei_llvm_fpga_push_i32_col_037_pop27113_push92_conv262 (
        .in_data_in(SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_D0),
        .in_feedback_stall_in_92(i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_feedback_stall_out_92),
        .in_keep_going(SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i32_col_037_pop27113_push92_conv262_backStall),
        .in_valid_in(SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_V0),
        .out_data_out(),
        .out_feedback_out_92(i_llvm_fpga_push_i32_col_037_pop27113_push92_conv262_out_feedback_out_92),
        .out_feedback_valid_out_92(i_llvm_fpga_push_i32_col_037_pop27113_push92_conv262_out_feedback_valid_out_92),
        .out_stall_out(i_llvm_fpga_push_i32_col_037_pop27113_push92_conv262_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i32_col_037_pop27113_push92_conv262_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225(BLACKBOX,167)@29
    // in in_stall_in@20000000
    // out out_data_out@30
    // out out_feedback_stall_out_92@20000000
    // out out_stall_out@20000000
    // out out_valid_out@30
    conv2_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_0 thei_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225 (
        .in_data_in(SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_D0),
        .in_dir(SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_D1),
        .in_feedback_in_92(i_llvm_fpga_push_i32_col_037_pop27113_push92_conv262_out_feedback_out_92),
        .in_feedback_valid_in_92(i_llvm_fpga_push_i32_col_037_pop27113_push92_conv262_out_feedback_valid_out_92),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_backStall),
        .in_valid_in(SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_V0),
        .out_data_out(i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out),
        .out_feedback_stall_out_92(i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_feedback_stall_out_92),
        .out_stall_out(i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225(BITJOIN,2380)
    assign bubble_join_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_q = i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225(BITSELECT,2381)
    assign bubble_select_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_b = $unsigned(bubble_join_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_q[31:0]);

    // i_add22_conv263(ADD,109)@30
    assign i_add22_conv263_a = {1'b0, bubble_select_i_llvm_fpga_pop_i32_j_034_pop78_conv25_b};
    assign i_add22_conv263_b = {1'b0, bubble_select_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_b};
    assign i_add22_conv263_o = $unsigned(i_add22_conv263_a) + $unsigned(i_add22_conv263_b);
    assign i_add22_conv263_q = i_add22_conv263_o[32:0];

    // i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1(BITSELECT,1913)@30
    assign i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b = $unsigned(i_add22_conv263_q[31:0]);

    // redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0(REG,2205)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_q <= $unsigned(32'b00000000000000000000000000000000);
        end
        else if (SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_backEN == 1'b1)
        begin
            redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_q <= $unsigned(i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b);
        end
    end

    // i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_b(BITJOIN,1915)@31
    assign i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_b_q = {i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_2_b, redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_q, i_arrayidx24_conv20_c_i2_03_x_q};

    // SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_b(STALLENABLE,2884)
    // Valid signal propagation
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_b_V0 = SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_b_wireValid;
    // Backward Stall generation
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_b_backStall = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_backStall | ~ (SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_b_wireValid);
    // Computing multiple Valid(s)
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_b_and0 = SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_2_V0;
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_b_wireValid = SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_V0 & SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_b_and0;

    // SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2(STALLREG,3461)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_r_data0 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_r_data1 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_r_valid <= SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_backStall & (SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_r_valid | SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_i_valid);

            if (SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_r_data0 <= $unsigned(i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_q);
                SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_r_data1 <= $unsigned(i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_b_q);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_and0 = SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_V1;
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_i_valid = SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_b_V0 & SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_and0;
    // Stall signal propagation
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_backStall = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_r_valid | ~ (SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_V = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_r_valid : SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_D0 = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_r_data0 : i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_q;
    // Data1
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_D1 = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_r_data1 : i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_b_q;

    // i_arrayidx24_conv20_dupName_1_add_x_p1_of_2(ADD,1804)@31 + 1
    assign i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_a = {1'b0, SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_D0};
    assign i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_b = {1'b0, SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_D1};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_o <= 53'b0;
        end
        else if (SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_backEN == 1'b1)
        begin
            i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_o <= $unsigned(i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_a) + $unsigned(i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_b);
        end
    end
    assign i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_c[0] = i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_o[52];
    assign i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q = i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_o[51:0];

    // i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel1_0(BITSELECT,1916)
    assign i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel1_0_b = $unsigned(c_i32_0104_recast_x_q[29:18]);

    // i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_c(BITJOIN,1918)@32
    assign i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_c_q = {GND_q, i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel1_0_b};

    // i_arrayidx24_conv20_dupName_0_add_x_p2_of_2(ADD,1796)@31 + 1
    assign i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_cin = SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_D2;
    assign i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_a = { {1'b0, SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_D0}, 1'b1 };
    assign i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_b = { {1'b0, SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_D1}, i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_cin[0] };
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_o <= 15'b0;
        end
        else if (SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_backEN == 1'b1)
        begin
            i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_o <= $unsigned(i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_a) + $unsigned(i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_b);
        end
    end
    assign i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_q = i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_o[13:1];

    // i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_a_tessel1_0(BITSELECT,1909)@32
    assign i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_a_tessel1_0_b = $unsigned(i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_q[11:0]);

    // i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_a_BitJoin_for_c(BITJOIN,1911)@32
    assign i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_a_BitJoin_for_c_q = {GND_q, i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_a_tessel1_0_b};

    // i_arrayidx32_conv20_dupName_2_add_x_p1_of_2(ADD,1840)@31 + 1
    assign i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_a = {1'b0, SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_D0};
    assign i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_b = {1'b0, SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_D1};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_o <= 53'b0;
        end
        else if (SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_backEN == 1'b1)
        begin
            i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_o <= $unsigned(i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_a) + $unsigned(i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_b);
        end
    end
    assign i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_c[0] = i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_o[52];
    assign i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q = i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_o[51:0];

    // i_arrayidx32_conv20_dupName_1_add_x_p2_of_2(ADD,1832)@31 + 1
    assign i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_cin = SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_D2;
    assign i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_a = { {1'b0, SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_D0}, 1'b1 };
    assign i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_b = { {1'b0, SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_D1}, i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_cin[0] };
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_o <= 15'b0;
        end
        else if (SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_backEN == 1'b1)
        begin
            i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_o <= $unsigned(i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_a) + $unsigned(i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_b);
        end
    end
    assign i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_q = i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_o[13:1];

    // i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_a_tessel1_0(BITSELECT,1951)@32
    assign i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_a_tessel1_0_b = $unsigned(i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_q[11:0]);

    // i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_a_BitJoin_for_c(BITJOIN,1953)@32
    assign i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_a_BitJoin_for_c_q = {GND_q, i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_a_tessel1_0_b};

    // i_arrayidx32_conv20_dupName_2_add_x_p2_of_2(ADD,1841)@32 + 1
    assign i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_cin = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_D2;
    assign i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_a = { {1'b0, SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_D0}, 1'b1 };
    assign i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_b = { {1'b0, SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_D1}, i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_cin[0] };
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_o <= 15'b0;
        end
        else if (SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_backEN == 1'b1)
        begin
            i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_o <= $unsigned(i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_a) + $unsigned(i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_b);
        end
    end
    assign i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_q = i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_o[13:1];

    // SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0(STALLREG,3453)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_r_valid <= 1'b0;
            SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_r_data0 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
        end
        else
        begin
            // Valid
            SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_r_valid <= SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_backStall & (SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_r_valid | SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_i_valid);

            if (SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_r_data0 <= $unsigned(i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_i_valid = SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_V1;
    // Stall signal propagation
    assign SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_backStall = SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_r_valid | ~ (SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_i_valid);

    // Valid
    assign SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_V = SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_r_valid == 1'b1 ? SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_r_valid : SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_i_valid;

    assign SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_D0 = SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_r_valid == 1'b1 ? SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_r_data0 : i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q;

    // redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0(REG,2206)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_q <= $unsigned(52'b0000000000000000000000000000000000000000000000000000);
        end
        else if (SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_backEN == 1'b1)
        begin
            redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_q <= $unsigned(SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_D0);
        end
    end

    // i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q(BITJOIN,1842)@33
    assign i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_q = {i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_q, redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_q};

    // i_arrayidx32_conv20_dupName_6_trunc_sel_x(BITSELECT,52)@33
    assign i_arrayidx32_conv20_dupName_6_trunc_sel_x_b = i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_q[63:0];

    // SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0(STALLENABLE,2988)
    // Valid signal propagation
    assign SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_V0 = SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_R_v_0;
    // Stall signal propagation
    assign SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_s_tv_0 = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_backStall & SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_R_v_0;
    // Backward Enable generation
    assign SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_backEN = ~ (SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_v_s_0 = SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_backEN & SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_V;
    // Backward Stall generation
    assign SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_backStall = ~ (SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_backEN == 1'b0)
            begin
                SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_R_v_0 <= SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_R_v_0 & SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_s_tv_0;
            end
            else
            begin
                SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_R_v_0 <= SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_v_s_0;
            end

        end
    end

    // SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q(STALLENABLE,2863)
    // Valid signal propagation
    assign SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_V0 = SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_wireValid;
    // Backward Stall generation
    assign SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_backStall = i_llvm_fpga_mem_unnamed_conv29_conv295_out_o_stall | ~ (SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_wireValid);
    // Computing multiple Valid(s)
    assign SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_wireValid = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_V;

    // SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q(STALLREG,3456)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_valid <= 1'b0;
            SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_data0 <= 64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_data1 <= 1'bx;
            SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_data2 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_valid <= SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_backStall & (SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_valid | SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_i_valid);

            if (SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_data0 <= i_arrayidx32_conv20_dupName_6_trunc_sel_x_b;
                SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_data1 <= i_reduction_conv2_4_conv292_q;
                SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_data2 <= i_first_cleanup_xor_conv273_q;
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_and0 = SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_V0;
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_and1 = SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_V0 & SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_and0;
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_and2 = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_V3 & SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_and1;
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_i_valid = SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_V2 & SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_and2;
    // Stall signal propagation
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_backStall = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_valid | ~ (SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_i_valid);

    // Valid
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_V = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_valid : SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_i_valid;

    // Data0
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_D0 = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_data0 : i_arrayidx32_conv20_dupName_6_trunc_sel_x_b;
    // Data1
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_D1 = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_data1 : i_reduction_conv2_4_conv292_q;
    // Data2
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_D2 = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_r_data2 : i_first_cleanup_xor_conv273_q;

    // SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2(STALLENABLE,2862)
    // Valid signal propagation
    assign SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_V0 = SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_R_v_0;
    // Stall signal propagation
    assign SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_s_tv_0 = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_backStall & SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_R_v_0;
    // Backward Enable generation
    assign SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_backEN = ~ (SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_v_s_0 = SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_backEN & SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_backStall = ~ (SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_R_v_0 <= SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_R_v_0 & SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_R_v_0 <= SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_v_s_0;
            end

        end
    end

    // SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2(STALLREG,3452)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_data0 <= 13'bxxxxxxxxxxxxx;
            SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_data1 <= 13'bxxxxxxxxxxxxx;
            SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_data2 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_valid <= SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_backStall & (SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_valid | SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_i_valid);

            if (SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_data0 <= $unsigned(i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_a_BitJoin_for_c_q);
                SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_data1 <= $unsigned(i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_c_q);
                SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_data2 <= $unsigned(i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_c);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_and0 = SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_V0;
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_and1 = SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel1_0_V1 & SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_and0;
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_i_valid = SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_V0 & SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_and1;
    // Stall signal propagation
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_backStall = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_valid | ~ (SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_V = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_valid : SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_D0 = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_data0 : i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_a_BitJoin_for_c_q;
    // Data1
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_D1 = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_data1 : i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_c_q;
    // Data2
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_D2 = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_r_data2 : i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_c;

    // SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel1_0(STALLENABLE,2885)
    // Valid signal propagation
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel1_0_V0 = 1'b1;
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel1_0_V1 = 1'b1;

    // SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0(STALLENABLE,2989)
    // Valid signal propagation
    assign SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_V0 = SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_R_v_0;
    // Stall signal propagation
    assign SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_s_tv_0 = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_backStall & SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_R_v_0;
    // Backward Enable generation
    assign SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_backEN = ~ (SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_v_s_0 = SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_backEN & SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_V;
    // Backward Stall generation
    assign SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_backStall = ~ (SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_backEN == 1'b0)
            begin
                SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_R_v_0 <= SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_R_v_0 & SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_s_tv_0;
            end
            else
            begin
                SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_R_v_0 <= SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_v_s_0;
            end

        end
    end

    // SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0(STALLREG,3466)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_r_valid <= 1'b0;
            SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_r_data0 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
        end
        else
        begin
            // Valid
            SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_r_valid <= SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_backStall & (SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_r_valid | SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_i_valid);

            if (SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_r_data0 <= $unsigned(i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_i_valid = SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_V1;
    // Stall signal propagation
    assign SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_backStall = SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_r_valid | ~ (SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_i_valid);

    // Valid
    assign SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_V = SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_r_valid == 1'b1 ? SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_r_valid : SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_i_valid;

    assign SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_D0 = SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_r_valid == 1'b1 ? SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_r_data0 : i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q;

    // SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2(STALLENABLE,2852)
    // Valid signal propagation
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_V0 = SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_R_v_0;
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_V1 = SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_R_v_1;
    // Stall signal propagation
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_s_tv_0 = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_backStall & SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_R_v_0;
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_s_tv_1 = SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_backStall & SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_R_v_1;
    // Backward Enable generation
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_or0 = SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_s_tv_0;
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_backEN = ~ (SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_s_tv_1 | SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_or0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_v_s_0 = SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_backEN & SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_backStall = ~ (SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_R_v_0 <= 1'b0;
            SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_R_v_1 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_R_v_0 <= SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_R_v_0 & SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_R_v_0 <= SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_v_s_0;
            end

            if (SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_R_v_1 <= SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_R_v_1 & SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_s_tv_1;
            end
            else
            begin
                SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_R_v_1 <= SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_v_s_0;
            end

        end
    end

    // SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2(STALLENABLE,2853)
    // Valid signal propagation
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_V0 = SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_R_v_0;
    // Stall signal propagation
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_s_tv_0 = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_backStall & SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_R_v_0;
    // Backward Enable generation
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_backEN = ~ (SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_v_s_0 = SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_backEN & SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_backStall = ~ (SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_R_v_0 <= SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_R_v_0 & SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_R_v_0 <= SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_v_s_0;
            end

        end
    end

    // SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2(STALLREG,3465)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_data0 <= 13'bxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_data1 <= 13'bxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_data2 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_valid <= SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_backStall & (SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_valid | SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_i_valid);

            if (SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_data0 <= $unsigned(i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_a_BitJoin_for_c_q);
                SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_data1 <= $unsigned(i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_c_q);
                SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_data2 <= $unsigned(i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_c);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_and0 = SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_V0;
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_and1 = SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_V0 & SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_and0;
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_i_valid = SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel1_0_V0 & SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_and1;
    // Stall signal propagation
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_backStall = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_valid | ~ (SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_V = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_valid : SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_D0 = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_data0 : i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_a_BitJoin_for_c_q;
    // Data1
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_D1 = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_data1 : i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_c_q;
    // Data2
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_D2 = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_r_data2 : i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_c;

    // SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2(STALLENABLE,2851)
    // Valid signal propagation
    assign SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_V0 = SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_R_v_0;
    // Stall signal propagation
    assign SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_s_tv_0 = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_backStall & SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_R_v_0;
    // Backward Enable generation
    assign SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_backEN = ~ (SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_v_s_0 = SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_backEN & SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_backStall = ~ (SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_R_v_0 <= SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_R_v_0 & SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_R_v_0 <= SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_v_s_0;
            end

        end
    end

    // SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2(STALLREG,3464)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_data0 <= 13'bxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_data1 <= 13'bxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_data2 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_valid <= SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_backStall & (SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_valid | SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_i_valid);

            if (SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_data0 <= $unsigned(i_arrayidx24_conv20_dupName_0_add_x_BitSelect_for_a_BitJoin_for_c_q);
                SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_data1 <= $unsigned(i_arrayidx24_conv20_dupName_0_add_x_BitSelect_for_b_BitJoin_for_c_q);
                SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_data2 <= $unsigned(i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_c);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_and0 = SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_V0;
    assign SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_and1 = SE_i_arrayidx24_conv20_add_x_p2_of_2_V0 & SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_and0;
    assign SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_i_valid = SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_V0 & SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_and1;
    // Stall signal propagation
    assign SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_backStall = SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_valid | ~ (SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_V = SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_valid : SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_D0 = SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_data0 : i_arrayidx24_conv20_dupName_0_add_x_BitSelect_for_a_BitJoin_for_c_q;
    // Data1
    assign SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_D1 = SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_data1 : i_arrayidx24_conv20_dupName_0_add_x_BitSelect_for_b_BitJoin_for_c_q;
    // Data2
    assign SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_D2 = SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_r_data2 : i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_c;

    // SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2(STALLENABLE,2867)
    // Valid signal propagation
    assign SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_V0 = SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_R_v_0;
    // Stall signal propagation
    assign SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_s_tv_0 = SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_backStall & SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_R_v_0;
    // Backward Enable generation
    assign SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_backEN = ~ (SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_v_s_0 = SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_backEN & SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_backStall = ~ (SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_R_v_0 <= SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_R_v_0 & SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_R_v_0 <= SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_v_s_0;
            end

        end
    end

    // SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2(STALLREG,3463)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_data0 <= 19'bxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_data1 <= 19'bxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_data2 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_valid <= SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_backStall & (SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_valid | SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_i_valid);

            if (SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_data0 <= $unsigned(i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c_q);
                SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_data1 <= $unsigned(i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c_q);
                SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_data2 <= $unsigned(i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_c);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_i_valid = SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_V1;
    // Stall signal propagation
    assign SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_backStall = SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_valid | ~ (SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_V = SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_valid : SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_D0 = SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_data0 : i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c_q;
    // Data1
    assign SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_D1 = SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_data1 : i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c_q;
    // Data2
    assign SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_D2 = SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_r_data2 : i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_c;

    // SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2(STALLENABLE,2866)
    // Valid signal propagation
    assign SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_V0 = SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_R_v_0;
    assign SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_V1 = SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_R_v_1;
    // Stall signal propagation
    assign SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_s_tv_0 = SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_backStall & SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_R_v_0;
    assign SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_s_tv_1 = SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p2_of_2_backStall & SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_R_v_1;
    // Backward Enable generation
    assign SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_or0 = SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_s_tv_0;
    assign SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_backEN = ~ (SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_s_tv_1 | SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_or0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_v_s_0 = SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_backEN & SR_SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_backStall = ~ (SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_R_v_0 <= 1'b0;
            SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_R_v_1 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_R_v_0 <= SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_R_v_0 & SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_R_v_0 <= SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_v_s_0;
            end

            if (SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_R_v_1 <= SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_R_v_1 & SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_s_tv_1;
            end
            else
            begin
                SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_R_v_1 <= SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_v_s_0;
            end

        end
    end

    // SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2(STALLENABLE,2850)
    // Valid signal propagation
    assign SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_V0 = SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_R_v_0;
    assign SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_V1 = SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_R_v_1;
    // Stall signal propagation
    assign SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_s_tv_0 = SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_backStall & SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_R_v_0;
    assign SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_s_tv_1 = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_backStall & SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_R_v_1;
    // Backward Enable generation
    assign SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_or0 = SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_s_tv_0;
    assign SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_backEN = ~ (SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_s_tv_1 | SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_or0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_v_s_0 = SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_backEN & SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_backStall = ~ (SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_R_v_0 <= 1'b0;
            SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_R_v_1 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_R_v_0 <= SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_R_v_0 & SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_R_v_0 <= SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_v_s_0;
            end

            if (SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_R_v_1 <= SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_R_v_1 & SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_s_tv_1;
            end
            else
            begin
                SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_R_v_1 <= SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_v_s_0;
            end

        end
    end

    // SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2(STALLREG,3459)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_r_data0 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_r_data1 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_r_valid <= SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_backStall & (SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_r_valid | SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_i_valid);

            if (SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_r_data0 <= $unsigned(i_arrayidx24_conv20_add_x_p1_of_2_q);
                SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_r_data1 <= $unsigned(i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_q);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_and0 = SE_i_arrayidx24_conv20_add_x_p1_of_2_V0;
    assign SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_i_valid = SE_i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_V0 & SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_and0;
    // Stall signal propagation
    assign SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_backStall = SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_r_valid | ~ (SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_V = SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_r_valid : SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_D0 = SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_r_data0 : i_arrayidx24_conv20_add_x_p1_of_2_q;
    // Data1
    assign SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_D1 = SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_r_data1 : i_arrayidx24_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_q;

    // SE_i_arrayidx24_conv20_add_x_p1_of_2(STALLENABLE,2855)
    // Valid signal propagation
    assign SE_i_arrayidx24_conv20_add_x_p1_of_2_V0 = SE_i_arrayidx24_conv20_add_x_p1_of_2_R_v_0;
    assign SE_i_arrayidx24_conv20_add_x_p1_of_2_V1 = SE_i_arrayidx24_conv20_add_x_p1_of_2_R_v_1;
    // Stall signal propagation
    assign SE_i_arrayidx24_conv20_add_x_p1_of_2_s_tv_0 = SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p1_of_2_backStall & SE_i_arrayidx24_conv20_add_x_p1_of_2_R_v_0;
    assign SE_i_arrayidx24_conv20_add_x_p1_of_2_s_tv_1 = SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_backStall & SE_i_arrayidx24_conv20_add_x_p1_of_2_R_v_1;
    // Backward Enable generation
    assign SE_i_arrayidx24_conv20_add_x_p1_of_2_or0 = SE_i_arrayidx24_conv20_add_x_p1_of_2_s_tv_0;
    assign SE_i_arrayidx24_conv20_add_x_p1_of_2_backEN = ~ (SE_i_arrayidx24_conv20_add_x_p1_of_2_s_tv_1 | SE_i_arrayidx24_conv20_add_x_p1_of_2_or0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx24_conv20_add_x_p1_of_2_v_s_0 = SE_i_arrayidx24_conv20_add_x_p1_of_2_backEN & SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx24_conv20_add_x_p1_of_2_backStall = ~ (SE_i_arrayidx24_conv20_add_x_p1_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx24_conv20_add_x_p1_of_2_R_v_0 <= 1'b0;
            SE_i_arrayidx24_conv20_add_x_p1_of_2_R_v_1 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx24_conv20_add_x_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx24_conv20_add_x_p1_of_2_R_v_0 <= SE_i_arrayidx24_conv20_add_x_p1_of_2_R_v_0 & SE_i_arrayidx24_conv20_add_x_p1_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx24_conv20_add_x_p1_of_2_R_v_0 <= SE_i_arrayidx24_conv20_add_x_p1_of_2_v_s_0;
            end

            if (SE_i_arrayidx24_conv20_add_x_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx24_conv20_add_x_p1_of_2_R_v_1 <= SE_i_arrayidx24_conv20_add_x_p1_of_2_R_v_1 & SE_i_arrayidx24_conv20_add_x_p1_of_2_s_tv_1;
            end
            else
            begin
                SE_i_arrayidx24_conv20_add_x_p1_of_2_R_v_1 <= SE_i_arrayidx24_conv20_add_x_p1_of_2_v_s_0;
            end

        end
    end

    // SE_i_arrayidx24_conv20_add_x_p2_of_2(STALLENABLE,2856)
    // Valid signal propagation
    assign SE_i_arrayidx24_conv20_add_x_p2_of_2_V0 = SE_i_arrayidx24_conv20_add_x_p2_of_2_R_v_0;
    // Stall signal propagation
    assign SE_i_arrayidx24_conv20_add_x_p2_of_2_s_tv_0 = SR_SE_i_arrayidx24_conv20_dupName_0_add_x_p2_of_2_backStall & SE_i_arrayidx24_conv20_add_x_p2_of_2_R_v_0;
    // Backward Enable generation
    assign SE_i_arrayidx24_conv20_add_x_p2_of_2_backEN = ~ (SE_i_arrayidx24_conv20_add_x_p2_of_2_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx24_conv20_add_x_p2_of_2_v_s_0 = SE_i_arrayidx24_conv20_add_x_p2_of_2_backEN & SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx24_conv20_add_x_p2_of_2_backStall = ~ (SE_i_arrayidx24_conv20_add_x_p2_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx24_conv20_add_x_p2_of_2_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx24_conv20_add_x_p2_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx24_conv20_add_x_p2_of_2_R_v_0 <= SE_i_arrayidx24_conv20_add_x_p2_of_2_R_v_0 & SE_i_arrayidx24_conv20_add_x_p2_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx24_conv20_add_x_p2_of_2_R_v_0 <= SE_i_arrayidx24_conv20_add_x_p2_of_2_v_s_0;
            end

        end
    end

    // SR_SE_i_arrayidx24_conv20_add_x_p2_of_2(STALLREG,3462)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_data0 <= 13'bxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_data1 <= 13'bxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_data2 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_valid <= SE_i_arrayidx24_conv20_add_x_p2_of_2_backStall & (SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_valid | SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_i_valid);

            if (SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_data0 <= $unsigned(i_arrayidx24_conv20_add_x_BitSelect_for_a_BitJoin_for_c_q);
                SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_data1 <= $unsigned(i_arrayidx24_conv20_add_x_BitSelect_for_b_BitJoin_for_c_q);
                SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_data2 <= $unsigned(i_arrayidx24_conv20_add_x_p1_of_2_c);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_and0 = SE_i_arrayidx24_conv20_add_x_p1_of_2_V1;
    assign SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_and1 = SE_redist14_i_arrayidx24_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_V0 & SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_and0;
    assign SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_i_valid = SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_V0 & SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_and1;
    // Stall signal propagation
    assign SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_backStall = SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_valid | ~ (SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_V = SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_valid : SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_D0 = SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_data0 : i_arrayidx24_conv20_add_x_BitSelect_for_a_BitJoin_for_c_q;
    // Data1
    assign SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_D1 = SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_data1 : i_arrayidx24_conv20_add_x_BitSelect_for_b_BitJoin_for_c_q;
    // Data2
    assign SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_D2 = SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_r_data2 : i_arrayidx24_conv20_add_x_p1_of_2_c;

    // SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2(STALLENABLE,2869)
    // Valid signal propagation
    assign SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_V0 = SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_0;
    assign SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_V1 = SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_1;
    // Stall signal propagation
    assign SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_s_tv_0 = SR_SE_i_arrayidx24_conv20_add_x_p2_of_2_backStall & SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_0;
    assign SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_s_tv_1 = SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_backStall & SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_1;
    // Backward Enable generation
    assign SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_or0 = SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_s_tv_0;
    assign SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_backEN = ~ (SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_s_tv_1 | SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_or0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_v_s_0 = SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_backEN & SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_backStall = ~ (SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_0 <= 1'b0;
            SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_1 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_0 <= SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_0 & SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_0 <= SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_v_s_0;
            end

            if (SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_1 <= SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_1 & SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_s_tv_1;
            end
            else
            begin
                SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_1 <= SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_v_s_0;
            end

        end
    end

    // SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2(STALLREG,3449)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_data0 <= 13'bxxxxxxxxxxxxx;
            SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_data1 <= 13'bxxxxxxxxxxxxx;
            SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_data2 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_valid <= SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_backStall & (SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_valid | SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_i_valid);

            if (SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_data0 <= $unsigned(i_arrayidx32_conv20_dupName_0_add_x_BitSelect_for_a_BitJoin_for_c_q);
                SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_data1 <= $unsigned(i_arrayidx32_conv20_dupName_0_add_x_BitSelect_for_b_BitJoin_for_c_q);
                SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_data2 <= $unsigned(i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_c);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_and0 = SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_V0;
    assign SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_and1 = SE_i_arrayidx32_conv20_add_x_p2_of_2_V0 & SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_and0;
    assign SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_i_valid = SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_V1 & SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_and1;
    // Stall signal propagation
    assign SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_backStall = SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_valid | ~ (SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_V = SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_valid : SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_D0 = SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_data0 : i_arrayidx32_conv20_dupName_0_add_x_BitSelect_for_a_BitJoin_for_c_q;
    // Data1
    assign SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_D1 = SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_data1 : i_arrayidx32_conv20_dupName_0_add_x_BitSelect_for_b_BitJoin_for_c_q;
    // Data2
    assign SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_D2 = SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_r_data2 : i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_c;

    // i_arrayidx32_conv20_dupName_0_add_x_p2_of_2(ADD,1823)@30 + 1
    assign i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_cin = SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_D2;
    assign i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_a = { {1'b0, SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_D0}, 1'b1 };
    assign i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_b = { {1'b0, SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_D1}, i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_cin[0] };
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_o <= 15'b0;
        end
        else if (SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_backEN == 1'b1)
        begin
            i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_o <= $unsigned(i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_a) + $unsigned(i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_b);
        end
    end
    assign i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_q = i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_o[13:1];

    // i_arrayidx32_conv20_dupName_1_add_x_BitSelect_for_a_tessel1_0(BITSELECT,1941)@31
    assign i_arrayidx32_conv20_dupName_1_add_x_BitSelect_for_a_tessel1_0_b = $unsigned(i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_q[11:0]);

    // i_arrayidx32_conv20_dupName_1_add_x_BitSelect_for_a_BitJoin_for_c(BITJOIN,1943)@31
    assign i_arrayidx32_conv20_dupName_1_add_x_BitSelect_for_a_BitJoin_for_c_q = {GND_q, i_arrayidx32_conv20_dupName_1_add_x_BitSelect_for_a_tessel1_0_b};

    // SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2(STALLENABLE,2858)
    // Valid signal propagation
    assign SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_V0 = SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_R_v_0;
    // Stall signal propagation
    assign SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_s_tv_0 = SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_backStall & SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_R_v_0;
    // Backward Enable generation
    assign SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_backEN = ~ (SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_v_s_0 = SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_backEN & SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_backStall = ~ (SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_R_v_0 <= SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_R_v_0 & SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_R_v_0 <= SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_v_s_0;
            end

        end
    end

    // SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2(STALLENABLE,2860)
    // Valid signal propagation
    assign SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_V0 = SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_R_v_0;
    // Stall signal propagation
    assign SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_s_tv_0 = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_backStall & SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_R_v_0;
    // Backward Enable generation
    assign SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_backEN = ~ (SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_v_s_0 = SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_backEN & SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_backStall = ~ (SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_R_v_0 <= SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_R_v_0 & SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_R_v_0 <= SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_v_s_0;
            end

        end
    end

    // SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2(STALLREG,3451)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_data0 <= 13'bxxxxxxxxxxxxx;
            SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_data1 <= 13'bxxxxxxxxxxxxx;
            SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_data2 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_valid <= SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_backStall & (SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_valid | SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_i_valid);

            if (SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_data0 <= $unsigned(i_arrayidx32_conv20_dupName_1_add_x_BitSelect_for_a_BitJoin_for_c_q);
                SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_data1 <= $unsigned(i_arrayidx32_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_c_q);
                SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_data2 <= $unsigned(i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_c);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_and0 = SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_V0;
    assign SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_and1 = SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_V0 & SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_and0;
    assign SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_i_valid = SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_V0 & SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_and1;
    // Stall signal propagation
    assign SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_backStall = SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_valid | ~ (SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_V = SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_valid : SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_D0 = SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_data0 : i_arrayidx32_conv20_dupName_1_add_x_BitSelect_for_a_BitJoin_for_c_q;
    // Data1
    assign SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_D1 = SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_data1 : i_arrayidx32_conv20_dupName_1_add_x_BitSelect_for_b_BitJoin_for_c_q;
    // Data2
    assign SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_D2 = SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_r_data2 : i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_c;

    // SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2(STALLENABLE,2873)
    // Valid signal propagation
    assign SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_V0 = SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_R_v_0;
    // Stall signal propagation
    assign SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_s_tv_0 = SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_backStall & SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_R_v_0;
    // Backward Enable generation
    assign SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_backEN = ~ (SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_v_s_0 = SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_backEN & SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_backStall = ~ (SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_R_v_0 <= SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_R_v_0 & SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_R_v_0 <= SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_v_s_0;
            end

        end
    end

    // SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2(STALLREG,3450)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_data0 <= 18'bxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_data1 <= 18'bxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_data2 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_valid <= SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_backStall & (SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_valid | SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_i_valid);

            if (SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_data0 <= $unsigned(i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c_q);
                SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_data1 <= $unsigned(i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c_q);
                SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_data2 <= $unsigned(i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_c);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_i_valid = SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_V1;
    // Stall signal propagation
    assign SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_backStall = SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_valid | ~ (SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_V = SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_valid : SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_D0 = SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_data0 : i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c_q;
    // Data1
    assign SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_D1 = SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_data1 : i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c_q;
    // Data2
    assign SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_D2 = SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_r_data2 : i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_c;

    // SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2(STALLENABLE,2872)
    // Valid signal propagation
    assign SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_V0 = SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_R_v_0;
    assign SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_V1 = SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_R_v_1;
    // Stall signal propagation
    assign SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_s_tv_0 = SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_backStall & SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_R_v_0;
    assign SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_s_tv_1 = SR_SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p2_of_2_backStall & SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_R_v_1;
    // Backward Enable generation
    assign SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_or0 = SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_s_tv_0;
    assign SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_backEN = ~ (SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_s_tv_1 | SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_or0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_v_s_0 = SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_backEN & SE_addsumAHighB_uid1275_i_arrayidx32_conv20_dupName_1_mult_x_im0_V1;
    // Backward Stall generation
    assign SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_backStall = ~ (SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_v_s_0);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_R_v_0 <= 1'b0;
            SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_R_v_1 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_R_v_0 <= SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_R_v_0 & SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_R_v_0 <= SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_v_s_0;
            end

            if (SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_R_v_1 <= SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_R_v_1 & SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_s_tv_1;
            end
            else
            begin
                SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_R_v_1 <= SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_v_s_0;
            end

        end
    end

    // SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2(STALLREG,3443)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_r_data0 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_r_data1 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_r_valid <= SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_backStall & (SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_r_valid | SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_i_valid);

            if (SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_r_data0 <= $unsigned(i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_q);
                SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_r_data1 <= $unsigned(i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_q);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_and0 = SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_V1;
    assign SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_i_valid = SE_i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_V0 & SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_and0;
    // Stall signal propagation
    assign SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_backStall = SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_r_valid | ~ (SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_V = SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_r_valid : SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_D0 = SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_r_data0 : i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_q;
    // Data1
    assign SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_D1 = SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_r_data1 : i_arrayidx32_conv20_dupName_1_mult_x_sums_result_add_0_0_p1_of_2_q;

    // i_arrayidx32_conv20_dupName_1_add_x_p1_of_2(ADD,1831)@30 + 1
    assign i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_a = {1'b0, SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_D0};
    assign i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_b = {1'b0, SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_D1};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_o <= 53'b0;
        end
        else if (SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_backEN == 1'b1)
        begin
            i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_o <= $unsigned(i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_a) + $unsigned(i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_b);
        end
    end
    assign i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_c[0] = i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_o[52];
    assign i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_q = i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_o[51:0];

    // SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2(STALLENABLE,2859)
    // Valid signal propagation
    assign SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_V0 = SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_R_v_0;
    assign SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_V1 = SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_R_v_1;
    // Stall signal propagation
    assign SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_s_tv_0 = SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p2_of_2_backStall & SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_R_v_0;
    assign SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_s_tv_1 = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_backStall & SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_R_v_1;
    // Backward Enable generation
    assign SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_or0 = SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_s_tv_0;
    assign SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_backEN = ~ (SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_s_tv_1 | SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_or0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_v_s_0 = SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_backEN & SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_backStall = ~ (SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_R_v_0 <= 1'b0;
            SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_R_v_1 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_R_v_0 <= SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_R_v_0 & SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_R_v_0 <= SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_v_s_0;
            end

            if (SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_R_v_1 <= SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_R_v_1 & SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_s_tv_1;
            end
            else
            begin
                SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_R_v_1 <= SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_v_s_0;
            end

        end
    end

    // SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2(STALLENABLE,2861)
    // Valid signal propagation
    assign SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_V0 = SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_R_v_0;
    assign SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_V1 = SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_R_v_1;
    // Stall signal propagation
    assign SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_s_tv_0 = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p2_of_2_backStall & SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_R_v_0;
    assign SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_s_tv_1 = SR_SE_redist25_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_q_1_0_backStall & SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_R_v_1;
    // Backward Enable generation
    assign SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_or0 = SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_s_tv_0;
    assign SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_backEN = ~ (SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_s_tv_1 | SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_or0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_v_s_0 = SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_backEN & SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_backStall = ~ (SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_R_v_0 <= 1'b0;
            SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_R_v_1 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_R_v_0 <= SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_R_v_0 & SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_R_v_0 <= SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_v_s_0;
            end

            if (SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_R_v_1 <= SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_R_v_1 & SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_s_tv_1;
            end
            else
            begin
                SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_R_v_1 <= SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_v_s_0;
            end

        end
    end

    // SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2(STALLREG,3445)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_r_data0 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_r_data1 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_r_valid <= SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_backStall & (SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_r_valid | SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_i_valid);

            if (SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_r_data0 <= $unsigned(i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_q);
                SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_r_data1 <= $unsigned(i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_b_BitJoin_for_b_q);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_and0 = SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_V1;
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_i_valid = SE_i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_b_BitJoin_for_b_V0 & SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_and0;
    // Stall signal propagation
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_backStall = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_r_valid | ~ (SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_V = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_r_valid : SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_D0 = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_r_data0 : i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_q;
    // Data1
    assign SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_D1 = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_r_data1 : i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_b_BitJoin_for_b_q;

    // SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_2(STALLENABLE,2883)
    // Valid signal propagation
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_2_V0 = 1'b1;
    assign SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_2_V1 = 1'b1;

    // SE_i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_b_BitJoin_for_b(STALLENABLE,2900)
    // Valid signal propagation
    assign SE_i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_b_BitJoin_for_b_V0 = SE_i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_b_BitJoin_for_b_wireValid;
    // Backward Stall generation
    assign SE_i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_b_BitJoin_for_b_backStall = SR_SE_i_arrayidx32_conv20_dupName_2_add_x_p1_of_2_backStall | ~ (SE_i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_b_BitJoin_for_b_wireValid);
    // Computing multiple Valid(s)
    assign SE_i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_b_BitJoin_for_b_and0 = SE_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_2_V1;
    assign SE_i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_b_BitJoin_for_b_wireValid = SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_V1 & SE_i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_b_BitJoin_for_b_and0;

    // SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0(STALLENABLE,3066)
    // Valid signal propagation
    assign SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_V0 = SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_R_v_0;
    assign SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_V1 = SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_R_v_1;
    // Stall signal propagation
    assign SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_s_tv_0 = SR_SE_out_coalesced_delay_1_fifo_backStall & SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_R_v_0;
    assign SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_s_tv_1 = SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_backStall & SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_R_v_1;
    // Backward Enable generation
    assign SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_or0 = SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_s_tv_0;
    assign SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_backEN = ~ (SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_s_tv_1 | SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_or0);
    // Determine whether to write valid data into the first register stage
    assign SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_v_s_0 = SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_backEN & SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_V;
    // Backward Stall generation
    assign SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_backStall = ~ (SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_R_v_0 <= 1'b0;
            SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_R_v_1 <= 1'b0;
        end
        else
        begin
            if (SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_backEN == 1'b0)
            begin
                SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_R_v_0 <= SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_R_v_0 & SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_s_tv_0;
            end
            else
            begin
                SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_R_v_0 <= SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_v_s_0;
            end

            if (SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_backEN == 1'b0)
            begin
                SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_R_v_1 <= SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_R_v_1 & SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_s_tv_1;
            end
            else
            begin
                SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_R_v_1 <= SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_v_s_0;
            end

        end
    end

    // SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0(STALLREG,3434)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_r_valid <= 1'b0;
            SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_r_data0 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_r_valid <= SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_backStall & (SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_r_valid | SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_i_valid);

            if (SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_r_data0 <= $unsigned(redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_q);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_i_valid = SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_V1;
    // Stall signal propagation
    assign SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_backStall = SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_r_valid | ~ (SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_i_valid);

    // Valid
    assign SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_V = SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_r_valid == 1'b1 ? SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_r_valid : SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_i_valid;

    assign SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_D0 = SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_r_valid == 1'b1 ? SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_r_data0 : redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_q;

    // SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0(STALLENABLE,3065)
    // Valid signal propagation
    assign SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_V0 = SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_R_v_0;
    assign SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_V1 = SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_R_v_1;
    // Stall signal propagation
    assign SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_s_tv_0 = SE_out_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_backStall & SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_R_v_0;
    assign SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_s_tv_1 = SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_backStall & SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_R_v_1;
    // Backward Enable generation
    assign SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_or0 = SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_s_tv_0;
    assign SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_backEN = ~ (SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_s_tv_1 | SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_or0);
    // Determine whether to write valid data into the first register stage
    assign SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_v_s_0 = SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_backEN & SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_V;
    // Backward Stall generation
    assign SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_backStall = ~ (SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_R_v_0 <= 1'b0;
            SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_R_v_1 <= 1'b0;
        end
        else
        begin
            if (SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_backEN == 1'b0)
            begin
                SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_R_v_0 <= SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_R_v_0 & SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_s_tv_0;
            end
            else
            begin
                SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_R_v_0 <= SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_v_s_0;
            end

            if (SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_backEN == 1'b0)
            begin
                SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_R_v_1 <= SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_R_v_1 & SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_s_tv_1;
            end
            else
            begin
                SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_R_v_1 <= SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_v_s_0;
            end

        end
    end

    // SE_out_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo(STALLENABLE,3075)
    // Valid signal propagation
    assign SE_out_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_V0 = SE_out_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_wireValid;
    // Backward Stall generation
    assign SE_out_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_backStall = i_llvm_fpga_pop_i32_pop102_conv210_out_stall_out | ~ (SE_out_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_and0 = redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_valid_out;
    assign SE_out_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_wireValid = SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_V0 & SE_out_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_and0;

    // SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo(STALLENABLE,3021)
    // Valid signal propagation
    assign SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_V0 = SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_wireValid;
    // Backward Stall generation
    assign SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_backStall = i_llvm_fpga_push_i32_push102_conv245_out_stall_out | ~ (SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_wireValid = SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_V;

    // SE_out_i_llvm_fpga_push_i32_push102_conv245(STALLENABLE,2667)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i32_push102_conv245_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i32_push102_conv245_wireValid = i_llvm_fpga_push_i32_push102_conv245_out_valid_out;

    // i_llvm_fpga_push_i32_push102_conv245(BLACKBOX,203)@100
    // in in_stall_in@20000000
    // out out_data_out@101
    // out out_feedback_out_102@20000000
    // out out_feedback_valid_out_102@20000000
    // out out_stall_out@20000000
    // out out_valid_out@101
    conv2_i_llvm_fpga_push_i32_push102_0 thei_llvm_fpga_push_i32_push102_conv245 (
        .in_data_in(SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_D0),
        .in_feedback_stall_in_102(i_llvm_fpga_pop_i32_pop102_conv210_out_feedback_stall_out_102),
        .in_keep_going(SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i32_push102_conv245_backStall),
        .in_valid_in(SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_V0),
        .out_data_out(),
        .out_feedback_out_102(i_llvm_fpga_push_i32_push102_conv245_out_feedback_out_102),
        .out_feedback_valid_out_102(i_llvm_fpga_push_i32_push102_conv245_out_feedback_valid_out_102),
        .out_stall_out(i_llvm_fpga_push_i32_push102_conv245_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i32_push102_conv245_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0(REG,2261)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_q <= $unsigned(1'b0);
        end
        else if (SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_backEN == 1'b1)
        begin
            redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_q <= $unsigned(SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_D0);
        end
    end

    // bubble_join_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo(BITJOIN,2491)
    assign bubble_join_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_q = redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_data_out;

    // bubble_select_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo(BITSELECT,2492)
    assign bubble_select_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_b = $unsigned(bubble_join_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_q[31:0]);

    // i_llvm_fpga_pop_i32_pop102_conv210(BLACKBOX,171)@30
    // in in_stall_in@20000000
    // out out_data_out@31
    // out out_feedback_stall_out_102@20000000
    // out out_stall_out@20000000
    // out out_valid_out@31
    conv2_i_llvm_fpga_pop_i32_pop102_0 thei_llvm_fpga_pop_i32_pop102_conv210 (
        .in_data_in(bubble_select_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_b),
        .in_dir(redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_q),
        .in_feedback_in_102(i_llvm_fpga_push_i32_push102_conv245_out_feedback_out_102),
        .in_feedback_valid_in_102(i_llvm_fpga_push_i32_push102_conv245_out_feedback_valid_out_102),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i32_pop102_conv210_backStall),
        .in_valid_in(SE_out_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_V0),
        .out_data_out(i_llvm_fpga_pop_i32_pop102_conv210_out_data_out),
        .out_feedback_stall_out_102(i_llvm_fpga_pop_i32_pop102_conv210_out_feedback_stall_out_102),
        .out_stall_out(i_llvm_fpga_pop_i32_pop102_conv210_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i32_pop102_conv210_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_i_llvm_fpga_pop_i32_pop102_conv210(BITJOIN,2392)
    assign bubble_join_i_llvm_fpga_pop_i32_pop102_conv210_q = i_llvm_fpga_pop_i32_pop102_conv210_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i32_pop102_conv210(BITSELECT,2393)
    assign bubble_select_i_llvm_fpga_pop_i32_pop102_conv210_b = $unsigned(bubble_join_i_llvm_fpga_pop_i32_pop102_conv210_q[31:0]);

    // redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo(STALLFIFO,2234)
    assign redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_valid_in = SE_out_i_llvm_fpga_pop_i32_pop102_conv210_V1;
    assign redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_stall_in = SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_backStall;
    assign redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_data_in = bubble_select_i_llvm_fpga_pop_i32_pop102_conv210_b;
    assign redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_valid_in_bitsignaltemp = redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_valid_in[0];
    assign redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_stall_in_bitsignaltemp = redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_stall_in[0];
    assign redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_valid_out[0] = redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_valid_out_bitsignaltemp;
    assign redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_stall_out[0] = redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(70),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(32),
        .IMPL("ram")
    ) theredist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo (
        .valid_in(redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_valid_in_bitsignaltemp),
        .stall_in(redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_stall_in_bitsignaltemp),
        .data_in(bubble_select_i_llvm_fpga_pop_i32_pop102_conv210_b),
        .valid_out(redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_valid_out_bitsignaltemp),
        .stall_out(redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_stall_out_bitsignaltemp),
        .data_out(redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_pop_i32_pop102_conv210(STALLENABLE,2603)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i32_pop102_conv210_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i32_pop102_conv210_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i32_pop102_conv210_fromReg0 <= SE_out_i_llvm_fpga_pop_i32_pop102_conv210_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i32_pop102_conv210_fromReg1 <= SE_out_i_llvm_fpga_pop_i32_pop102_conv210_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i32_pop102_conv210_consumed0 = (~ (SR_SE_i_unnamed_conv246_backStall) & SE_out_i_llvm_fpga_pop_i32_pop102_conv210_wireValid) | SE_out_i_llvm_fpga_pop_i32_pop102_conv210_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i32_pop102_conv210_consumed1 = (~ (redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_stall_out) & SE_out_i_llvm_fpga_pop_i32_pop102_conv210_wireValid) | SE_out_i_llvm_fpga_pop_i32_pop102_conv210_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i32_pop102_conv210_StallValid = SE_out_i_llvm_fpga_pop_i32_pop102_conv210_backStall & SE_out_i_llvm_fpga_pop_i32_pop102_conv210_wireValid;
    assign SE_out_i_llvm_fpga_pop_i32_pop102_conv210_toReg0 = SE_out_i_llvm_fpga_pop_i32_pop102_conv210_StallValid & SE_out_i_llvm_fpga_pop_i32_pop102_conv210_consumed0;
    assign SE_out_i_llvm_fpga_pop_i32_pop102_conv210_toReg1 = SE_out_i_llvm_fpga_pop_i32_pop102_conv210_StallValid & SE_out_i_llvm_fpga_pop_i32_pop102_conv210_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i32_pop102_conv210_or0 = SE_out_i_llvm_fpga_pop_i32_pop102_conv210_consumed0;
    assign SE_out_i_llvm_fpga_pop_i32_pop102_conv210_wireStall = ~ (SE_out_i_llvm_fpga_pop_i32_pop102_conv210_consumed1 & SE_out_i_llvm_fpga_pop_i32_pop102_conv210_or0);
    assign SE_out_i_llvm_fpga_pop_i32_pop102_conv210_backStall = SE_out_i_llvm_fpga_pop_i32_pop102_conv210_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i32_pop102_conv210_V0 = SE_out_i_llvm_fpga_pop_i32_pop102_conv210_wireValid & ~ (SE_out_i_llvm_fpga_pop_i32_pop102_conv210_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i32_pop102_conv210_V1 = SE_out_i_llvm_fpga_pop_i32_pop102_conv210_wireValid & ~ (SE_out_i_llvm_fpga_pop_i32_pop102_conv210_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i32_pop102_conv210_wireValid = i_llvm_fpga_pop_i32_pop102_conv210_out_valid_out;

    // i_unnamed_conv246(LOGICAL,221)@31 + 1
    assign i_unnamed_conv246_qi = SR_SE_i_unnamed_conv246_D0 | SR_SE_i_unnamed_conv246_D1;
    dspba_delay_ver #( .width(32), .depth(1), .reset_kind("ASYNC"), .phase(0), .modulus(1), .reset_high(1'b0) )
    i_unnamed_conv246_delay ( .xin(i_unnamed_conv246_qi), .xout(i_unnamed_conv246_q), .ena(SE_i_unnamed_conv246_backEN[0]), .clk(clock), .aclr(resetn) );

    // SR_SE_i_unnamed_conv281(STALLREG,3469)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_unnamed_conv281_r_valid <= 1'b0;
            SR_SE_i_unnamed_conv281_r_data0 <= 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
        end
        else
        begin
            // Valid
            SR_SE_i_unnamed_conv281_r_valid <= SE_i_unnamed_conv281_backStall & (SR_SE_i_unnamed_conv281_r_valid | SR_SE_i_unnamed_conv281_i_valid);

            if (SR_SE_i_unnamed_conv281_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_unnamed_conv281_r_data0 <= i_unnamed_conv246_q;
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_unnamed_conv281_i_valid = SE_i_unnamed_conv246_V0;
    // Stall signal propagation
    assign SR_SE_i_unnamed_conv281_backStall = SR_SE_i_unnamed_conv281_r_valid | ~ (SR_SE_i_unnamed_conv281_i_valid);

    // Valid
    assign SR_SE_i_unnamed_conv281_V = SR_SE_i_unnamed_conv281_r_valid == 1'b1 ? SR_SE_i_unnamed_conv281_r_valid : SR_SE_i_unnamed_conv281_i_valid;

    assign SR_SE_i_unnamed_conv281_D0 = SR_SE_i_unnamed_conv281_r_valid == 1'b1 ? SR_SE_i_unnamed_conv281_r_data0 : i_unnamed_conv246_q;

    // SE_i_unnamed_conv246(STALLENABLE,2689)
    // Valid signal propagation
    assign SE_i_unnamed_conv246_V0 = SE_i_unnamed_conv246_R_v_0;
    // Stall signal propagation
    assign SE_i_unnamed_conv246_s_tv_0 = SR_SE_i_unnamed_conv281_backStall & SE_i_unnamed_conv246_R_v_0;
    // Backward Enable generation
    assign SE_i_unnamed_conv246_backEN = ~ (SE_i_unnamed_conv246_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_unnamed_conv246_v_s_0 = SE_i_unnamed_conv246_backEN & SR_SE_i_unnamed_conv246_V;
    // Backward Stall generation
    assign SE_i_unnamed_conv246_backStall = ~ (SE_i_unnamed_conv246_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_unnamed_conv246_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_i_unnamed_conv246_backEN == 1'b0)
            begin
                SE_i_unnamed_conv246_R_v_0 <= SE_i_unnamed_conv246_R_v_0 & SE_i_unnamed_conv246_s_tv_0;
            end
            else
            begin
                SE_i_unnamed_conv246_R_v_0 <= SE_i_unnamed_conv246_v_s_0;
            end

        end
    end

    // SR_SE_i_unnamed_conv246(STALLREG,3468)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_unnamed_conv246_r_valid <= 1'b0;
            SR_SE_i_unnamed_conv246_r_data0 <= 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_unnamed_conv246_r_data1 <= 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
        end
        else
        begin
            // Valid
            SR_SE_i_unnamed_conv246_r_valid <= SE_i_unnamed_conv246_backStall & (SR_SE_i_unnamed_conv246_r_valid | SR_SE_i_unnamed_conv246_i_valid);

            if (SR_SE_i_unnamed_conv246_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_unnamed_conv246_r_data0 <= $unsigned(bubble_select_i_llvm_fpga_pop_i32_pop102_conv210_b);
                SR_SE_i_unnamed_conv246_r_data1 <= $unsigned(redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_q);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_unnamed_conv246_and0 = SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_V0;
    assign SR_SE_i_unnamed_conv246_i_valid = SE_out_i_llvm_fpga_pop_i32_pop102_conv210_V0 & SR_SE_i_unnamed_conv246_and0;
    // Stall signal propagation
    assign SR_SE_i_unnamed_conv246_backStall = SR_SE_i_unnamed_conv246_r_valid | ~ (SR_SE_i_unnamed_conv246_i_valid);

    // Valid
    assign SR_SE_i_unnamed_conv246_V = SR_SE_i_unnamed_conv246_r_valid == 1'b1 ? SR_SE_i_unnamed_conv246_r_valid : SR_SE_i_unnamed_conv246_i_valid;

    // Data0
    assign SR_SE_i_unnamed_conv246_D0 = SR_SE_i_unnamed_conv246_r_valid == 1'b1 ? SR_SE_i_unnamed_conv246_r_data0 : bubble_select_i_llvm_fpga_pop_i32_pop102_conv210_b;
    // Data1
    assign SR_SE_i_unnamed_conv246_D1 = SR_SE_i_unnamed_conv246_r_valid == 1'b1 ? SR_SE_i_unnamed_conv246_r_data1 : redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_q;

    // SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0(STALLENABLE,3026)
    // Valid signal propagation
    assign SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_V0 = SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_0;
    assign SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_V1 = SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_1;
    assign SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_V2 = SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_2;
    // Stall signal propagation
    assign SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_s_tv_0 = SR_SE_i_unnamed_conv246_backStall & SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_0;
    assign SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_s_tv_1 = SE_i_arrayidx32_conv20_dupName_2_add_x_BitSelect_for_b_BitJoin_for_b_backStall & SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_1;
    assign SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_s_tv_2 = redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_stall_out & SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_2;
    // Backward Enable generation
    assign SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_or0 = SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_s_tv_0;
    assign SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_or1 = SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_s_tv_1 | SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_or0;
    assign SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_backEN = ~ (SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_s_tv_2 | SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_or1);
    // Determine whether to write valid data into the first register stage
    assign SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_v_s_0 = SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_backEN & SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_V;
    // Backward Stall generation
    assign SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_backStall = ~ (SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_0 <= 1'b0;
            SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_1 <= 1'b0;
            SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_2 <= 1'b0;
        end
        else
        begin
            if (SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_backEN == 1'b0)
            begin
                SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_0 <= SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_0 & SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_s_tv_0;
            end
            else
            begin
                SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_0 <= SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_v_s_0;
            end

            if (SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_backEN == 1'b0)
            begin
                SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_1 <= SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_1 & SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_s_tv_1;
            end
            else
            begin
                SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_1 <= SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_v_s_0;
            end

            if (SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_backEN == 1'b0)
            begin
                SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_2 <= SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_2 & SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_s_tv_2;
            end
            else
            begin
                SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_R_v_2 <= SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_v_s_0;
            end

        end
    end

    // SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0(STALLREG,3444)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_r_valid <= 1'b0;
            SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_r_data0 <= 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
        end
        else
        begin
            // Valid
            SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_r_valid <= SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_backStall & (SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_r_valid | SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_i_valid);

            if (SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_r_data0 <= $unsigned(bubble_select_i_llvm_fpga_pop_i32_j_034_pop78_conv25_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_i_valid = SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_V1;
    // Stall signal propagation
    assign SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_backStall = SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_r_valid | ~ (SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_i_valid);

    // Valid
    assign SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_V = SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_r_valid == 1'b1 ? SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_r_valid : SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_i_valid;

    assign SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_D0 = SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_r_valid == 1'b1 ? SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_r_data0 : bubble_select_i_llvm_fpga_pop_i32_j_034_pop78_conv25_b;

    // SE_i_add22_conv263(STALLENABLE,2527)
    // Valid signal propagation
    assign SE_i_add22_conv263_V0 = SE_i_add22_conv263_wireValid;
    // Backward Stall generation
    assign SE_i_add22_conv263_backStall = SE_redist24_i_arrayidx24_conv20_dupName_1_add_x_BitSelect_for_b_tessel0_1_b_1_0_backStall | ~ (SE_i_add22_conv263_wireValid);
    // Computing multiple Valid(s)
    assign SE_i_add22_conv263_and0 = SE_out_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_V0;
    assign SE_i_add22_conv263_wireValid = SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_V0 & SE_i_add22_conv263_and0;

    // SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25(STALLENABLE,2599)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_fromReg0 <= SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_fromReg1 <= SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_consumed0 = (~ (SE_i_add22_conv263_backStall) & SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_wireValid) | SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_consumed1 = (~ (SR_SE_redist55_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_1_0_backStall) & SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_wireValid) | SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_StallValid = SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_backStall & SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_wireValid;
    assign SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_toReg0 = SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_StallValid & SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_consumed0;
    assign SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_toReg1 = SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_StallValid & SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_or0 = SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_consumed0;
    assign SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_wireStall = ~ (SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_consumed1 & SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_or0);
    assign SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_backStall = SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_V0 = SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_wireValid & ~ (SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_V1 = SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_wireValid & ~ (SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_wireValid = i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_valid_out;

    // SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo(STALLENABLE,3028)
    // Valid signal propagation
    assign SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_V0 = SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_wireValid;
    // Backward Stall generation
    assign SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_backStall = i_llvm_fpga_push_i32_j_034_push78_conv276_out_stall_out | ~ (SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_wireValid = SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_V;

    // SE_out_i_llvm_fpga_push_i32_j_034_push78_conv276(STALLENABLE,2663)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i32_j_034_push78_conv276_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i32_j_034_push78_conv276_wireValid = i_llvm_fpga_push_i32_j_034_push78_conv276_out_valid_out;

    // i_llvm_fpga_push_i32_j_034_push78_conv276(BLACKBOX,201)@100
    // in in_stall_in@20000000
    // out out_data_out@101
    // out out_feedback_out_78@20000000
    // out out_feedback_valid_out_78@20000000
    // out out_stall_out@20000000
    // out out_valid_out@101
    conv2_i_llvm_fpga_push_i32_j_034_push78_0 thei_llvm_fpga_push_i32_j_034_push78_conv276 (
        .in_data_in(SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_D0),
        .in_feedback_stall_in_78(i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_feedback_stall_out_78),
        .in_keep_going(SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i32_j_034_push78_conv276_backStall),
        .in_valid_in(SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_V0),
        .out_data_out(),
        .out_feedback_out_78(i_llvm_fpga_push_i32_j_034_push78_conv276_out_feedback_out_78),
        .out_feedback_valid_out_78(i_llvm_fpga_push_i32_j_034_push78_conv276_out_feedback_valid_out_78),
        .out_stall_out(i_llvm_fpga_push_i32_j_034_push78_conv276_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i32_j_034_push78_conv276_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1(REG,2260)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_q <= $unsigned(1'b0);
        end
        else if (SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_backEN == 1'b1)
        begin
            redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_q <= $unsigned(SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_D0);
        end
    end

    // c_i32_0104_recast_x(CONSTANT,5)
    assign c_i32_0104_recast_x_q = $unsigned(32'b00000000000000000000000000000000);

    // i_llvm_fpga_pop_i32_j_034_pop78_conv25(BLACKBOX,169)@29
    // in in_stall_in@20000000
    // out out_data_out@30
    // out out_feedback_stall_out_78@20000000
    // out out_stall_out@20000000
    // out out_valid_out@30
    conv2_i_llvm_fpga_pop_i32_j_034_pop78_0 thei_llvm_fpga_pop_i32_j_034_pop78_conv25 (
        .in_data_in(c_i32_0104_recast_x_q),
        .in_dir(redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_q),
        .in_feedback_in_78(i_llvm_fpga_push_i32_j_034_push78_conv276_out_feedback_out_78),
        .in_feedback_valid_in_78(i_llvm_fpga_push_i32_j_034_push78_conv276_out_feedback_valid_out_78),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i32_j_034_pop78_conv25_backStall),
        .in_valid_in(SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_V2),
        .out_data_out(i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out),
        .out_feedback_stall_out_78(i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_feedback_stall_out_78),
        .out_stall_out(i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0(STALLREG,3433)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_r_valid <= 1'b0;
            SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_r_data0 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_r_valid <= SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_backStall & (SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_r_valid | SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_i_valid);

            if (SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_r_data0 <= $unsigned(redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_q);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_i_valid = SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_V1;
    // Stall signal propagation
    assign SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_backStall = SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_r_valid | ~ (SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_i_valid);

    // Valid
    assign SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_V = SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_r_valid == 1'b1 ? SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_r_valid : SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_i_valid;

    assign SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_D0 = SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_r_valid == 1'b1 ? SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_r_data0 : redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_q;

    // bubble_join_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo(BITJOIN,2497)
    assign bubble_join_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_q = redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_data_out;

    // bubble_select_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo(BITSELECT,2498)
    assign bubble_select_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_b = $unsigned(bubble_join_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_q[31:0]);

    // SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo(STALLREG,3460)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_r_valid <= 1'b0;
            SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_r_data0 <= 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_r_valid <= SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_backStall & (SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_r_valid | SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_i_valid);

            if (SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_r_data0 <= $unsigned(bubble_select_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_b);
                SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_r_data1 <= $unsigned(redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_q);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_and0 = redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_valid_out;
    assign SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_i_valid = SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_V0 & SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_and0;
    // Stall signal propagation
    assign SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_backStall = SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_r_valid | ~ (SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_i_valid);

    // Valid
    assign SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_V = SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_r_valid == 1'b1 ? SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_r_valid : SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_i_valid;

    // Data0
    assign SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_D0 = SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_r_valid == 1'b1 ? SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_r_data0 : bubble_select_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_b;
    // Data1
    assign SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_D1 = SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_r_valid == 1'b1 ? SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_r_data1 : redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_q;

    // SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1(STALLENABLE,3064)
    // Valid signal propagation
    assign SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_V0 = SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_0;
    assign SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_V1 = SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_1;
    assign SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_V2 = SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_2;
    // Stall signal propagation
    assign SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_s_tv_0 = SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_backStall & SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_0;
    assign SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_s_tv_1 = SR_SE_redist77_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_29_0_backStall & SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_1;
    assign SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_s_tv_2 = i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_stall_out & SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_2;
    // Backward Enable generation
    assign SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_or0 = SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_s_tv_0;
    assign SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_or1 = SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_s_tv_1 | SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_or0;
    assign SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_backEN = ~ (SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_s_tv_2 | SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_or1);
    // Determine whether to write valid data into the first register stage
    assign SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_v_s_0 = SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_backEN & SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_V;
    // Backward Stall generation
    assign SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_backStall = ~ (SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_0 <= 1'b0;
            SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_1 <= 1'b0;
            SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_2 <= 1'b0;
        end
        else
        begin
            if (SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_backEN == 1'b0)
            begin
                SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_0 <= SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_0 & SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_s_tv_0;
            end
            else
            begin
                SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_0 <= SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_v_s_0;
            end

            if (SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_backEN == 1'b0)
            begin
                SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_1 <= SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_1 & SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_s_tv_1;
            end
            else
            begin
                SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_1 <= SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_v_s_0;
            end

            if (SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_backEN == 1'b0)
            begin
                SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_2 <= SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_2 & SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_s_tv_2;
            end
            else
            begin
                SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_R_v_2 <= SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_v_s_0;
            end

        end
    end

    // SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1(STALLREG,3432)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_r_valid <= 1'b0;
            SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_r_data0 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_r_valid <= SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_backStall & (SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_r_valid | SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_i_valid);

            if (SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_r_data0 <= $unsigned(redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_q);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_i_valid = SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_V0;
    // Stall signal propagation
    assign SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_backStall = SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_r_valid | ~ (SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_i_valid);

    // Valid
    assign SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_V = SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_r_valid == 1'b1 ? SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_r_valid : SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_i_valid;

    assign SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_D0 = SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_r_valid == 1'b1 ? SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_r_data0 : redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_q;

    // SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0(STALLENABLE,3063)
    // Valid signal propagation
    assign SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_V0 = SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_R_v_0;
    // Stall signal propagation
    assign SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_s_tv_0 = SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_1_backStall & SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_R_v_0;
    // Backward Enable generation
    assign SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_backEN = ~ (SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_v_s_0 = SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_backEN & SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_V;
    // Backward Stall generation
    assign SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_backStall = ~ (SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_backEN == 1'b0)
            begin
                SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_R_v_0 <= SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_R_v_0 & SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_s_tv_0;
            end
            else
            begin
                SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_R_v_0 <= SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_v_s_0;
            end

        end
    end

    // SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0(STALLREG,3431)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_r_valid <= 1'b0;
            SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_r_data0 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_r_valid <= SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_backStall & (SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_r_valid | SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_i_valid);

            if (SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_r_data0 <= $unsigned(redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_q);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_i_valid = SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_V1;
    // Stall signal propagation
    assign SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_backStall = SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_r_valid | ~ (SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_i_valid);

    // Valid
    assign SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_V = SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_r_valid == 1'b1 ? SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_r_valid : SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_i_valid;

    assign SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_D0 = SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_r_valid == 1'b1 ? SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_r_data0 : redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_q;

    // SE_out_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo(STALLENABLE,3077)
    // Valid signal propagation
    assign SE_out_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_V0 = SE_out_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_wireValid;
    // Backward Stall generation
    assign SE_out_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_backStall = i_llvm_fpga_pop_i32_add136_pop103_conv212_out_stall_out | ~ (SE_out_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_and0 = redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_valid_out;
    assign SE_out_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_wireValid = SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_V0 & SE_out_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_and0;

    // SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1(STALLENABLE,3062)
    // Valid signal propagation
    assign SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_V0 = SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_R_v_0;
    assign SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_V1 = SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_R_v_1;
    // Stall signal propagation
    assign SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_s_tv_0 = SE_out_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_backStall & SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_R_v_0;
    assign SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_s_tv_1 = SR_SE_redist76_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_28_0_backStall & SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_R_v_1;
    // Backward Enable generation
    assign SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_or0 = SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_s_tv_0;
    assign SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_backEN = ~ (SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_s_tv_1 | SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_or0);
    // Determine whether to write valid data into the first register stage
    assign SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_v_s_0 = SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_backEN & SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_V;
    // Backward Stall generation
    assign SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_backStall = ~ (SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_R_v_0 <= 1'b0;
            SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_R_v_1 <= 1'b0;
        end
        else
        begin
            if (SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_backEN == 1'b0)
            begin
                SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_R_v_0 <= SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_R_v_0 & SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_s_tv_0;
            end
            else
            begin
                SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_R_v_0 <= SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_v_s_0;
            end

            if (SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_backEN == 1'b0)
            begin
                SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_R_v_1 <= SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_R_v_1 & SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_s_tv_1;
            end
            else
            begin
                SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_R_v_1 <= SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_v_s_0;
            end

        end
    end

    // SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1(STALLREG,3430)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_r_valid <= 1'b0;
            SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_r_data0 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_r_valid <= SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_backStall & (SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_r_valid | SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_i_valid);

            if (SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_r_data0 <= $unsigned(redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_q);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_i_valid = SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_V0;
    // Stall signal propagation
    assign SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_backStall = SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_r_valid | ~ (SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_i_valid);

    // Valid
    assign SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_V = SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_r_valid == 1'b1 ? SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_r_valid : SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_i_valid;

    assign SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_D0 = SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_r_valid == 1'b1 ? SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_r_data0 : redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_q;

    // SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0(STALLENABLE,3061)
    // Valid signal propagation
    assign SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_V0 = SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_R_v_0;
    // Stall signal propagation
    assign SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_s_tv_0 = SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_1_backStall & SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_R_v_0;
    // Backward Enable generation
    assign SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_backEN = ~ (SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_v_s_0 = SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_backEN & SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_V;
    // Backward Stall generation
    assign SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_backStall = ~ (SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_backEN == 1'b0)
            begin
                SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_R_v_0 <= SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_R_v_0 & SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_s_tv_0;
            end
            else
            begin
                SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_R_v_0 <= SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_v_s_0;
            end

        end
    end

    // SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0(STALLREG,3429)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_r_valid <= 1'b0;
            SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_r_data0 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_r_valid <= SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_backStall & (SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_r_valid | SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_i_valid);

            if (SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_r_data0 <= $unsigned(redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_q);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_i_valid = SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_V1;
    // Stall signal propagation
    assign SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_backStall = SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_r_valid | ~ (SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_i_valid);

    // Valid
    assign SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_V = SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_r_valid == 1'b1 ? SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_r_valid : SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_i_valid;

    assign SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_D0 = SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_r_valid == 1'b1 ? SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_r_data0 : redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_q;

    // SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0(STALLENABLE,3060)
    // Valid signal propagation
    assign SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_V0 = SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_R_v_0;
    assign SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_V1 = SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_R_v_1;
    // Stall signal propagation
    assign SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_s_tv_0 = SE_out_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_backStall & SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_R_v_0;
    assign SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_s_tv_1 = SR_SE_redist75_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_26_0_backStall & SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_R_v_1;
    // Backward Enable generation
    assign SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_or0 = SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_s_tv_0;
    assign SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_backEN = ~ (SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_s_tv_1 | SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_or0);
    // Determine whether to write valid data into the first register stage
    assign SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_v_s_0 = SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_backEN & SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_V;
    // Backward Stall generation
    assign SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_backStall = ~ (SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_R_v_0 <= 1'b0;
            SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_R_v_1 <= 1'b0;
        end
        else
        begin
            if (SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_backEN == 1'b0)
            begin
                SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_R_v_0 <= SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_R_v_0 & SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_s_tv_0;
            end
            else
            begin
                SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_R_v_0 <= SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_v_s_0;
            end

            if (SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_backEN == 1'b0)
            begin
                SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_R_v_1 <= SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_R_v_1 & SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_s_tv_1;
            end
            else
            begin
                SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_R_v_1 <= SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_v_s_0;
            end

        end
    end

    // SE_out_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo(STALLENABLE,3073)
    // Valid signal propagation
    assign SE_out_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_V0 = SE_out_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_wireValid;
    // Backward Stall generation
    assign SE_out_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_backStall = i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_stall_out | ~ (SE_out_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_and0 = redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_valid_out;
    assign SE_out_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_wireValid = SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_V0 & SE_out_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_and0;

    // SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo(STALLENABLE,3025)
    // Valid signal propagation
    assign SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_V0 = SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_wireValid;
    // Backward Stall generation
    assign SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_backStall = i_llvm_fpga_push_i32_k_036_pop38132_push99_conv243_out_stall_out | ~ (SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_wireValid = SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_V;

    // SE_out_i_llvm_fpga_push_i32_k_036_pop38132_push99_conv243(STALLENABLE,2665)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i32_k_036_pop38132_push99_conv243_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i32_k_036_pop38132_push99_conv243_wireValid = i_llvm_fpga_push_i32_k_036_pop38132_push99_conv243_out_valid_out;

    // i_llvm_fpga_push_i32_k_036_pop38132_push99_conv243(BLACKBOX,202)@100
    // in in_stall_in@20000000
    // out out_data_out@101
    // out out_feedback_out_99@20000000
    // out out_feedback_valid_out_99@20000000
    // out out_stall_out@20000000
    // out out_valid_out@101
    conv2_i_llvm_fpga_push_i32_k_036_pop38132_push99_0 thei_llvm_fpga_push_i32_k_036_pop38132_push99_conv243 (
        .in_data_in(SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_D0),
        .in_feedback_stall_in_99(i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_feedback_stall_out_99),
        .in_keep_going(SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i32_k_036_pop38132_push99_conv243_backStall),
        .in_valid_in(SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_V0),
        .out_data_out(),
        .out_feedback_out_99(i_llvm_fpga_push_i32_k_036_pop38132_push99_conv243_out_feedback_out_99),
        .out_feedback_valid_out_99(i_llvm_fpga_push_i32_k_036_pop38132_push99_conv243_out_feedback_valid_out_99),
        .out_stall_out(i_llvm_fpga_push_i32_k_036_pop38132_push99_conv243_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i32_k_036_pop38132_push99_conv243_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0(REG,2256)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_q <= $unsigned(1'b0);
        end
        else if (SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_backEN == 1'b1)
        begin
            redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_q <= $unsigned(SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_D0);
        end
    end

    // bubble_join_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo(BITJOIN,2488)
    assign bubble_join_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_q = redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_data_out;

    // bubble_select_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo(BITSELECT,2489)
    assign bubble_select_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_b = $unsigned(bubble_join_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_q[31:0]);

    // i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29(BLACKBOX,170)@25
    // in in_stall_in@20000000
    // out out_data_out@26
    // out out_feedback_stall_out_99@20000000
    // out out_stall_out@20000000
    // out out_valid_out@26
    conv2_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_0 thei_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29 (
        .in_data_in(bubble_select_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_b),
        .in_dir(redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_q),
        .in_feedback_in_99(i_llvm_fpga_push_i32_k_036_pop38132_push99_conv243_out_feedback_out_99),
        .in_feedback_valid_in_99(i_llvm_fpga_push_i32_k_036_pop38132_push99_conv243_out_feedback_valid_out_99),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_backStall),
        .in_valid_in(SE_out_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_V0),
        .out_data_out(i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out),
        .out_feedback_stall_out_99(i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_feedback_stall_out_99),
        .out_stall_out(i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29(STALLENABLE,2601)
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_V0 = SE_out_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_wireValid;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_backStall = SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_backStall | ~ (SE_out_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_wireValid = i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_valid_out;

    // SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0(STALLENABLE,2739)
    // Valid signal propagation
    assign SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_V0 = SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_R_v_0;
    // Stall signal propagation
    assign SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_s_tv_0 = SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_backStall & SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_R_v_0;
    // Backward Enable generation
    assign SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_backEN = ~ (SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_v_s_0 = SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_backEN & SE_out_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_V0;
    // Backward Stall generation
    assign SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_backStall = ~ (SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_v_s_0);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_backEN == 1'b0)
            begin
                SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_R_v_0 <= SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_R_v_0 & SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_s_tv_0;
            end
            else
            begin
                SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_R_v_0 <= SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_v_s_0;
            end

        end
    end

    // bubble_join_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29(BITJOIN,2389)
    assign bubble_join_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_q = i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29(BITSELECT,2390)
    assign bubble_select_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_b = $unsigned(bubble_join_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_q[31:0]);

    // i_idxprom_conv244_sel_x(BITSELECT,88)@26
    assign i_idxprom_conv244_sel_x_b = {32'b00000000000000000000000000000000, bubble_select_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_b[31:0]};

    // i_idxprom_conv244_vt_select_31(BITSELECT,137)@26
    assign i_idxprom_conv244_vt_select_31_b = i_idxprom_conv244_sel_x_b[31:0];

    // i_idxprom_conv244_vt_join(BITJOIN,136)@26
    assign i_idxprom_conv244_vt_join_q = {c_i32_0104_recast_x_q, i_idxprom_conv244_vt_select_31_b};

    // i_arrayidx24_conv20_mult_x_bs1_merged_bit_select(BITSELECT,2043)@26
    assign i_arrayidx24_conv20_mult_x_bs1_merged_bit_select_b = i_idxprom_conv244_vt_join_q[17:0];
    assign i_arrayidx24_conv20_mult_x_bs1_merged_bit_select_c = i_idxprom_conv244_vt_join_q[35:18];
    assign i_arrayidx24_conv20_mult_x_bs1_merged_bit_select_d = i_idxprom_conv244_vt_join_q[53:36];
    assign i_arrayidx24_conv20_mult_x_bs1_merged_bit_select_e = i_idxprom_conv244_vt_join_q[63:54];

    // join_for_coalesced_delay_5(BITJOIN,2182)
    assign join_for_coalesced_delay_5_q = {i_arrayidx24_conv20_mult_x_bs1_merged_bit_select_e, i_arrayidx24_conv20_mult_x_bs1_merged_bit_select_d, i_arrayidx24_conv20_mult_x_bs1_merged_bit_select_c, i_arrayidx24_conv20_mult_x_bs1_merged_bit_select_b};

    // coalesced_delay_5_0(REG,2275)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            coalesced_delay_5_0_q <= $unsigned(64'b0000000000000000000000000000000000000000000000000000000000000000);
        end
        else if (SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_backEN == 1'b1)
        begin
            coalesced_delay_5_0_q <= $unsigned(join_for_coalesced_delay_5_q);
        end
    end

    // sel_for_coalesced_delay_5(BITSELECT,2183)
    assign sel_for_coalesced_delay_5_b = $unsigned(coalesced_delay_5_0_q[17:0]);
    assign sel_for_coalesced_delay_5_c = $unsigned(coalesced_delay_5_0_q[35:18]);
    assign sel_for_coalesced_delay_5_d = $unsigned(coalesced_delay_5_0_q[53:36]);
    assign sel_for_coalesced_delay_5_e = $unsigned(coalesced_delay_5_0_q[63:54]);

    // highBBits_uid890_i_arrayidx24_conv20_mult_x_im6(BITSELECT,889)@27
    assign highBBits_uid890_i_arrayidx24_conv20_mult_x_im6_b = sel_for_coalesced_delay_5_d[17:4];

    // highBBits_uid885_i_arrayidx24_conv20_mult_x_im6(BITSELECT,884)@26
    assign highBBits_uid885_i_arrayidx24_conv20_mult_x_im6_b = i_arrayidx24_conv20_mult_x_bs1_merged_bit_select_d[17:1];

    // addsumAHighB_uid886_i_arrayidx24_conv20_mult_x_im6(ADD,885)@26 + 1
    assign addsumAHighB_uid886_i_arrayidx24_conv20_mult_x_im6_a = {1'b0, i_arrayidx24_conv20_mult_x_bs1_merged_bit_select_d};
    assign addsumAHighB_uid886_i_arrayidx24_conv20_mult_x_im6_b = {2'b00, highBBits_uid885_i_arrayidx24_conv20_mult_x_im6_b};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            addsumAHighB_uid886_i_arrayidx24_conv20_mult_x_im6_o <= 19'b0;
        end
        else if (SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_backEN == 1'b1)
        begin
            addsumAHighB_uid886_i_arrayidx24_conv20_mult_x_im6_o <= $unsigned(addsumAHighB_uid886_i_arrayidx24_conv20_mult_x_im6_a) + $unsigned(addsumAHighB_uid886_i_arrayidx24_conv20_mult_x_im6_b);
        end
    end
    assign addsumAHighB_uid886_i_arrayidx24_conv20_mult_x_im6_q = addsumAHighB_uid886_i_arrayidx24_conv20_mult_x_im6_o[18:0];

    // lowRangeB_uid884_i_arrayidx24_conv20_mult_x_im6(BITSELECT,883)@27
    assign lowRangeB_uid884_i_arrayidx24_conv20_mult_x_im6_in = sel_for_coalesced_delay_5_d[0:0];
    assign lowRangeB_uid884_i_arrayidx24_conv20_mult_x_im6_b = lowRangeB_uid884_i_arrayidx24_conv20_mult_x_im6_in[0:0];

    // add_uid887_i_arrayidx24_conv20_mult_x_im6(BITJOIN,886)@27
    assign add_uid887_i_arrayidx24_conv20_mult_x_im6_q = {addsumAHighB_uid886_i_arrayidx24_conv20_mult_x_im6_q, lowRangeB_uid884_i_arrayidx24_conv20_mult_x_im6_b};

    // a_subconst_49_sumAHighB_uid891_i_arrayidx24_conv20_mult_x_im6(ADD,890)@27
    assign a_subconst_49_sumAHighB_uid891_i_arrayidx24_conv20_mult_x_im6_a = {1'b0, add_uid887_i_arrayidx24_conv20_mult_x_im6_q};
    assign a_subconst_49_sumAHighB_uid891_i_arrayidx24_conv20_mult_x_im6_b = {7'b0000000, highBBits_uid890_i_arrayidx24_conv20_mult_x_im6_b};
    assign a_subconst_49_sumAHighB_uid891_i_arrayidx24_conv20_mult_x_im6_o = $unsigned(a_subconst_49_sumAHighB_uid891_i_arrayidx24_conv20_mult_x_im6_a) + $unsigned(a_subconst_49_sumAHighB_uid891_i_arrayidx24_conv20_mult_x_im6_b);
    assign a_subconst_49_sumAHighB_uid891_i_arrayidx24_conv20_mult_x_im6_q = a_subconst_49_sumAHighB_uid891_i_arrayidx24_conv20_mult_x_im6_o[20:0];

    // lowRangeB_uid889_i_arrayidx24_conv20_mult_x_im6(BITSELECT,888)@27
    assign lowRangeB_uid889_i_arrayidx24_conv20_mult_x_im6_in = sel_for_coalesced_delay_5_d[3:0];
    assign lowRangeB_uid889_i_arrayidx24_conv20_mult_x_im6_b = lowRangeB_uid889_i_arrayidx24_conv20_mult_x_im6_in[3:0];

    // a_subconst_49_uid892_i_arrayidx24_conv20_mult_x_im6(BITJOIN,891)@27
    assign a_subconst_49_uid892_i_arrayidx24_conv20_mult_x_im6_q = {a_subconst_49_sumAHighB_uid891_i_arrayidx24_conv20_mult_x_im6_q, lowRangeB_uid889_i_arrayidx24_conv20_mult_x_im6_b};

    // sR_bottomRange_uid896_i_arrayidx24_conv20_mult_x_im6(BITSELECT,895)@27
    assign sR_bottomRange_uid896_i_arrayidx24_conv20_mult_x_im6_in = a_subconst_49_uid892_i_arrayidx24_conv20_mult_x_im6_q[23:0];
    assign sR_bottomRange_uid896_i_arrayidx24_conv20_mult_x_im6_b = sR_bottomRange_uid896_i_arrayidx24_conv20_mult_x_im6_in[23:0];

    // redist42_sR_bottomRange_uid896_i_arrayidx24_conv20_mult_x_im6_b_1_0(REG,2223)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist42_sR_bottomRange_uid896_i_arrayidx24_conv20_mult_x_im6_b_1_0_q <= $unsigned(24'b000000000000000000000000);
        end
        else if (SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_backEN == 1'b1)
        begin
            redist42_sR_bottomRange_uid896_i_arrayidx24_conv20_mult_x_im6_b_1_0_q <= $unsigned(sR_bottomRange_uid896_i_arrayidx24_conv20_mult_x_im6_b);
        end
    end

    // sR_bottomExtension_uid757_i_arrayidx24_conv20_mult_x_im0(CONSTANT,756)
    assign sR_bottomExtension_uid757_i_arrayidx24_conv20_mult_x_im0_q = $unsigned(4'b0000);

    // sR_mergedSignalTM_uid897_i_arrayidx24_conv20_mult_x_im6(BITJOIN,896)@28
    assign sR_mergedSignalTM_uid897_i_arrayidx24_conv20_mult_x_im6_q = {redist42_sR_bottomRange_uid896_i_arrayidx24_conv20_mult_x_im6_b_1_0_q, sR_bottomExtension_uid757_i_arrayidx24_conv20_mult_x_im0_q};

    // i_arrayidx24_conv20_mult_x_sums_align_0(BITSHIFT,419)@28
    assign i_arrayidx24_conv20_mult_x_sums_align_0_qint = { sR_mergedSignalTM_uid897_i_arrayidx24_conv20_mult_x_im6_q, 8'b00000000 };
    assign i_arrayidx24_conv20_mult_x_sums_align_0_q = i_arrayidx24_conv20_mult_x_sums_align_0_qint[35:0];

    // i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select(BITSELECT,2048)@28
    assign i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_b = $unsigned(i_arrayidx24_conv20_mult_x_sums_align_0_q[23:0]);
    assign i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c = $unsigned(i_arrayidx24_conv20_mult_x_sums_align_0_q[35:24]);

    // highBBits_uid1154_i_arrayidx32_conv20_dupName_0_mult_x_im6(BITSELECT,1153)@27
    assign highBBits_uid1154_i_arrayidx32_conv20_dupName_0_mult_x_im6_b = sel_for_coalesced_delay_5_d[17:3];

    // a_subconst_25_sumAHighB_uid1155_i_arrayidx32_conv20_dupName_0_mult_x_im6(ADD,1154)@27
    assign a_subconst_25_sumAHighB_uid1155_i_arrayidx32_conv20_dupName_0_mult_x_im6_a = {1'b0, add_uid887_i_arrayidx24_conv20_mult_x_im6_q};
    assign a_subconst_25_sumAHighB_uid1155_i_arrayidx32_conv20_dupName_0_mult_x_im6_b = {6'b000000, highBBits_uid1154_i_arrayidx32_conv20_dupName_0_mult_x_im6_b};
    assign a_subconst_25_sumAHighB_uid1155_i_arrayidx32_conv20_dupName_0_mult_x_im6_o = $unsigned(a_subconst_25_sumAHighB_uid1155_i_arrayidx32_conv20_dupName_0_mult_x_im6_a) + $unsigned(a_subconst_25_sumAHighB_uid1155_i_arrayidx32_conv20_dupName_0_mult_x_im6_b);
    assign a_subconst_25_sumAHighB_uid1155_i_arrayidx32_conv20_dupName_0_mult_x_im6_q = a_subconst_25_sumAHighB_uid1155_i_arrayidx32_conv20_dupName_0_mult_x_im6_o[20:0];

    // lowRangeB_uid1153_i_arrayidx32_conv20_dupName_0_mult_x_im6(BITSELECT,1152)@27
    assign lowRangeB_uid1153_i_arrayidx32_conv20_dupName_0_mult_x_im6_in = sel_for_coalesced_delay_5_d[2:0];
    assign lowRangeB_uid1153_i_arrayidx32_conv20_dupName_0_mult_x_im6_b = lowRangeB_uid1153_i_arrayidx32_conv20_dupName_0_mult_x_im6_in[2:0];

    // a_subconst_25_uid1156_i_arrayidx32_conv20_dupName_0_mult_x_im6(BITJOIN,1155)@27
    assign a_subconst_25_uid1156_i_arrayidx32_conv20_dupName_0_mult_x_im6_q = {a_subconst_25_sumAHighB_uid1155_i_arrayidx32_conv20_dupName_0_mult_x_im6_q, lowRangeB_uid1153_i_arrayidx32_conv20_dupName_0_mult_x_im6_b};

    // sR_bottomRange_uid1160_i_arrayidx32_conv20_dupName_0_mult_x_im6(BITSELECT,1159)@27
    assign sR_bottomRange_uid1160_i_arrayidx32_conv20_dupName_0_mult_x_im6_in = a_subconst_25_uid1156_i_arrayidx32_conv20_dupName_0_mult_x_im6_q[22:0];
    assign sR_bottomRange_uid1160_i_arrayidx32_conv20_dupName_0_mult_x_im6_b = sR_bottomRange_uid1160_i_arrayidx32_conv20_dupName_0_mult_x_im6_in[22:0];

    // redist39_sR_bottomRange_uid1160_i_arrayidx32_conv20_dupName_0_mult_x_im6_b_1_0(REG,2220)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist39_sR_bottomRange_uid1160_i_arrayidx32_conv20_dupName_0_mult_x_im6_b_1_0_q <= $unsigned(23'b00000000000000000000000);
        end
        else if (SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_backEN == 1'b1)
        begin
            redist39_sR_bottomRange_uid1160_i_arrayidx32_conv20_dupName_0_mult_x_im6_b_1_0_q <= $unsigned(sR_bottomRange_uid1160_i_arrayidx32_conv20_dupName_0_mult_x_im6_b);
        end
    end

    // sR_mergedSignalTM_uid1161_i_arrayidx32_conv20_dupName_0_mult_x_im6(BITJOIN,1160)@28
    assign sR_mergedSignalTM_uid1161_i_arrayidx32_conv20_dupName_0_mult_x_im6_q = {redist39_sR_bottomRange_uid1160_i_arrayidx32_conv20_dupName_0_mult_x_im6_b_1_0_q, i_arrayidx24_conv20_c_i2_03_x_q};

    // i_arrayidx32_conv20_dupName_0_mult_x_sums_align_0(BITSHIFT,437)@28
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_align_0_qint = { sR_mergedSignalTM_uid1161_i_arrayidx32_conv20_dupName_0_mult_x_im6_q, 11'b00000000000 };
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_align_0_q = i_arrayidx32_conv20_dupName_0_mult_x_sums_align_0_qint[35:0];

    // i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select(BITSELECT,2050)@28
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_b = $unsigned(i_arrayidx32_conv20_dupName_0_mult_x_sums_align_0_q[26:0]);
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c = $unsigned(i_arrayidx32_conv20_dupName_0_mult_x_sums_align_0_q[35:27]);

    // highBBits_uid959_i_arrayidx24_conv20_mult_x_im9(BITSELECT,958)@27
    assign highBBits_uid959_i_arrayidx24_conv20_mult_x_im9_b = sel_for_coalesced_delay_5_e[9:4];

    // highBBits_uid954_i_arrayidx24_conv20_mult_x_im9(BITSELECT,953)@26
    assign highBBits_uid954_i_arrayidx24_conv20_mult_x_im9_b = i_arrayidx24_conv20_mult_x_bs1_merged_bit_select_e[9:1];

    // addsumAHighB_uid955_i_arrayidx24_conv20_mult_x_im9(ADD,954)@26 + 1
    assign addsumAHighB_uid955_i_arrayidx24_conv20_mult_x_im9_a = {1'b0, i_arrayidx24_conv20_mult_x_bs1_merged_bit_select_e};
    assign addsumAHighB_uid955_i_arrayidx24_conv20_mult_x_im9_b = {2'b00, highBBits_uid954_i_arrayidx24_conv20_mult_x_im9_b};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            addsumAHighB_uid955_i_arrayidx24_conv20_mult_x_im9_o <= 11'b0;
        end
        else if (SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_backEN == 1'b1)
        begin
            addsumAHighB_uid955_i_arrayidx24_conv20_mult_x_im9_o <= $unsigned(addsumAHighB_uid955_i_arrayidx24_conv20_mult_x_im9_a) + $unsigned(addsumAHighB_uid955_i_arrayidx24_conv20_mult_x_im9_b);
        end
    end
    assign addsumAHighB_uid955_i_arrayidx24_conv20_mult_x_im9_q = addsumAHighB_uid955_i_arrayidx24_conv20_mult_x_im9_o[10:0];

    // lowRangeB_uid953_i_arrayidx24_conv20_mult_x_im9(BITSELECT,952)@27
    assign lowRangeB_uid953_i_arrayidx24_conv20_mult_x_im9_in = sel_for_coalesced_delay_5_e[0:0];
    assign lowRangeB_uid953_i_arrayidx24_conv20_mult_x_im9_b = lowRangeB_uid953_i_arrayidx24_conv20_mult_x_im9_in[0:0];

    // add_uid956_i_arrayidx24_conv20_mult_x_im9(BITJOIN,955)@27
    assign add_uid956_i_arrayidx24_conv20_mult_x_im9_q = {addsumAHighB_uid955_i_arrayidx24_conv20_mult_x_im9_q, lowRangeB_uid953_i_arrayidx24_conv20_mult_x_im9_b};

    // a_subconst_49_sumAHighB_uid960_i_arrayidx24_conv20_mult_x_im9(ADD,959)@27
    assign a_subconst_49_sumAHighB_uid960_i_arrayidx24_conv20_mult_x_im9_a = {1'b0, add_uid956_i_arrayidx24_conv20_mult_x_im9_q};
    assign a_subconst_49_sumAHighB_uid960_i_arrayidx24_conv20_mult_x_im9_b = {7'b0000000, highBBits_uid959_i_arrayidx24_conv20_mult_x_im9_b};
    assign a_subconst_49_sumAHighB_uid960_i_arrayidx24_conv20_mult_x_im9_o = $unsigned(a_subconst_49_sumAHighB_uid960_i_arrayidx24_conv20_mult_x_im9_a) + $unsigned(a_subconst_49_sumAHighB_uid960_i_arrayidx24_conv20_mult_x_im9_b);
    assign a_subconst_49_sumAHighB_uid960_i_arrayidx24_conv20_mult_x_im9_q = a_subconst_49_sumAHighB_uid960_i_arrayidx24_conv20_mult_x_im9_o[12:0];

    // lowRangeB_uid958_i_arrayidx24_conv20_mult_x_im9(BITSELECT,957)@27
    assign lowRangeB_uid958_i_arrayidx24_conv20_mult_x_im9_in = sel_for_coalesced_delay_5_e[3:0];
    assign lowRangeB_uid958_i_arrayidx24_conv20_mult_x_im9_b = lowRangeB_uid958_i_arrayidx24_conv20_mult_x_im9_in[3:0];

    // a_subconst_49_uid961_i_arrayidx24_conv20_mult_x_im9(BITJOIN,960)@27
    assign a_subconst_49_uid961_i_arrayidx24_conv20_mult_x_im9_q = {a_subconst_49_sumAHighB_uid960_i_arrayidx24_conv20_mult_x_im9_q, lowRangeB_uid958_i_arrayidx24_conv20_mult_x_im9_b};

    // sR_bottomRange_uid965_i_arrayidx24_conv20_mult_x_im9(BITSELECT,964)@27
    assign sR_bottomRange_uid965_i_arrayidx24_conv20_mult_x_im9_in = a_subconst_49_uid961_i_arrayidx24_conv20_mult_x_im9_q[15:0];
    assign sR_bottomRange_uid965_i_arrayidx24_conv20_mult_x_im9_b = sR_bottomRange_uid965_i_arrayidx24_conv20_mult_x_im9_in[15:0];

    // redist41_sR_bottomRange_uid965_i_arrayidx24_conv20_mult_x_im9_b_1_0(REG,2222)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist41_sR_bottomRange_uid965_i_arrayidx24_conv20_mult_x_im9_b_1_0_q <= $unsigned(16'b0000000000000000);
        end
        else if (SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_backEN == 1'b1)
        begin
            redist41_sR_bottomRange_uid965_i_arrayidx24_conv20_mult_x_im9_b_1_0_q <= $unsigned(sR_bottomRange_uid965_i_arrayidx24_conv20_mult_x_im9_b);
        end
    end

    // sR_mergedSignalTM_uid966_i_arrayidx24_conv20_mult_x_im9(BITJOIN,965)@28
    assign sR_mergedSignalTM_uid966_i_arrayidx24_conv20_mult_x_im9_q = {redist41_sR_bottomRange_uid965_i_arrayidx24_conv20_mult_x_im9_b_1_0_q, sR_bottomExtension_uid757_i_arrayidx24_conv20_mult_x_im0_q};

    // i_arrayidx24_conv20_mult_x_sums_align_3(BITSHIFT,422)@28
    assign i_arrayidx24_conv20_mult_x_sums_align_3_qint = { sR_mergedSignalTM_uid966_i_arrayidx24_conv20_mult_x_im9_q, 8'b00000000 };
    assign i_arrayidx24_conv20_mult_x_sums_align_3_q = i_arrayidx24_conv20_mult_x_sums_align_3_qint[27:0];

    // i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select(BITSELECT,2049)@28
    assign i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_b = $unsigned(i_arrayidx24_conv20_mult_x_sums_align_3_q[5:0]);
    assign i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c = $unsigned(i_arrayidx24_conv20_mult_x_sums_align_3_q[27:6]);

    // highBBits_uid1223_i_arrayidx32_conv20_dupName_0_mult_x_im9(BITSELECT,1222)@27
    assign highBBits_uid1223_i_arrayidx32_conv20_dupName_0_mult_x_im9_b = sel_for_coalesced_delay_5_e[9:3];

    // a_subconst_25_sumAHighB_uid1224_i_arrayidx32_conv20_dupName_0_mult_x_im9(ADD,1223)@27
    assign a_subconst_25_sumAHighB_uid1224_i_arrayidx32_conv20_dupName_0_mult_x_im9_a = {1'b0, add_uid956_i_arrayidx24_conv20_mult_x_im9_q};
    assign a_subconst_25_sumAHighB_uid1224_i_arrayidx32_conv20_dupName_0_mult_x_im9_b = {6'b000000, highBBits_uid1223_i_arrayidx32_conv20_dupName_0_mult_x_im9_b};
    assign a_subconst_25_sumAHighB_uid1224_i_arrayidx32_conv20_dupName_0_mult_x_im9_o = $unsigned(a_subconst_25_sumAHighB_uid1224_i_arrayidx32_conv20_dupName_0_mult_x_im9_a) + $unsigned(a_subconst_25_sumAHighB_uid1224_i_arrayidx32_conv20_dupName_0_mult_x_im9_b);
    assign a_subconst_25_sumAHighB_uid1224_i_arrayidx32_conv20_dupName_0_mult_x_im9_q = a_subconst_25_sumAHighB_uid1224_i_arrayidx32_conv20_dupName_0_mult_x_im9_o[12:0];

    // lowRangeB_uid1222_i_arrayidx32_conv20_dupName_0_mult_x_im9(BITSELECT,1221)@27
    assign lowRangeB_uid1222_i_arrayidx32_conv20_dupName_0_mult_x_im9_in = sel_for_coalesced_delay_5_e[2:0];
    assign lowRangeB_uid1222_i_arrayidx32_conv20_dupName_0_mult_x_im9_b = lowRangeB_uid1222_i_arrayidx32_conv20_dupName_0_mult_x_im9_in[2:0];

    // a_subconst_25_uid1225_i_arrayidx32_conv20_dupName_0_mult_x_im9(BITJOIN,1224)@27
    assign a_subconst_25_uid1225_i_arrayidx32_conv20_dupName_0_mult_x_im9_q = {a_subconst_25_sumAHighB_uid1224_i_arrayidx32_conv20_dupName_0_mult_x_im9_q, lowRangeB_uid1222_i_arrayidx32_conv20_dupName_0_mult_x_im9_b};

    // sR_bottomRange_uid1229_i_arrayidx32_conv20_dupName_0_mult_x_im9(BITSELECT,1228)@27
    assign sR_bottomRange_uid1229_i_arrayidx32_conv20_dupName_0_mult_x_im9_in = a_subconst_25_uid1225_i_arrayidx32_conv20_dupName_0_mult_x_im9_q[14:0];
    assign sR_bottomRange_uid1229_i_arrayidx32_conv20_dupName_0_mult_x_im9_b = sR_bottomRange_uid1229_i_arrayidx32_conv20_dupName_0_mult_x_im9_in[14:0];

    // redist38_sR_bottomRange_uid1229_i_arrayidx32_conv20_dupName_0_mult_x_im9_b_1_0(REG,2219)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist38_sR_bottomRange_uid1229_i_arrayidx32_conv20_dupName_0_mult_x_im9_b_1_0_q <= $unsigned(15'b000000000000000);
        end
        else if (SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_backEN == 1'b1)
        begin
            redist38_sR_bottomRange_uid1229_i_arrayidx32_conv20_dupName_0_mult_x_im9_b_1_0_q <= $unsigned(sR_bottomRange_uid1229_i_arrayidx32_conv20_dupName_0_mult_x_im9_b);
        end
    end

    // sR_mergedSignalTM_uid1230_i_arrayidx32_conv20_dupName_0_mult_x_im9(BITJOIN,1229)@28
    assign sR_mergedSignalTM_uid1230_i_arrayidx32_conv20_dupName_0_mult_x_im9_q = {redist38_sR_bottomRange_uid1229_i_arrayidx32_conv20_dupName_0_mult_x_im9_b_1_0_q, i_arrayidx24_conv20_c_i2_03_x_q};

    // i_arrayidx32_conv20_dupName_0_mult_x_sums_align_3(BITSHIFT,440)@28
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_align_3_qint = { sR_mergedSignalTM_uid1230_i_arrayidx32_conv20_dupName_0_mult_x_im9_q, 11'b00000000000 };
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_align_3_q = i_arrayidx32_conv20_dupName_0_mult_x_sums_align_3_qint[27:0];

    // i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select(BITSELECT,2051)@28
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_b = $unsigned(i_arrayidx32_conv20_dupName_0_mult_x_sums_align_3_q[8:0]);
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c = $unsigned(i_arrayidx32_conv20_dupName_0_mult_x_sums_align_3_q[27:9]);

    // highBBits_uid1085_i_arrayidx32_conv20_dupName_0_mult_x_im3(BITSELECT,1084)@27
    assign highBBits_uid1085_i_arrayidx32_conv20_dupName_0_mult_x_im3_b = sel_for_coalesced_delay_5_c[17:3];

    // highBBits_uid816_i_arrayidx24_conv20_mult_x_im3(BITSELECT,815)@26
    assign highBBits_uid816_i_arrayidx24_conv20_mult_x_im3_b = i_arrayidx24_conv20_mult_x_bs1_merged_bit_select_c[17:1];

    // addsumAHighB_uid817_i_arrayidx24_conv20_mult_x_im3(ADD,816)@26 + 1
    assign addsumAHighB_uid817_i_arrayidx24_conv20_mult_x_im3_a = {1'b0, i_arrayidx24_conv20_mult_x_bs1_merged_bit_select_c};
    assign addsumAHighB_uid817_i_arrayidx24_conv20_mult_x_im3_b = {2'b00, highBBits_uid816_i_arrayidx24_conv20_mult_x_im3_b};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            addsumAHighB_uid817_i_arrayidx24_conv20_mult_x_im3_o <= 19'b0;
        end
        else if (SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_backEN == 1'b1)
        begin
            addsumAHighB_uid817_i_arrayidx24_conv20_mult_x_im3_o <= $unsigned(addsumAHighB_uid817_i_arrayidx24_conv20_mult_x_im3_a) + $unsigned(addsumAHighB_uid817_i_arrayidx24_conv20_mult_x_im3_b);
        end
    end
    assign addsumAHighB_uid817_i_arrayidx24_conv20_mult_x_im3_q = addsumAHighB_uid817_i_arrayidx24_conv20_mult_x_im3_o[18:0];

    // lowRangeB_uid815_i_arrayidx24_conv20_mult_x_im3(BITSELECT,814)@27
    assign lowRangeB_uid815_i_arrayidx24_conv20_mult_x_im3_in = sel_for_coalesced_delay_5_c[0:0];
    assign lowRangeB_uid815_i_arrayidx24_conv20_mult_x_im3_b = lowRangeB_uid815_i_arrayidx24_conv20_mult_x_im3_in[0:0];

    // add_uid818_i_arrayidx24_conv20_mult_x_im3(BITJOIN,817)@27
    assign add_uid818_i_arrayidx24_conv20_mult_x_im3_q = {addsumAHighB_uid817_i_arrayidx24_conv20_mult_x_im3_q, lowRangeB_uid815_i_arrayidx24_conv20_mult_x_im3_b};

    // a_subconst_25_sumAHighB_uid1086_i_arrayidx32_conv20_dupName_0_mult_x_im3(ADD,1085)@27
    assign a_subconst_25_sumAHighB_uid1086_i_arrayidx32_conv20_dupName_0_mult_x_im3_a = {1'b0, add_uid818_i_arrayidx24_conv20_mult_x_im3_q};
    assign a_subconst_25_sumAHighB_uid1086_i_arrayidx32_conv20_dupName_0_mult_x_im3_b = {6'b000000, highBBits_uid1085_i_arrayidx32_conv20_dupName_0_mult_x_im3_b};
    assign a_subconst_25_sumAHighB_uid1086_i_arrayidx32_conv20_dupName_0_mult_x_im3_o = $unsigned(a_subconst_25_sumAHighB_uid1086_i_arrayidx32_conv20_dupName_0_mult_x_im3_a) + $unsigned(a_subconst_25_sumAHighB_uid1086_i_arrayidx32_conv20_dupName_0_mult_x_im3_b);
    assign a_subconst_25_sumAHighB_uid1086_i_arrayidx32_conv20_dupName_0_mult_x_im3_q = a_subconst_25_sumAHighB_uid1086_i_arrayidx32_conv20_dupName_0_mult_x_im3_o[20:0];

    // lowRangeB_uid1084_i_arrayidx32_conv20_dupName_0_mult_x_im3(BITSELECT,1083)@27
    assign lowRangeB_uid1084_i_arrayidx32_conv20_dupName_0_mult_x_im3_in = sel_for_coalesced_delay_5_c[2:0];
    assign lowRangeB_uid1084_i_arrayidx32_conv20_dupName_0_mult_x_im3_b = lowRangeB_uid1084_i_arrayidx32_conv20_dupName_0_mult_x_im3_in[2:0];

    // a_subconst_25_uid1087_i_arrayidx32_conv20_dupName_0_mult_x_im3(BITJOIN,1086)@27
    assign a_subconst_25_uid1087_i_arrayidx32_conv20_dupName_0_mult_x_im3_q = {a_subconst_25_sumAHighB_uid1086_i_arrayidx32_conv20_dupName_0_mult_x_im3_q, lowRangeB_uid1084_i_arrayidx32_conv20_dupName_0_mult_x_im3_b};

    // sR_bottomRange_uid1091_i_arrayidx32_conv20_dupName_0_mult_x_im3(BITSELECT,1090)@27
    assign sR_bottomRange_uid1091_i_arrayidx32_conv20_dupName_0_mult_x_im3_in = a_subconst_25_uid1087_i_arrayidx32_conv20_dupName_0_mult_x_im3_q[22:0];
    assign sR_bottomRange_uid1091_i_arrayidx32_conv20_dupName_0_mult_x_im3_b = sR_bottomRange_uid1091_i_arrayidx32_conv20_dupName_0_mult_x_im3_in[22:0];

    // redist40_sR_bottomRange_uid1091_i_arrayidx32_conv20_dupName_0_mult_x_im3_b_1_0(REG,2221)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist40_sR_bottomRange_uid1091_i_arrayidx32_conv20_dupName_0_mult_x_im3_b_1_0_q <= $unsigned(23'b00000000000000000000000);
        end
        else if (SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_backEN == 1'b1)
        begin
            redist40_sR_bottomRange_uid1091_i_arrayidx32_conv20_dupName_0_mult_x_im3_b_1_0_q <= $unsigned(sR_bottomRange_uid1091_i_arrayidx32_conv20_dupName_0_mult_x_im3_b);
        end
    end

    // sR_mergedSignalTM_uid1092_i_arrayidx32_conv20_dupName_0_mult_x_im3(BITJOIN,1091)@28
    assign sR_mergedSignalTM_uid1092_i_arrayidx32_conv20_dupName_0_mult_x_im3_q = {redist40_sR_bottomRange_uid1091_i_arrayidx32_conv20_dupName_0_mult_x_im3_b_1_0_q, i_arrayidx24_conv20_c_i2_03_x_q};

    // i_arrayidx32_conv20_dupName_0_mult_x_sums_align_2(BITSHIFT,439)@28
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_align_2_qint = { sR_mergedSignalTM_uid1092_i_arrayidx32_conv20_dupName_0_mult_x_im3_q, 18'b000000000000000000 };
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_align_2_q = i_arrayidx32_conv20_dupName_0_mult_x_sums_align_2_qint[42:0];

    // i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b(BITJOIN,2008)@28
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b_q = {i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_b, i_arrayidx32_conv20_dupName_0_mult_x_sums_align_2_q};

    // highBBits_uid1016_i_arrayidx32_conv20_dupName_0_mult_x_im0(BITSELECT,1015)@27
    assign highBBits_uid1016_i_arrayidx32_conv20_dupName_0_mult_x_im0_b = sel_for_coalesced_delay_5_b[17:3];

    // highBBits_uid747_i_arrayidx24_conv20_mult_x_im0(BITSELECT,746)@26
    assign highBBits_uid747_i_arrayidx24_conv20_mult_x_im0_b = i_arrayidx24_conv20_mult_x_bs1_merged_bit_select_b[17:1];

    // addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0(ADD,747)@26 + 1
    assign addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_a = {1'b0, i_arrayidx24_conv20_mult_x_bs1_merged_bit_select_b};
    assign addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_b = {2'b00, highBBits_uid747_i_arrayidx24_conv20_mult_x_im0_b};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_o <= 19'b0;
        end
        else if (SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_backEN == 1'b1)
        begin
            addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_o <= $unsigned(addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_a) + $unsigned(addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_b);
        end
    end
    assign addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_q = addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_o[18:0];

    // lowRangeB_uid746_i_arrayidx24_conv20_mult_x_im0(BITSELECT,745)@27
    assign lowRangeB_uid746_i_arrayidx24_conv20_mult_x_im0_in = sel_for_coalesced_delay_5_b[0:0];
    assign lowRangeB_uid746_i_arrayidx24_conv20_mult_x_im0_b = lowRangeB_uid746_i_arrayidx24_conv20_mult_x_im0_in[0:0];

    // add_uid749_i_arrayidx24_conv20_mult_x_im0(BITJOIN,748)@27
    assign add_uid749_i_arrayidx24_conv20_mult_x_im0_q = {addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_q, lowRangeB_uid746_i_arrayidx24_conv20_mult_x_im0_b};

    // a_subconst_25_sumAHighB_uid1017_i_arrayidx32_conv20_dupName_0_mult_x_im0(ADD,1016)@27
    assign a_subconst_25_sumAHighB_uid1017_i_arrayidx32_conv20_dupName_0_mult_x_im0_a = {1'b0, add_uid749_i_arrayidx24_conv20_mult_x_im0_q};
    assign a_subconst_25_sumAHighB_uid1017_i_arrayidx32_conv20_dupName_0_mult_x_im0_b = {6'b000000, highBBits_uid1016_i_arrayidx32_conv20_dupName_0_mult_x_im0_b};
    assign a_subconst_25_sumAHighB_uid1017_i_arrayidx32_conv20_dupName_0_mult_x_im0_o = $unsigned(a_subconst_25_sumAHighB_uid1017_i_arrayidx32_conv20_dupName_0_mult_x_im0_a) + $unsigned(a_subconst_25_sumAHighB_uid1017_i_arrayidx32_conv20_dupName_0_mult_x_im0_b);
    assign a_subconst_25_sumAHighB_uid1017_i_arrayidx32_conv20_dupName_0_mult_x_im0_q = a_subconst_25_sumAHighB_uid1017_i_arrayidx32_conv20_dupName_0_mult_x_im0_o[20:0];

    // i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2(BITSELECT,2000)@27
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b = $unsigned(a_subconst_25_sumAHighB_uid1017_i_arrayidx32_conv20_dupName_0_mult_x_im0_q[19:0]);

    // redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0(REG,2202)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_q <= $unsigned(20'b00000000000000000000);
        end
        else if (SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_backEN == 1'b1)
        begin
            redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_q <= $unsigned(i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b);
        end
    end

    // redist53_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_2_0(REG,2235)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist53_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_2_0_q <= $unsigned(32'b00000000000000000000000000000000);
        end
        else if (SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_backEN == 1'b1)
        begin
            redist53_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_2_0_q <= $unsigned(bubble_select_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_b);
        end
    end

    // redist53_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_2_1(REG,2236)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist53_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_2_1_q <= $unsigned(32'b00000000000000000000000000000000);
        end
        else if (SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_backEN == 1'b1)
        begin
            redist53_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_2_1_q <= $unsigned(redist53_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_2_0_q);
        end
    end

    // i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1(BITSELECT,1999)@28
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b = $unsigned(redist53_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_2_1_q[2:0]);

    // i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b(BITJOIN,2002)@28
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b_q = {i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_b, redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_q, i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b, i_arrayidx24_conv20_c_i2_03_x_q};

    // highBBits_uid821_i_arrayidx24_conv20_mult_x_im3(BITSELECT,820)@27
    assign highBBits_uid821_i_arrayidx24_conv20_mult_x_im3_b = sel_for_coalesced_delay_5_c[17:4];

    // a_subconst_49_sumAHighB_uid822_i_arrayidx24_conv20_mult_x_im3(ADD,821)@27
    assign a_subconst_49_sumAHighB_uid822_i_arrayidx24_conv20_mult_x_im3_a = {1'b0, add_uid818_i_arrayidx24_conv20_mult_x_im3_q};
    assign a_subconst_49_sumAHighB_uid822_i_arrayidx24_conv20_mult_x_im3_b = {7'b0000000, highBBits_uid821_i_arrayidx24_conv20_mult_x_im3_b};
    assign a_subconst_49_sumAHighB_uid822_i_arrayidx24_conv20_mult_x_im3_o = $unsigned(a_subconst_49_sumAHighB_uid822_i_arrayidx24_conv20_mult_x_im3_a) + $unsigned(a_subconst_49_sumAHighB_uid822_i_arrayidx24_conv20_mult_x_im3_b);
    assign a_subconst_49_sumAHighB_uid822_i_arrayidx24_conv20_mult_x_im3_q = a_subconst_49_sumAHighB_uid822_i_arrayidx24_conv20_mult_x_im3_o[20:0];

    // lowRangeB_uid820_i_arrayidx24_conv20_mult_x_im3(BITSELECT,819)@27
    assign lowRangeB_uid820_i_arrayidx24_conv20_mult_x_im3_in = sel_for_coalesced_delay_5_c[3:0];
    assign lowRangeB_uid820_i_arrayidx24_conv20_mult_x_im3_b = lowRangeB_uid820_i_arrayidx24_conv20_mult_x_im3_in[3:0];

    // a_subconst_49_uid823_i_arrayidx24_conv20_mult_x_im3(BITJOIN,822)@27
    assign a_subconst_49_uid823_i_arrayidx24_conv20_mult_x_im3_q = {a_subconst_49_sumAHighB_uid822_i_arrayidx24_conv20_mult_x_im3_q, lowRangeB_uid820_i_arrayidx24_conv20_mult_x_im3_b};

    // sR_bottomRange_uid827_i_arrayidx24_conv20_mult_x_im3(BITSELECT,826)@27
    assign sR_bottomRange_uid827_i_arrayidx24_conv20_mult_x_im3_in = a_subconst_49_uid823_i_arrayidx24_conv20_mult_x_im3_q[23:0];
    assign sR_bottomRange_uid827_i_arrayidx24_conv20_mult_x_im3_b = sR_bottomRange_uid827_i_arrayidx24_conv20_mult_x_im3_in[23:0];

    // redist43_sR_bottomRange_uid827_i_arrayidx24_conv20_mult_x_im3_b_1_0(REG,2224)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist43_sR_bottomRange_uid827_i_arrayidx24_conv20_mult_x_im3_b_1_0_q <= $unsigned(24'b000000000000000000000000);
        end
        else if (SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_backEN == 1'b1)
        begin
            redist43_sR_bottomRange_uid827_i_arrayidx24_conv20_mult_x_im3_b_1_0_q <= $unsigned(sR_bottomRange_uid827_i_arrayidx24_conv20_mult_x_im3_b);
        end
    end

    // sR_mergedSignalTM_uid828_i_arrayidx24_conv20_mult_x_im3(BITJOIN,827)@28
    assign sR_mergedSignalTM_uid828_i_arrayidx24_conv20_mult_x_im3_q = {redist43_sR_bottomRange_uid827_i_arrayidx24_conv20_mult_x_im3_b_1_0_q, sR_bottomExtension_uid757_i_arrayidx24_conv20_mult_x_im0_q};

    // i_arrayidx24_conv20_mult_x_sums_align_2(BITSHIFT,421)@28
    assign i_arrayidx24_conv20_mult_x_sums_align_2_qint = { sR_mergedSignalTM_uid828_i_arrayidx24_conv20_mult_x_im3_q, 18'b000000000000000000 };
    assign i_arrayidx24_conv20_mult_x_sums_align_2_q = i_arrayidx24_conv20_mult_x_sums_align_2_qint[45:0];

    // i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b(BITJOIN,1994)@28
    assign i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b_q = {i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_b, i_arrayidx24_conv20_mult_x_sums_align_2_q};

    // highBBits_uid752_i_arrayidx24_conv20_mult_x_im0(BITSELECT,751)@27
    assign highBBits_uid752_i_arrayidx24_conv20_mult_x_im0_b = sel_for_coalesced_delay_5_b[17:4];

    // a_subconst_49_sumAHighB_uid753_i_arrayidx24_conv20_mult_x_im0(ADD,752)@27
    assign a_subconst_49_sumAHighB_uid753_i_arrayidx24_conv20_mult_x_im0_a = {1'b0, add_uid749_i_arrayidx24_conv20_mult_x_im0_q};
    assign a_subconst_49_sumAHighB_uid753_i_arrayidx24_conv20_mult_x_im0_b = {7'b0000000, highBBits_uid752_i_arrayidx24_conv20_mult_x_im0_b};
    assign a_subconst_49_sumAHighB_uid753_i_arrayidx24_conv20_mult_x_im0_o = $unsigned(a_subconst_49_sumAHighB_uid753_i_arrayidx24_conv20_mult_x_im0_a) + $unsigned(a_subconst_49_sumAHighB_uid753_i_arrayidx24_conv20_mult_x_im0_b);
    assign a_subconst_49_sumAHighB_uid753_i_arrayidx24_conv20_mult_x_im0_q = a_subconst_49_sumAHighB_uid753_i_arrayidx24_conv20_mult_x_im0_o[20:0];

    // i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2(BITSELECT,1986)@27
    assign i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b = $unsigned(a_subconst_49_sumAHighB_uid753_i_arrayidx24_conv20_mult_x_im0_q[19:0]);

    // redist22_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0(REG,2203)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist22_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_q <= $unsigned(20'b00000000000000000000);
        end
        else if (SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_backEN == 1'b1)
        begin
            redist22_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_q <= $unsigned(i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b);
        end
    end

    // i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1(BITSELECT,1985)@28
    assign i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b = $unsigned(redist53_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_2_1_q[3:0]);

    // i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b(BITJOIN,1988)@28
    assign i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b_q = {i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_b, redist22_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_q, i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_1_b, sR_bottomExtension_uid757_i_arrayidx24_conv20_mult_x_im0_q};

    // redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo(STALLFIFO,2237)
    assign redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_valid_in = SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_V0;
    assign redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_stall_in = SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_backStall;
    assign redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_data_in = redist53_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_2_1_q;
    assign redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_valid_in_bitsignaltemp = redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_valid_in[0];
    assign redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_stall_in_bitsignaltemp = redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_stall_in[0];
    assign redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_valid_out[0] = redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_valid_out_bitsignaltemp;
    assign redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_stall_out[0] = redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(73),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(32),
        .IMPL("ram")
    ) theredist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo (
        .valid_in(redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_valid_in_bitsignaltemp),
        .stall_in(redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_stall_in_bitsignaltemp),
        .data_in(redist53_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_2_1_q),
        .valid_out(redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_valid_out_bitsignaltemp),
        .stall_out(redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_stall_out_bitsignaltemp),
        .data_out(redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0(STALLENABLE,2984)
    // Valid signal propagation
    assign SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_V0 = SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_R_v_0;
    assign SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_V1 = SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_R_v_1;
    // Stall signal propagation
    assign SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_s_tv_0 = redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_stall_out & SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_R_v_0;
    assign SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_s_tv_1 = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_backStall & SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_R_v_1;
    // Backward Enable generation
    assign SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_or0 = SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_s_tv_0;
    assign SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_backEN = ~ (SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_s_tv_1 | SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_or0);
    // Determine whether to write valid data into the first register stage
    assign SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_v_s_0 = SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_backEN & SE_addsumAHighB_uid748_i_arrayidx24_conv20_mult_x_im0_V0;
    // Backward Stall generation
    assign SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_backStall = ~ (SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_v_s_0);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_R_v_0 <= 1'b0;
            SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_R_v_1 <= 1'b0;
        end
        else
        begin
            if (SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_backEN == 1'b0)
            begin
                SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_R_v_0 <= SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_R_v_0 & SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_s_tv_0;
            end
            else
            begin
                SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_R_v_0 <= SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_v_s_0;
            end

            if (SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_backEN == 1'b0)
            begin
                SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_R_v_1 <= SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_R_v_1 & SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_s_tv_1;
            end
            else
            begin
                SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_R_v_1 <= SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_v_s_0;
            end

        end
    end

    // SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2(STALLREG,3441)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data0 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data1 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data2 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data3 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data4 <= 19'bxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data5 <= 22'bxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data6 <= 9'bxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data7 <= 12'bxxxxxxxxxxxx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid <= SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_backStall & (SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid | SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_i_valid);

            if (SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data0 <= $unsigned(i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b_q);
                SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data1 <= $unsigned(i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b_q);
                SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data2 <= $unsigned(i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b_q);
                SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data3 <= $unsigned(i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b_q);
                SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data4 <= $unsigned(i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c);
                SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data5 <= $unsigned(i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c);
                SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data6 <= $unsigned(i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c);
                SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data7 <= $unsigned(i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_i_valid = SE_redist21_i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_2_b_1_0_V1;
    // Stall signal propagation
    assign SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_backStall = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid | ~ (SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_V = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid : SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D0 = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data0 : i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b_q;
    // Data1
    assign SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D1 = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data1 : i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b_q;
    // Data2
    assign SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D2 = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data2 : i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b_q;
    // Data3
    assign SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D3 = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data3 : i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b_q;
    // Data4
    assign SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D4 = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data4 : i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c;
    // Data5
    assign SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D5 = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data5 : i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c;
    // Data6
    assign SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D6 = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data6 : i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c;
    // Data7
    assign SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D7 = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data7 : i_arrayidx24_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_merged_bit_select_c;

    // i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2(ADD,1876)@28 + 1
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_a = {1'b0, SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D2};
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_b = {1'b0, SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_D3};
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_o <= 53'b0;
        end
        else if (SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b1)
        begin
            i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_o <= $unsigned(i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_a) + $unsigned(i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_b);
        end
    end
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_c[0] = i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_o[52];
    assign i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_q = i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_o[51:0];

    // SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2(STALLENABLE,2868)
    // Valid signal propagation
    assign SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_V0 = SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_0;
    assign SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_V1 = SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_1;
    assign SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_V2 = SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_2;
    // Stall signal propagation
    assign SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_s_tv_0 = SR_SE_i_arrayidx24_conv20_add_x_p1_of_2_backStall & SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_0;
    assign SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_s_tv_1 = SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p2_of_2_backStall & SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_1;
    assign SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_s_tv_2 = SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_backStall & SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_2;
    // Backward Enable generation
    assign SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_or0 = SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_s_tv_0;
    assign SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_or1 = SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_s_tv_1 | SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_or0;
    assign SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN = ~ (SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_s_tv_2 | SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_or1);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_v_s_0 = SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN & SR_SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_backStall = ~ (SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_0 <= 1'b0;
            SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_1 <= 1'b0;
            SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_2 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_0 <= SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_0 & SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_0 <= SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_v_s_0;
            end

            if (SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_1 <= SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_1 & SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_s_tv_1;
            end
            else
            begin
                SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_1 <= SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_v_s_0;
            end

            if (SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_2 <= SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_2 & SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_s_tv_2;
            end
            else
            begin
                SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_2 <= SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_v_s_0;
            end

        end
    end

    // SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2(STALLENABLE,2857)
    // Valid signal propagation
    assign SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_V0 = SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_R_v_0;
    assign SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_V1 = SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_R_v_1;
    // Stall signal propagation
    assign SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_s_tv_0 = SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_backStall & SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_R_v_0;
    assign SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_s_tv_1 = SR_SE_i_arrayidx32_conv20_dupName_1_add_x_p1_of_2_backStall & SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_R_v_1;
    // Backward Enable generation
    assign SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_or0 = SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_s_tv_0;
    assign SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_backEN = ~ (SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_s_tv_1 | SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_or0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_v_s_0 = SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_backEN & SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_backStall = ~ (SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_R_v_0 <= 1'b0;
            SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_R_v_1 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_R_v_0 <= SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_R_v_0 & SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_R_v_0 <= SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_v_s_0;
            end

            if (SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_R_v_1 <= SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_R_v_1 & SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_s_tv_1;
            end
            else
            begin
                SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_R_v_1 <= SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_v_s_0;
            end

        end
    end

    // SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2(STALLREG,3442)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_r_data0 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_r_data1 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_r_valid <= SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_backStall & (SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_r_valid | SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_i_valid);

            if (SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_r_data0 <= $unsigned(i_arrayidx32_conv20_add_x_p1_of_2_q);
                SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_r_data1 <= $unsigned(i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_q);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_and0 = SE_i_arrayidx32_conv20_add_x_p1_of_2_V0;
    assign SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_i_valid = SE_i_arrayidx24_conv20_mult_x_sums_result_add_0_0_p1_of_2_V2 & SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_and0;
    // Stall signal propagation
    assign SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_backStall = SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_r_valid | ~ (SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_V = SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_r_valid : SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_D0 = SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_r_data0 : i_arrayidx32_conv20_add_x_p1_of_2_q;
    // Data1
    assign SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_D1 = SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_r_data1 : i_arrayidx32_conv20_dupName_0_mult_x_sums_result_add_0_0_p1_of_2_q;

    // SE_i_arrayidx32_conv20_add_x_p1_of_2(STALLENABLE,2864)
    // Valid signal propagation
    assign SE_i_arrayidx32_conv20_add_x_p1_of_2_V0 = SE_i_arrayidx32_conv20_add_x_p1_of_2_R_v_0;
    assign SE_i_arrayidx32_conv20_add_x_p1_of_2_V1 = SE_i_arrayidx32_conv20_add_x_p1_of_2_R_v_1;
    // Stall signal propagation
    assign SE_i_arrayidx32_conv20_add_x_p1_of_2_s_tv_0 = SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p1_of_2_backStall & SE_i_arrayidx32_conv20_add_x_p1_of_2_R_v_0;
    assign SE_i_arrayidx32_conv20_add_x_p1_of_2_s_tv_1 = SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_backStall & SE_i_arrayidx32_conv20_add_x_p1_of_2_R_v_1;
    // Backward Enable generation
    assign SE_i_arrayidx32_conv20_add_x_p1_of_2_or0 = SE_i_arrayidx32_conv20_add_x_p1_of_2_s_tv_0;
    assign SE_i_arrayidx32_conv20_add_x_p1_of_2_backEN = ~ (SE_i_arrayidx32_conv20_add_x_p1_of_2_s_tv_1 | SE_i_arrayidx32_conv20_add_x_p1_of_2_or0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx32_conv20_add_x_p1_of_2_v_s_0 = SE_i_arrayidx32_conv20_add_x_p1_of_2_backEN & SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx32_conv20_add_x_p1_of_2_backStall = ~ (SE_i_arrayidx32_conv20_add_x_p1_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx32_conv20_add_x_p1_of_2_R_v_0 <= 1'b0;
            SE_i_arrayidx32_conv20_add_x_p1_of_2_R_v_1 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx32_conv20_add_x_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx32_conv20_add_x_p1_of_2_R_v_0 <= SE_i_arrayidx32_conv20_add_x_p1_of_2_R_v_0 & SE_i_arrayidx32_conv20_add_x_p1_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx32_conv20_add_x_p1_of_2_R_v_0 <= SE_i_arrayidx32_conv20_add_x_p1_of_2_v_s_0;
            end

            if (SE_i_arrayidx32_conv20_add_x_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx32_conv20_add_x_p1_of_2_R_v_1 <= SE_i_arrayidx32_conv20_add_x_p1_of_2_R_v_1 & SE_i_arrayidx32_conv20_add_x_p1_of_2_s_tv_1;
            end
            else
            begin
                SE_i_arrayidx32_conv20_add_x_p1_of_2_R_v_1 <= SE_i_arrayidx32_conv20_add_x_p1_of_2_v_s_0;
            end

        end
    end

    // SE_i_arrayidx32_conv20_add_x_p2_of_2(STALLENABLE,2865)
    // Valid signal propagation
    assign SE_i_arrayidx32_conv20_add_x_p2_of_2_V0 = SE_i_arrayidx32_conv20_add_x_p2_of_2_R_v_0;
    // Stall signal propagation
    assign SE_i_arrayidx32_conv20_add_x_p2_of_2_s_tv_0 = SR_SE_i_arrayidx32_conv20_dupName_0_add_x_p2_of_2_backStall & SE_i_arrayidx32_conv20_add_x_p2_of_2_R_v_0;
    // Backward Enable generation
    assign SE_i_arrayidx32_conv20_add_x_p2_of_2_backEN = ~ (SE_i_arrayidx32_conv20_add_x_p2_of_2_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx32_conv20_add_x_p2_of_2_v_s_0 = SE_i_arrayidx32_conv20_add_x_p2_of_2_backEN & SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx32_conv20_add_x_p2_of_2_backStall = ~ (SE_i_arrayidx32_conv20_add_x_p2_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx32_conv20_add_x_p2_of_2_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx32_conv20_add_x_p2_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx32_conv20_add_x_p2_of_2_R_v_0 <= SE_i_arrayidx32_conv20_add_x_p2_of_2_R_v_0 & SE_i_arrayidx32_conv20_add_x_p2_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx32_conv20_add_x_p2_of_2_R_v_0 <= SE_i_arrayidx32_conv20_add_x_p2_of_2_v_s_0;
            end

        end
    end

    // SR_SE_i_arrayidx32_conv20_add_x_p2_of_2(STALLREG,3447)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_data0 <= 13'bxxxxxxxxxxxxx;
            SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_data1 <= 13'bxxxxxxxxxxxxx;
            SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_data2 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_valid <= SE_i_arrayidx32_conv20_add_x_p2_of_2_backStall & (SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_valid | SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_i_valid);

            if (SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_data0 <= $unsigned(i_arrayidx32_conv20_add_x_BitSelect_for_a_BitJoin_for_c_q);
                SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_data1 <= $unsigned(i_arrayidx32_conv20_add_x_BitSelect_for_b_BitJoin_for_c_q);
                SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_data2 <= $unsigned(i_arrayidx32_conv20_add_x_p1_of_2_c);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_and0 = SE_i_arrayidx32_conv20_add_x_p1_of_2_V1;
    assign SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_and1 = SE_redist13_i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_c_1_0_V0 & SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_and0;
    assign SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_i_valid = SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_V0 & SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_and1;
    // Stall signal propagation
    assign SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_backStall = SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_valid | ~ (SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_V = SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_valid : SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_D0 = SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_data0 : i_arrayidx32_conv20_add_x_BitSelect_for_a_BitJoin_for_c_q;
    // Data1
    assign SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_D1 = SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_data1 : i_arrayidx32_conv20_add_x_BitSelect_for_b_BitJoin_for_c_q;
    // Data2
    assign SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_D2 = SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_r_data2 : i_arrayidx32_conv20_add_x_p1_of_2_c;

    // SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2(STALLENABLE,2875)
    // Valid signal propagation
    assign SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_V0 = SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_0;
    // Stall signal propagation
    assign SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_s_tv_0 = SR_SE_i_arrayidx32_conv20_add_x_p2_of_2_backStall & SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_0;
    // Backward Enable generation
    assign SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_backEN = ~ (SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_v_s_0 = SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_backEN & SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_backStall = ~ (SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_0 <= SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_0 & SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_R_v_0 <= SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_v_s_0;
            end

        end
    end

    // SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2(STALLREG,3446)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data0 <= 23'bxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data1 <= 23'bxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data2 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid <= SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_backStall & (SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid | SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_i_valid);

            if (SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data0 <= $unsigned(i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c_q);
                SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data1 <= $unsigned(i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c_q);
                SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data2 <= $unsigned(i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_c);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_i_valid = SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_V1;
    // Stall signal propagation
    assign SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_backStall = SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid | ~ (SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_V = SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid : SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_D0 = SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data0 : i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_c_q;
    // Data1
    assign SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_D1 = SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data1 : i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_c_q;
    // Data2
    assign SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_D2 = SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_r_data2 : i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_c;

    // SR_SE_i_arrayidx32_conv20_add_x_p1_of_2(STALLREG,3440)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_r_data0 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_r_data1 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_r_valid <= SE_i_arrayidx32_conv20_add_x_p1_of_2_backStall & (SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_r_valid | SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_i_valid);

            if (SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_r_data0 <= $unsigned(i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_b);
                SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_r_data1 <= $unsigned(i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_q);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_and0 = SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_V0;
    assign SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_i_valid = SE_out_i_llvm_fpga_ffwd_dest_p1024a6a5a5f32_kernel4133_conv21_V0 & SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_and0;
    // Stall signal propagation
    assign SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_backStall = SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_r_valid | ~ (SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_V = SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_r_valid : SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_D0 = SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_r_data0 : i_arrayidx32_conv20_add_x_BitSelect_for_a_tessel0_0_merged_bit_select_b;
    // Data1
    assign SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_D1 = SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_r_data1 : i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_q;

    // SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2(STALLENABLE,2874)
    // Valid signal propagation
    assign SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_V0 = SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_0;
    assign SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_V1 = SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_1;
    // Stall signal propagation
    assign SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_s_tv_0 = SR_SE_i_arrayidx32_conv20_add_x_p1_of_2_backStall & SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_0;
    assign SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_s_tv_1 = SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p2_of_2_backStall & SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_1;
    // Backward Enable generation
    assign SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_or0 = SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_s_tv_0;
    assign SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN = ~ (SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_s_tv_1 | SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_or0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_v_s_0 = SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN & SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_V;
    // Backward Stall generation
    assign SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_backStall = ~ (SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_0 <= 1'b0;
            SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_1 <= 1'b0;
        end
        else
        begin
            if (SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_0 <= SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_0 & SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_s_tv_0;
            end
            else
            begin
                SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_0 <= SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_v_s_0;
            end

            if (SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_backEN == 1'b0)
            begin
                SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_1 <= SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_1 & SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_s_tv_1;
            end
            else
            begin
                SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_R_v_1 <= SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_v_s_0;
            end

        end
    end

    // SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2(STALLREG,3439)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid <= 1'b0;
            SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data0 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data1 <= 52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data2 <= 22'bxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data3 <= 12'bxxxxxxxxxxxx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid <= SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_backStall & (SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid | SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_i_valid);

            if (SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data0 <= $unsigned(i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b_q);
                SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data1 <= $unsigned(i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b_q);
                SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data2 <= $unsigned(i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c);
                SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data3 <= $unsigned(i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_4_merged_bit_select_c);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_i_valid = SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_V1;
    // Stall signal propagation
    assign SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_backStall = SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid | ~ (SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_i_valid);

    // Valid
    assign SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_V = SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid : SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_i_valid;

    // Data0
    assign SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_D0 = SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data0 : i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_BitJoin_for_b_q;
    // Data1
    assign SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_D1 = SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data1 : i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_BitJoin_for_b_q;
    // Data2
    assign SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_D2 = SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data2 : i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_b_tessel0_1_merged_bit_select_c;
    // Data3
    assign SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_D3 = SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_valid == 1'b1 ? SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_r_data3 : i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_4_merged_bit_select_c;

    // redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo(STALLFIFO,2233)
    assign redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_valid_in = SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_V0;
    assign redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_stall_in = SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_backStall;
    assign redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_data_in = redist50_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_2_1_q;
    assign redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_valid_in_bitsignaltemp = redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_valid_in[0];
    assign redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_stall_in_bitsignaltemp = redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_stall_in[0];
    assign redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_valid_out[0] = redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_valid_out_bitsignaltemp;
    assign redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_stall_out[0] = redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(74),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(64),
        .IMPL("ram")
    ) theredist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo (
        .valid_in(redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_valid_in_bitsignaltemp),
        .stall_in(redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_stall_in_bitsignaltemp),
        .data_in(redist50_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_2_1_q),
        .valid_out(redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_valid_out_bitsignaltemp),
        .stall_out(redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_stall_out_bitsignaltemp),
        .data_out(redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0(STALLENABLE,2981)
    // Valid signal propagation
    assign SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_V0 = SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_R_v_0;
    assign SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_V1 = SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_R_v_1;
    // Stall signal propagation
    assign SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_s_tv_0 = redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_stall_out & SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_R_v_0;
    assign SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_s_tv_1 = SR_SE_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_p1_of_2_backStall & SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_R_v_1;
    // Backward Enable generation
    assign SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_or0 = SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_s_tv_0;
    assign SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_backEN = ~ (SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_s_tv_1 | SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_or0);
    // Determine whether to write valid data into the first register stage
    assign SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_v_s_0 = SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_backEN & SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_V0;
    // Backward Stall generation
    assign SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_backStall = ~ (SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_v_s_0);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_R_v_0 <= 1'b0;
            SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_R_v_1 <= 1'b0;
        end
        else
        begin
            if (SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_backEN == 1'b0)
            begin
                SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_R_v_0 <= SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_R_v_0 & SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_s_tv_0;
            end
            else
            begin
                SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_R_v_0 <= SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_v_s_0;
            end

            if (SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_backEN == 1'b0)
            begin
                SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_R_v_1 <= SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_R_v_1 & SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_s_tv_1;
            end
            else
            begin
                SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_R_v_1 <= SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_v_s_0;
            end

        end
    end

    // SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0(STALLENABLE,2810)
    // Valid signal propagation
    assign SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_V0 = SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_R_v_0;
    // Stall signal propagation
    assign SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_s_tv_0 = SE_redist19_i_arrayidx32_conv20_mult_x_sums_result_add_0_0_BitSelect_for_a_tessel0_3_b_1_0_backStall & SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_R_v_0;
    // Backward Enable generation
    assign SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN = ~ (SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_v_s_0 = SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN & SE_out_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_V0;
    // Backward Stall generation
    assign SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backStall = ~ (SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_v_s_0);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backEN == 1'b0)
            begin
                SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_R_v_0 <= SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_R_v_0 & SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_s_tv_0;
            end
            else
            begin
                SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_R_v_0 <= SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_v_s_0;
            end

        end
    end

    // SE_out_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223(STALLENABLE,2609)
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_V0 = SE_out_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_wireValid;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_backStall = SE_addsumAHighB_uid1501_i_arrayidx32_conv20_mult_x_im0_backStall | ~ (SE_out_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_wireValid = i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_valid_out;

    // SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo(STALLENABLE,3019)
    // Valid signal propagation
    assign SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_V0 = SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_wireValid;
    // Backward Stall generation
    assign SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_backStall = i_llvm_fpga_push_i64_idxprom25107_push90_conv260_out_stall_out | ~ (SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_wireValid = SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_V;

    // SE_out_i_llvm_fpga_push_i64_idxprom25107_push90_conv260(STALLENABLE,2673)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i64_idxprom25107_push90_conv260_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i64_idxprom25107_push90_conv260_wireValid = i_llvm_fpga_push_i64_idxprom25107_push90_conv260_out_valid_out;

    // i_llvm_fpga_push_i64_idxprom25107_push90_conv260(BLACKBOX,206)@100
    // in in_stall_in@20000000
    // out out_data_out@101
    // out out_feedback_out_90@20000000
    // out out_feedback_valid_out_90@20000000
    // out out_stall_out@20000000
    // out out_valid_out@101
    conv2_i_llvm_fpga_push_i64_idxprom25107_push90_0 thei_llvm_fpga_push_i64_idxprom25107_push90_conv260 (
        .in_data_in(SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_D0),
        .in_feedback_stall_in_90(i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_feedback_stall_out_90),
        .in_keep_going(SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i64_idxprom25107_push90_conv260_backStall),
        .in_valid_in(SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_V0),
        .out_data_out(),
        .out_feedback_out_90(i_llvm_fpga_push_i64_idxprom25107_push90_conv260_out_feedback_out_90),
        .out_feedback_valid_out_90(i_llvm_fpga_push_i64_idxprom25107_push90_conv260_out_feedback_valid_out_90),
        .out_stall_out(i_llvm_fpga_push_i64_idxprom25107_push90_conv260_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i64_idxprom25107_push90_conv260_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223(BLACKBOX,174)@24
    // in in_stall_in@20000000
    // out out_data_out@25
    // out out_feedback_stall_out_90@20000000
    // out out_stall_out@20000000
    // out out_valid_out@25
    conv2_i_llvm_fpga_pop_i64_idxprom25107_pop90_0 thei_llvm_fpga_pop_i64_idxprom25107_pop90_conv223 (
        .in_data_in(SR_SE_out_coalesced_delay_0_fifo_D0),
        .in_dir(SR_SE_out_coalesced_delay_0_fifo_D1),
        .in_feedback_in_90(i_llvm_fpga_push_i64_idxprom25107_push90_conv260_out_feedback_out_90),
        .in_feedback_valid_in_90(i_llvm_fpga_push_i64_idxprom25107_push90_conv260_out_feedback_valid_out_90),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_backStall),
        .in_valid_in(SE_out_coalesced_delay_0_fifo_V1),
        .out_data_out(i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out),
        .out_feedback_stall_out_90(i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_feedback_stall_out_90),
        .out_stall_out(i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0(STALLREG,3428)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_r_valid <= 1'b0;
            SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_r_data0 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_r_valid <= SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_backStall & (SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_r_valid | SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_i_valid);

            if (SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_r_data0 <= $unsigned(SR_SE_out_coalesced_delay_0_fifo_D2);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_i_valid = SE_out_coalesced_delay_0_fifo_V0;
    // Stall signal propagation
    assign SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_backStall = SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_r_valid | ~ (SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_i_valid);

    // Valid
    assign SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_V = SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_r_valid == 1'b1 ? SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_r_valid : SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_i_valid;

    assign SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_D0 = SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_r_valid == 1'b1 ? SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_r_data0 : SR_SE_out_coalesced_delay_0_fifo_D2;

    // SE_out_coalesced_delay_0_fifo(STALLENABLE,3081)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_coalesced_delay_0_fifo_fromReg0 <= '0;
            SE_out_coalesced_delay_0_fifo_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_coalesced_delay_0_fifo_fromReg0 <= SE_out_coalesced_delay_0_fifo_toReg0;
            // Successor 1
            SE_out_coalesced_delay_0_fifo_fromReg1 <= SE_out_coalesced_delay_0_fifo_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_coalesced_delay_0_fifo_consumed0 = (~ (SR_SE_redist74_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_24_0_backStall) & SE_out_coalesced_delay_0_fifo_wireValid) | SE_out_coalesced_delay_0_fifo_fromReg0;
    assign SE_out_coalesced_delay_0_fifo_consumed1 = (~ (i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_stall_out) & SE_out_coalesced_delay_0_fifo_wireValid) | SE_out_coalesced_delay_0_fifo_fromReg1;
    // Consuming
    assign SE_out_coalesced_delay_0_fifo_StallValid = SE_out_coalesced_delay_0_fifo_backStall & SE_out_coalesced_delay_0_fifo_wireValid;
    assign SE_out_coalesced_delay_0_fifo_toReg0 = SE_out_coalesced_delay_0_fifo_StallValid & SE_out_coalesced_delay_0_fifo_consumed0;
    assign SE_out_coalesced_delay_0_fifo_toReg1 = SE_out_coalesced_delay_0_fifo_StallValid & SE_out_coalesced_delay_0_fifo_consumed1;
    // Backward Stall generation
    assign SE_out_coalesced_delay_0_fifo_or0 = SE_out_coalesced_delay_0_fifo_consumed0;
    assign SE_out_coalesced_delay_0_fifo_wireStall = ~ (SE_out_coalesced_delay_0_fifo_consumed1 & SE_out_coalesced_delay_0_fifo_or0);
    assign SE_out_coalesced_delay_0_fifo_backStall = SE_out_coalesced_delay_0_fifo_wireStall;
    // Valid signal propagation
    assign SE_out_coalesced_delay_0_fifo_V0 = SE_out_coalesced_delay_0_fifo_wireValid & ~ (SE_out_coalesced_delay_0_fifo_fromReg0);
    assign SE_out_coalesced_delay_0_fifo_V1 = SE_out_coalesced_delay_0_fifo_wireValid & ~ (SE_out_coalesced_delay_0_fifo_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_coalesced_delay_0_fifo_wireValid = SR_SE_out_coalesced_delay_0_fifo_V;

    // SR_SE_out_coalesced_delay_0_fifo(STALLREG,3427)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_coalesced_delay_0_fifo_r_valid <= 1'b0;
            SR_SE_out_coalesced_delay_0_fifo_r_data0 <= 64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_out_coalesced_delay_0_fifo_r_data1 <= 1'bx;
            SR_SE_out_coalesced_delay_0_fifo_r_data2 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_out_coalesced_delay_0_fifo_r_valid <= SE_out_coalesced_delay_0_fifo_backStall & (SR_SE_out_coalesced_delay_0_fifo_r_valid | SR_SE_out_coalesced_delay_0_fifo_i_valid);

            if (SR_SE_out_coalesced_delay_0_fifo_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_coalesced_delay_0_fifo_r_data0 <= $unsigned(sel_for_coalesced_delay_0_b);
                SR_SE_out_coalesced_delay_0_fifo_r_data1 <= $unsigned(sel_for_coalesced_delay_0_c);
                SR_SE_out_coalesced_delay_0_fifo_r_data2 <= $unsigned(sel_for_coalesced_delay_0_c);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_coalesced_delay_0_fifo_i_valid = coalesced_delay_0_fifo_valid_out;
    // Stall signal propagation
    assign SR_SE_out_coalesced_delay_0_fifo_backStall = SR_SE_out_coalesced_delay_0_fifo_r_valid | ~ (SR_SE_out_coalesced_delay_0_fifo_i_valid);

    // Valid
    assign SR_SE_out_coalesced_delay_0_fifo_V = SR_SE_out_coalesced_delay_0_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_0_fifo_r_valid : SR_SE_out_coalesced_delay_0_fifo_i_valid;

    // Data0
    assign SR_SE_out_coalesced_delay_0_fifo_D0 = SR_SE_out_coalesced_delay_0_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_0_fifo_r_data0 : sel_for_coalesced_delay_0_b;
    // Data1
    assign SR_SE_out_coalesced_delay_0_fifo_D1 = SR_SE_out_coalesced_delay_0_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_0_fifo_r_data1 : sel_for_coalesced_delay_0_c;
    // Data2
    assign SR_SE_out_coalesced_delay_0_fifo_D2 = SR_SE_out_coalesced_delay_0_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_0_fifo_r_data2 : sel_for_coalesced_delay_0_c;

    // coalesced_delay_0_fifo(STALLFIFO,2270)
    assign coalesced_delay_0_fifo_valid_in = SE_out_conv2_B7_merge_reg_aunroll_x_V9;
    assign coalesced_delay_0_fifo_stall_in = SR_SE_out_coalesced_delay_0_fifo_backStall;
    assign coalesced_delay_0_fifo_data_in = join_for_coalesced_delay_0_q;
    assign coalesced_delay_0_fifo_valid_in_bitsignaltemp = coalesced_delay_0_fifo_valid_in[0];
    assign coalesced_delay_0_fifo_stall_in_bitsignaltemp = coalesced_delay_0_fifo_stall_in[0];
    assign coalesced_delay_0_fifo_valid_out[0] = coalesced_delay_0_fifo_valid_out_bitsignaltemp;
    assign coalesced_delay_0_fifo_stall_out[0] = coalesced_delay_0_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(24),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(65),
        .IMPL("ram")
    ) thecoalesced_delay_0_fifo (
        .valid_in(coalesced_delay_0_fifo_valid_in_bitsignaltemp),
        .stall_in(coalesced_delay_0_fifo_stall_in_bitsignaltemp),
        .data_in(join_for_coalesced_delay_0_q),
        .valid_out(coalesced_delay_0_fifo_valid_out_bitsignaltemp),
        .stall_out(coalesced_delay_0_fifo_stall_out_bitsignaltemp),
        .data_out(coalesced_delay_0_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo(STALLFIFO,2269)
    assign redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_valid_in = SE_out_conv2_B7_merge_reg_aunroll_x_V8;
    assign redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_stall_in = SR_SE_out_redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_backStall;
    assign redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_data_in = bubble_select_conv2_B7_merge_reg_aunroll_x_t;
    assign redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_valid_in_bitsignaltemp = redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_valid_in[0];
    assign redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_stall_in_bitsignaltemp = redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_stall_in[0];
    assign redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_valid_out[0] = redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_valid_out_bitsignaltemp;
    assign redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_stall_out[0] = redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(29),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(32),
        .IMPL("ram")
    ) theredist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo (
        .valid_in(redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_valid_in_bitsignaltemp),
        .stall_in(redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_stall_in_bitsignaltemp),
        .data_in(bubble_select_conv2_B7_merge_reg_aunroll_x_t),
        .valid_out(redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_valid_out_bitsignaltemp),
        .stall_out(redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_stall_out_bitsignaltemp),
        .data_out(redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo(STALLFIFO,2268)
    assign redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_valid_in = SE_out_conv2_B7_merge_reg_aunroll_x_V7;
    assign redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_stall_in = SE_out_redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_backStall;
    assign redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_data_in = bubble_select_conv2_B7_merge_reg_aunroll_x_g;
    assign redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_valid_in_bitsignaltemp = redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_valid_in[0];
    assign redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_stall_in_bitsignaltemp = redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_stall_in[0];
    assign redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_valid_out[0] = redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_valid_out_bitsignaltemp;
    assign redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_stall_out[0] = redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(27),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(32),
        .IMPL("ram")
    ) theredist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo (
        .valid_in(redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_valid_in_bitsignaltemp),
        .stall_in(redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_stall_in_bitsignaltemp),
        .data_in(bubble_select_conv2_B7_merge_reg_aunroll_x_g),
        .valid_out(redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_valid_out_bitsignaltemp),
        .stall_out(redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_stall_out_bitsignaltemp),
        .data_out(redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo(STALLFIFO,2267)
    assign redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_valid_in = SE_out_conv2_B7_merge_reg_aunroll_x_V6;
    assign redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_stall_in = SE_out_redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_backStall;
    assign redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_data_in = bubble_select_conv2_B7_merge_reg_aunroll_x_e;
    assign redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_valid_in_bitsignaltemp = redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_valid_in[0];
    assign redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_stall_in_bitsignaltemp = redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_stall_in[0];
    assign redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_valid_out[0] = redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_valid_out_bitsignaltemp;
    assign redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_stall_out[0] = redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(30),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(32),
        .IMPL("ram")
    ) theredist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo (
        .valid_in(redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_valid_in_bitsignaltemp),
        .stall_in(redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_stall_in_bitsignaltemp),
        .data_in(bubble_select_conv2_B7_merge_reg_aunroll_x_e),
        .valid_out(redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_valid_out_bitsignaltemp),
        .stall_out(redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_stall_out_bitsignaltemp),
        .data_out(redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo(STALLFIFO,2266)
    assign redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_valid_in = SE_out_conv2_B7_merge_reg_aunroll_x_V5;
    assign redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_stall_in = SE_out_redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_backStall;
    assign redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_data_in = bubble_select_conv2_B7_merge_reg_aunroll_x_d;
    assign redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_valid_in_bitsignaltemp = redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_valid_in[0];
    assign redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_stall_in_bitsignaltemp = redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_stall_in[0];
    assign redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_valid_out[0] = redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_valid_out_bitsignaltemp;
    assign redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_stall_out[0] = redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(25),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(32),
        .IMPL("ram")
    ) theredist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo (
        .valid_in(redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_valid_in_bitsignaltemp),
        .stall_in(redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_stall_in_bitsignaltemp),
        .data_in(bubble_select_conv2_B7_merge_reg_aunroll_x_d),
        .valid_out(redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_valid_out_bitsignaltemp),
        .stall_out(redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_stall_out_bitsignaltemp),
        .data_out(redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo(STALLENABLE,3033)
    // Valid signal propagation
    assign SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_V0 = SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_wireValid;
    // Backward Stall generation
    assign SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_backStall = i_llvm_fpga_push_i32_i_035_pop56135_push101_conv241_out_stall_out | ~ (SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_wireValid = SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_V;

    // SE_out_i_llvm_fpga_push_i32_i_035_pop56135_push101_conv241(STALLENABLE,2661)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i32_i_035_pop56135_push101_conv241_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i32_i_035_pop56135_push101_conv241_wireValid = i_llvm_fpga_push_i32_i_035_pop56135_push101_conv241_out_valid_out;

    // i_llvm_fpga_push_i32_i_035_pop56135_push101_conv241(BLACKBOX,200)@100
    // in in_stall_in@20000000
    // out out_data_out@101
    // out out_feedback_out_101@20000000
    // out out_feedback_valid_out_101@20000000
    // out out_stall_out@20000000
    // out out_valid_out@101
    conv2_i_llvm_fpga_push_i32_i_035_pop56135_push101_0 thei_llvm_fpga_push_i32_i_035_pop56135_push101_conv241 (
        .in_data_in(SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_D0),
        .in_feedback_stall_in_101(i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_feedback_stall_out_101),
        .in_keep_going(SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i32_i_035_pop56135_push101_conv241_backStall),
        .in_valid_in(SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_V0),
        .out_data_out(),
        .out_feedback_out_101(i_llvm_fpga_push_i32_i_035_pop56135_push101_conv241_out_feedback_out_101),
        .out_feedback_valid_out_101(i_llvm_fpga_push_i32_i_035_pop56135_push101_conv241_out_feedback_valid_out_101),
        .out_stall_out(i_llvm_fpga_push_i32_i_035_pop56135_push101_conv241_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i32_i_035_pop56135_push101_conv241_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28(BLACKBOX,168)@1
    // in in_stall_in@20000000
    // out out_data_out@2
    // out out_feedback_stall_out_101@20000000
    // out out_stall_out@20000000
    // out out_valid_out@2
    conv2_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_0 thei_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28 (
        .in_data_in(bubble_select_conv2_B7_merge_reg_aunroll_x_c),
        .in_dir(bubble_select_conv2_B7_merge_reg_aunroll_x_b),
        .in_feedback_in_101(i_llvm_fpga_push_i32_i_035_pop56135_push101_conv241_out_feedback_out_101),
        .in_feedback_valid_in_101(i_llvm_fpga_push_i32_i_035_pop56135_push101_conv241_out_feedback_valid_out_101),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_backStall),
        .in_valid_in(SE_out_conv2_B7_merge_reg_aunroll_x_V4),
        .out_data_out(i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out),
        .out_feedback_stall_out_101(i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_feedback_stall_out_101),
        .out_stall_out(i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229(BITJOIN,2334)
    assign bubble_join_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_q = i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229(BITSELECT,2335)
    assign bubble_select_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_b = $unsigned(bubble_join_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_q[0:0]);

    // redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo(STALLFIFO,2249)
    assign redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_valid_in = SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_V1;
    assign redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_stall_in = SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_backStall;
    assign redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_data_in = bubble_select_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_b;
    assign redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_valid_in_bitsignaltemp = redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_valid_in[0];
    assign redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_stall_in_bitsignaltemp = redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_stall_in[0];
    assign redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_valid_out[0] = redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_valid_out_bitsignaltemp;
    assign redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_stall_out[0] = redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(69),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(1),
        .IMPL("ram")
    ) theredist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo (
        .valid_in(redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_valid_in_bitsignaltemp),
        .stall_in(redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_stall_in_bitsignaltemp),
        .data_in(bubble_select_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_b),
        .valid_out(redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_valid_out_bitsignaltemp),
        .stall_out(redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_stall_out_bitsignaltemp),
        .data_out(redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_i_reduction_conv2_1_conv268(STALLENABLE,2685)
    // Valid signal propagation
    assign SE_i_reduction_conv2_1_conv268_V0 = SE_i_reduction_conv2_1_conv268_wireValid;
    // Backward Stall generation
    assign SE_i_reduction_conv2_1_conv268_backStall = SE_i_reduction_conv2_2_conv284_backStall | ~ (SE_i_reduction_conv2_1_conv268_wireValid);
    // Computing multiple Valid(s)
    assign SE_i_reduction_conv2_1_conv268_and0 = SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_V0;
    assign SE_i_reduction_conv2_1_conv268_wireValid = SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_V0 & SE_i_reduction_conv2_1_conv268_and0;

    // SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo(STALLENABLE,3045)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_fromReg0 <= '0;
            SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_fromReg0 <= SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_toReg0;
            // Successor 1
            SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_fromReg1 <= SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_consumed0 = (~ (SE_i_reduction_conv2_1_conv268_backStall) & SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_wireValid) | SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_fromReg0;
    assign SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_consumed1 = (~ (redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_stall_out) & SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_wireValid) | SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_fromReg1;
    // Consuming
    assign SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_StallValid = SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_backStall & SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_wireValid;
    assign SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_toReg0 = SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_StallValid & SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_consumed0;
    assign SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_toReg1 = SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_StallValid & SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_consumed1;
    // Backward Stall generation
    assign SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_or0 = SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_consumed0;
    assign SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_wireStall = ~ (SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_consumed1 & SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_or0);
    assign SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_backStall = SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_wireStall;
    // Valid signal propagation
    assign SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_V0 = SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_wireValid & ~ (SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_fromReg0);
    assign SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_V1 = SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_wireValid & ~ (SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_wireValid = redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_valid_out;

    // redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo(STALLFIFO,2248)
    assign redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_valid_in = SE_out_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_V0;
    assign redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_stall_in = SE_out_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_backStall;
    assign redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_data_in = bubble_select_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_b;
    assign redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_valid_in_bitsignaltemp = redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_valid_in[0];
    assign redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_stall_in_bitsignaltemp = redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_stall_in[0];
    assign redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_valid_out[0] = redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_valid_out_bitsignaltemp;
    assign redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_stall_out[0] = redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(31),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(1),
        .IMPL("ram")
    ) theredist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo (
        .valid_in(redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_valid_in_bitsignaltemp),
        .stall_in(redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_stall_in_bitsignaltemp),
        .data_in(bubble_select_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_b),
        .valid_out(redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_valid_out_bitsignaltemp),
        .stall_out(redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_stall_out_bitsignaltemp),
        .data_out(redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229(STALLENABLE,2569)
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_V0 = SE_out_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_wireValid;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_backStall = redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_stall_out | ~ (SE_out_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_wireValid = i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_valid_out;

    // SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo(STALLENABLE,3047)
    // Valid signal propagation
    assign SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_V0 = SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_wireValid;
    // Backward Stall generation
    assign SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_backStall = i_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_conv267_out_stall_out | ~ (SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_wireValid = SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_V;

    // SE_out_i_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_conv267(STALLENABLE,2631)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_conv267_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_conv267_wireValid = i_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_conv267_out_valid_out;

    // i_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_conv267(BLACKBOX,185)@100
    // in in_stall_in@20000000
    // out out_data_out@101
    // out out_feedback_out_96@20000000
    // out out_feedback_valid_out_96@20000000
    // out out_stall_out@20000000
    // out out_valid_out@101
    conv2_i_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_0 thei_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_conv267 (
        .in_data_in(SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_D0),
        .in_feedback_stall_in_96(i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_feedback_stall_out_96),
        .in_keep_going(SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_conv267_backStall),
        .in_valid_in(SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_V0),
        .out_data_out(),
        .out_feedback_out_96(i_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_conv267_out_feedback_out_96),
        .out_feedback_valid_out_96(i_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_conv267_out_feedback_valid_out_96),
        .out_stall_out(i_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_conv267_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_conv267_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229(BLACKBOX,154)@1
    // in in_stall_in@20000000
    // out out_data_out@2
    // out out_feedback_stall_out_96@20000000
    // out out_stall_out@20000000
    // out out_valid_out@2
    conv2_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_0 thei_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229 (
        .in_data_in(bubble_select_conv2_B7_merge_reg_aunroll_x_x),
        .in_dir(bubble_select_conv2_B7_merge_reg_aunroll_x_b),
        .in_feedback_in_96(i_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_conv267_out_feedback_out_96),
        .in_feedback_valid_in_96(i_llvm_fpga_push_i1_memdep_phi4_pop28125_push96_conv267_out_feedback_valid_out_96),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_backStall),
        .in_valid_in(SE_out_conv2_B7_merge_reg_aunroll_x_V3),
        .out_data_out(i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out),
        .out_feedback_stall_out_96(i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_feedback_stall_out_96),
        .out_stall_out(i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg(STALLFIFO,3422)
    assign bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_valid_in = SE_out_conv2_B7_merge_reg_aunroll_x_V1;
    assign bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_stall_in = SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_2_backStall;
    assign bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_valid_in_bitsignaltemp = bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_valid_in[0];
    assign bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_stall_in_bitsignaltemp = bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_stall_in[0];
    assign bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_valid_out[0] = bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_valid_out_bitsignaltemp;
    assign bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_stall_out[0] = bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_stall_out_bitsignaltemp;
    acl_valid_fifo_counter #(
        .DEPTH(27),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .ASYNC_RESET(1)
    ) thebubble_out_conv2_B7_merge_reg_aunroll_x_2_reg (
        .valid_in(bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_valid_in_bitsignaltemp),
        .stall_in(bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_stall_in_bitsignaltemp),
        .valid_out(bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_valid_out_bitsignaltemp),
        .stall_out(bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_stall_out_bitsignaltemp),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg(STALLFIFO,3421)
    assign bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_valid_in = SE_out_conv2_B7_merge_reg_aunroll_x_V0;
    assign bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_stall_in = SE_out_bubble_out_conv2_B7_merge_reg_aunroll_x_1_backStall;
    assign bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_valid_in_bitsignaltemp = bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_valid_in[0];
    assign bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_stall_in_bitsignaltemp = bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_stall_in[0];
    assign bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_valid_out[0] = bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_valid_out_bitsignaltemp;
    assign bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_stall_out[0] = bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_stall_out_bitsignaltemp;
    acl_valid_fifo_counter #(
        .DEPTH(28),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .ASYNC_RESET(1)
    ) thebubble_out_conv2_B7_merge_reg_aunroll_x_1_reg (
        .valid_in(bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_valid_in_bitsignaltemp),
        .stall_in(bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_stall_in_bitsignaltemp),
        .valid_out(bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_valid_out_bitsignaltemp),
        .stall_out(bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_stall_out_bitsignaltemp),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_stall_entry(STALLENABLE,2691)
    // Valid signal propagation
    assign SE_stall_entry_V0 = SE_stall_entry_wireValid;
    // Backward Stall generation
    assign SE_stall_entry_backStall = conv2_B7_merge_reg_aunroll_x_out_stall_out | ~ (SE_stall_entry_wireValid);
    // Computing multiple Valid(s)
    assign SE_stall_entry_wireValid = in_valid_in;

    // bubble_join_stall_entry(BITJOIN,2412)
    assign bubble_join_stall_entry_q = {in_unnamed_conv27, in_row_038_pop2098_pop64366, in_notcmp5675_pop59372, in_notcmp5194_pop63376, in_notcmp46121_pop71383, in_notcmp41129_pop74386, in_notcmp36369, in_memdep_phi6_pop1885_pop61374, in_memdep_phi5_pop21102_pop65377, in_memdep_phi4_pop28124_pop72384, in_memdep_phi3_pop39133_pop76387, in_memdep_phi2_pop57370, in_k_036_pop38131_pop75365, in_idxprom25106_pop66378, in_i_035_pop56364, in_forked, in_exitcond3170_pop58371, in_exitcond2890_pop62375, in_exitcond25118_pop70382, in_exitcond22127_pop73385, in_exitcond19368, in_col_037_pop27112_pop68380, in_channel_039_pop1780_pop60373, in_arrayidx64115_pop69381, in_arrayidx34109_pop67379, in_add367};

    // bubble_select_stall_entry(BITSELECT,2413)
    assign bubble_select_stall_entry_b = $unsigned(bubble_join_stall_entry_q[31:0]);
    assign bubble_select_stall_entry_c = $unsigned(bubble_join_stall_entry_q[95:32]);
    assign bubble_select_stall_entry_d = $unsigned(bubble_join_stall_entry_q[159:96]);
    assign bubble_select_stall_entry_e = $unsigned(bubble_join_stall_entry_q[191:160]);
    assign bubble_select_stall_entry_f = $unsigned(bubble_join_stall_entry_q[223:192]);
    assign bubble_select_stall_entry_g = $unsigned(bubble_join_stall_entry_q[224:224]);
    assign bubble_select_stall_entry_h = $unsigned(bubble_join_stall_entry_q[225:225]);
    assign bubble_select_stall_entry_i = $unsigned(bubble_join_stall_entry_q[226:226]);
    assign bubble_select_stall_entry_j = $unsigned(bubble_join_stall_entry_q[227:227]);
    assign bubble_select_stall_entry_k = $unsigned(bubble_join_stall_entry_q[228:228]);
    assign bubble_select_stall_entry_l = $unsigned(bubble_join_stall_entry_q[229:229]);
    assign bubble_select_stall_entry_m = $unsigned(bubble_join_stall_entry_q[261:230]);
    assign bubble_select_stall_entry_n = $unsigned(bubble_join_stall_entry_q[325:262]);
    assign bubble_select_stall_entry_o = $unsigned(bubble_join_stall_entry_q[357:326]);
    assign bubble_select_stall_entry_p = $unsigned(bubble_join_stall_entry_q[358:358]);
    assign bubble_select_stall_entry_q = $unsigned(bubble_join_stall_entry_q[359:359]);
    assign bubble_select_stall_entry_r = $unsigned(bubble_join_stall_entry_q[360:360]);
    assign bubble_select_stall_entry_s = $unsigned(bubble_join_stall_entry_q[361:361]);
    assign bubble_select_stall_entry_t = $unsigned(bubble_join_stall_entry_q[362:362]);
    assign bubble_select_stall_entry_u = $unsigned(bubble_join_stall_entry_q[363:363]);
    assign bubble_select_stall_entry_v = $unsigned(bubble_join_stall_entry_q[364:364]);
    assign bubble_select_stall_entry_w = $unsigned(bubble_join_stall_entry_q[365:365]);
    assign bubble_select_stall_entry_x = $unsigned(bubble_join_stall_entry_q[366:366]);
    assign bubble_select_stall_entry_y = $unsigned(bubble_join_stall_entry_q[367:367]);
    assign bubble_select_stall_entry_z = $unsigned(bubble_join_stall_entry_q[399:368]);
    assign bubble_select_stall_entry_aa = $unsigned(bubble_join_stall_entry_q[431:400]);

    // conv2_B7_merge_reg_aunroll_x(BLACKBOX,7)@0
    // in in_stall_in@20000000
    // out out_data_out_0_tpl@1
    // out out_data_out_1_tpl@1
    // out out_data_out_2_tpl@1
    // out out_data_out_3_tpl@1
    // out out_data_out_4_tpl@1
    // out out_data_out_5_tpl@1
    // out out_data_out_6_tpl@1
    // out out_data_out_7_tpl@1
    // out out_data_out_8_tpl@1
    // out out_data_out_9_tpl@1
    // out out_data_out_10_tpl@1
    // out out_data_out_11_tpl@1
    // out out_data_out_12_tpl@1
    // out out_data_out_13_tpl@1
    // out out_data_out_14_tpl@1
    // out out_data_out_15_tpl@1
    // out out_data_out_16_tpl@1
    // out out_data_out_17_tpl@1
    // out out_data_out_18_tpl@1
    // out out_data_out_19_tpl@1
    // out out_data_out_20_tpl@1
    // out out_data_out_21_tpl@1
    // out out_data_out_22_tpl@1
    // out out_data_out_23_tpl@1
    // out out_data_out_24_tpl@1
    // out out_data_out_25_tpl@1
    // out out_stall_out@20000000
    // out out_valid_out@1
    conv2_B7_merge_reg theconv2_B7_merge_reg_aunroll_x (
        .in_data_in_0_tpl(bubble_select_stall_entry_l),
        .in_data_in_1_tpl(bubble_select_stall_entry_m),
        .in_data_in_2_tpl(bubble_select_stall_entry_o),
        .in_data_in_3_tpl(bubble_select_stall_entry_aa),
        .in_data_in_4_tpl(bubble_select_stall_entry_z),
        .in_data_in_5_tpl(bubble_select_stall_entry_b),
        .in_data_in_6_tpl(bubble_select_stall_entry_g),
        .in_data_in_7_tpl(bubble_select_stall_entry_u),
        .in_data_in_8_tpl(bubble_select_stall_entry_p),
        .in_data_in_9_tpl(bubble_select_stall_entry_k),
        .in_data_in_10_tpl(bubble_select_stall_entry_y),
        .in_data_in_11_tpl(bubble_select_stall_entry_e),
        .in_data_in_12_tpl(bubble_select_stall_entry_t),
        .in_data_in_13_tpl(bubble_select_stall_entry_j),
        .in_data_in_14_tpl(bubble_select_stall_entry_x),
        .in_data_in_15_tpl(bubble_select_stall_entry_s),
        .in_data_in_16_tpl(bubble_select_stall_entry_n),
        .in_data_in_17_tpl(bubble_select_stall_entry_c),
        .in_data_in_18_tpl(bubble_select_stall_entry_f),
        .in_data_in_19_tpl(bubble_select_stall_entry_d),
        .in_data_in_20_tpl(bubble_select_stall_entry_i),
        .in_data_in_21_tpl(bubble_select_stall_entry_w),
        .in_data_in_22_tpl(bubble_select_stall_entry_r),
        .in_data_in_23_tpl(bubble_select_stall_entry_h),
        .in_data_in_24_tpl(bubble_select_stall_entry_v),
        .in_data_in_25_tpl(bubble_select_stall_entry_q),
        .in_stall_in(SE_out_conv2_B7_merge_reg_aunroll_x_backStall),
        .in_valid_in(SE_stall_entry_V0),
        .out_data_out_0_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl),
        .out_data_out_1_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_1_tpl),
        .out_data_out_2_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl),
        .out_data_out_3_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl),
        .out_data_out_4_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_4_tpl),
        .out_data_out_5_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl),
        .out_data_out_6_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_6_tpl),
        .out_data_out_7_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_7_tpl),
        .out_data_out_8_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_8_tpl),
        .out_data_out_9_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_9_tpl),
        .out_data_out_10_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_10_tpl),
        .out_data_out_11_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_11_tpl),
        .out_data_out_12_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_12_tpl),
        .out_data_out_13_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_13_tpl),
        .out_data_out_14_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_14_tpl),
        .out_data_out_15_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_15_tpl),
        .out_data_out_16_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_16_tpl),
        .out_data_out_17_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_17_tpl),
        .out_data_out_18_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl),
        .out_data_out_19_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_19_tpl),
        .out_data_out_20_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_20_tpl),
        .out_data_out_21_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_21_tpl),
        .out_data_out_22_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_22_tpl),
        .out_data_out_23_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_23_tpl),
        .out_data_out_24_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_24_tpl),
        .out_data_out_25_tpl(conv2_B7_merge_reg_aunroll_x_out_data_out_25_tpl),
        .out_stall_out(conv2_B7_merge_reg_aunroll_x_out_stall_out),
        .out_valid_out(conv2_B7_merge_reg_aunroll_x_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_conv2_B7_merge_reg_aunroll_x(STALLENABLE,2517)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg0 <= '0;
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg1 <= '0;
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg2 <= '0;
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg3 <= '0;
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg4 <= '0;
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg5 <= '0;
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg6 <= '0;
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg7 <= '0;
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg8 <= '0;
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg9 <= '0;
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg10 <= '0;
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg11 <= '0;
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg12 <= '0;
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg13 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg0 <= SE_out_conv2_B7_merge_reg_aunroll_x_toReg0;
            // Successor 1
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg1 <= SE_out_conv2_B7_merge_reg_aunroll_x_toReg1;
            // Successor 2
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg2 <= SE_out_conv2_B7_merge_reg_aunroll_x_toReg2;
            // Successor 3
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg3 <= SE_out_conv2_B7_merge_reg_aunroll_x_toReg3;
            // Successor 4
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg4 <= SE_out_conv2_B7_merge_reg_aunroll_x_toReg4;
            // Successor 5
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg5 <= SE_out_conv2_B7_merge_reg_aunroll_x_toReg5;
            // Successor 6
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg6 <= SE_out_conv2_B7_merge_reg_aunroll_x_toReg6;
            // Successor 7
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg7 <= SE_out_conv2_B7_merge_reg_aunroll_x_toReg7;
            // Successor 8
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg8 <= SE_out_conv2_B7_merge_reg_aunroll_x_toReg8;
            // Successor 9
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg9 <= SE_out_conv2_B7_merge_reg_aunroll_x_toReg9;
            // Successor 10
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg10 <= SE_out_conv2_B7_merge_reg_aunroll_x_toReg10;
            // Successor 11
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg11 <= SE_out_conv2_B7_merge_reg_aunroll_x_toReg11;
            // Successor 12
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg12 <= SE_out_conv2_B7_merge_reg_aunroll_x_toReg12;
            // Successor 13
            SE_out_conv2_B7_merge_reg_aunroll_x_fromReg13 <= SE_out_conv2_B7_merge_reg_aunroll_x_toReg13;
        end
    end
    // Input Stall processing
    assign SE_out_conv2_B7_merge_reg_aunroll_x_consumed0 = (~ (bubble_out_conv2_B7_merge_reg_aunroll_x_1_reg_stall_out) & SE_out_conv2_B7_merge_reg_aunroll_x_wireValid) | SE_out_conv2_B7_merge_reg_aunroll_x_fromReg0;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_consumed1 = (~ (bubble_out_conv2_B7_merge_reg_aunroll_x_2_reg_stall_out) & SE_out_conv2_B7_merge_reg_aunroll_x_wireValid) | SE_out_conv2_B7_merge_reg_aunroll_x_fromReg1;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_consumed2 = (~ (i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_stall_out) & SE_out_conv2_B7_merge_reg_aunroll_x_wireValid) | SE_out_conv2_B7_merge_reg_aunroll_x_fromReg2;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_consumed3 = (~ (i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_stall_out) & SE_out_conv2_B7_merge_reg_aunroll_x_wireValid) | SE_out_conv2_B7_merge_reg_aunroll_x_fromReg3;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_consumed4 = (~ (i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_stall_out) & SE_out_conv2_B7_merge_reg_aunroll_x_wireValid) | SE_out_conv2_B7_merge_reg_aunroll_x_fromReg4;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_consumed5 = (~ (redist82_conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl_24_fifo_stall_out) & SE_out_conv2_B7_merge_reg_aunroll_x_wireValid) | SE_out_conv2_B7_merge_reg_aunroll_x_fromReg5;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_consumed6 = (~ (redist83_conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl_29_fifo_stall_out) & SE_out_conv2_B7_merge_reg_aunroll_x_wireValid) | SE_out_conv2_B7_merge_reg_aunroll_x_fromReg6;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_consumed7 = (~ (redist85_conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl_26_fifo_stall_out) & SE_out_conv2_B7_merge_reg_aunroll_x_wireValid) | SE_out_conv2_B7_merge_reg_aunroll_x_fromReg7;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_consumed8 = (~ (redist97_conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl_28_fifo_stall_out) & SE_out_conv2_B7_merge_reg_aunroll_x_wireValid) | SE_out_conv2_B7_merge_reg_aunroll_x_fromReg8;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_consumed9 = (~ (coalesced_delay_0_fifo_stall_out) & SE_out_conv2_B7_merge_reg_aunroll_x_wireValid) | SE_out_conv2_B7_merge_reg_aunroll_x_fromReg9;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_consumed10 = (~ (coalesced_delay_1_fifo_stall_out) & SE_out_conv2_B7_merge_reg_aunroll_x_wireValid) | SE_out_conv2_B7_merge_reg_aunroll_x_fromReg10;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_consumed11 = (~ (coalesced_delay_2_fifo_stall_out) & SE_out_conv2_B7_merge_reg_aunroll_x_wireValid) | SE_out_conv2_B7_merge_reg_aunroll_x_fromReg11;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_consumed12 = (~ (coalesced_delay_3_fifo_stall_out) & SE_out_conv2_B7_merge_reg_aunroll_x_wireValid) | SE_out_conv2_B7_merge_reg_aunroll_x_fromReg12;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_consumed13 = (~ (coalesced_delay_4_fifo_stall_out) & SE_out_conv2_B7_merge_reg_aunroll_x_wireValid) | SE_out_conv2_B7_merge_reg_aunroll_x_fromReg13;
    // Consuming
    assign SE_out_conv2_B7_merge_reg_aunroll_x_StallValid = SE_out_conv2_B7_merge_reg_aunroll_x_backStall & SE_out_conv2_B7_merge_reg_aunroll_x_wireValid;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_toReg0 = SE_out_conv2_B7_merge_reg_aunroll_x_StallValid & SE_out_conv2_B7_merge_reg_aunroll_x_consumed0;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_toReg1 = SE_out_conv2_B7_merge_reg_aunroll_x_StallValid & SE_out_conv2_B7_merge_reg_aunroll_x_consumed1;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_toReg2 = SE_out_conv2_B7_merge_reg_aunroll_x_StallValid & SE_out_conv2_B7_merge_reg_aunroll_x_consumed2;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_toReg3 = SE_out_conv2_B7_merge_reg_aunroll_x_StallValid & SE_out_conv2_B7_merge_reg_aunroll_x_consumed3;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_toReg4 = SE_out_conv2_B7_merge_reg_aunroll_x_StallValid & SE_out_conv2_B7_merge_reg_aunroll_x_consumed4;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_toReg5 = SE_out_conv2_B7_merge_reg_aunroll_x_StallValid & SE_out_conv2_B7_merge_reg_aunroll_x_consumed5;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_toReg6 = SE_out_conv2_B7_merge_reg_aunroll_x_StallValid & SE_out_conv2_B7_merge_reg_aunroll_x_consumed6;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_toReg7 = SE_out_conv2_B7_merge_reg_aunroll_x_StallValid & SE_out_conv2_B7_merge_reg_aunroll_x_consumed7;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_toReg8 = SE_out_conv2_B7_merge_reg_aunroll_x_StallValid & SE_out_conv2_B7_merge_reg_aunroll_x_consumed8;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_toReg9 = SE_out_conv2_B7_merge_reg_aunroll_x_StallValid & SE_out_conv2_B7_merge_reg_aunroll_x_consumed9;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_toReg10 = SE_out_conv2_B7_merge_reg_aunroll_x_StallValid & SE_out_conv2_B7_merge_reg_aunroll_x_consumed10;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_toReg11 = SE_out_conv2_B7_merge_reg_aunroll_x_StallValid & SE_out_conv2_B7_merge_reg_aunroll_x_consumed11;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_toReg12 = SE_out_conv2_B7_merge_reg_aunroll_x_StallValid & SE_out_conv2_B7_merge_reg_aunroll_x_consumed12;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_toReg13 = SE_out_conv2_B7_merge_reg_aunroll_x_StallValid & SE_out_conv2_B7_merge_reg_aunroll_x_consumed13;
    // Backward Stall generation
    assign SE_out_conv2_B7_merge_reg_aunroll_x_or0 = SE_out_conv2_B7_merge_reg_aunroll_x_consumed0;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_or1 = SE_out_conv2_B7_merge_reg_aunroll_x_consumed1 & SE_out_conv2_B7_merge_reg_aunroll_x_or0;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_or2 = SE_out_conv2_B7_merge_reg_aunroll_x_consumed2 & SE_out_conv2_B7_merge_reg_aunroll_x_or1;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_or3 = SE_out_conv2_B7_merge_reg_aunroll_x_consumed3 & SE_out_conv2_B7_merge_reg_aunroll_x_or2;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_or4 = SE_out_conv2_B7_merge_reg_aunroll_x_consumed4 & SE_out_conv2_B7_merge_reg_aunroll_x_or3;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_or5 = SE_out_conv2_B7_merge_reg_aunroll_x_consumed5 & SE_out_conv2_B7_merge_reg_aunroll_x_or4;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_or6 = SE_out_conv2_B7_merge_reg_aunroll_x_consumed6 & SE_out_conv2_B7_merge_reg_aunroll_x_or5;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_or7 = SE_out_conv2_B7_merge_reg_aunroll_x_consumed7 & SE_out_conv2_B7_merge_reg_aunroll_x_or6;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_or8 = SE_out_conv2_B7_merge_reg_aunroll_x_consumed8 & SE_out_conv2_B7_merge_reg_aunroll_x_or7;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_or9 = SE_out_conv2_B7_merge_reg_aunroll_x_consumed9 & SE_out_conv2_B7_merge_reg_aunroll_x_or8;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_or10 = SE_out_conv2_B7_merge_reg_aunroll_x_consumed10 & SE_out_conv2_B7_merge_reg_aunroll_x_or9;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_or11 = SE_out_conv2_B7_merge_reg_aunroll_x_consumed11 & SE_out_conv2_B7_merge_reg_aunroll_x_or10;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_or12 = SE_out_conv2_B7_merge_reg_aunroll_x_consumed12 & SE_out_conv2_B7_merge_reg_aunroll_x_or11;
    assign SE_out_conv2_B7_merge_reg_aunroll_x_wireStall = ~ (SE_out_conv2_B7_merge_reg_aunroll_x_consumed13 & SE_out_conv2_B7_merge_reg_aunroll_x_or12);
    assign SE_out_conv2_B7_merge_reg_aunroll_x_backStall = SE_out_conv2_B7_merge_reg_aunroll_x_wireStall;
    // Valid signal propagation
    assign SE_out_conv2_B7_merge_reg_aunroll_x_V0 = SE_out_conv2_B7_merge_reg_aunroll_x_wireValid & ~ (SE_out_conv2_B7_merge_reg_aunroll_x_fromReg0);
    assign SE_out_conv2_B7_merge_reg_aunroll_x_V1 = SE_out_conv2_B7_merge_reg_aunroll_x_wireValid & ~ (SE_out_conv2_B7_merge_reg_aunroll_x_fromReg1);
    assign SE_out_conv2_B7_merge_reg_aunroll_x_V2 = SE_out_conv2_B7_merge_reg_aunroll_x_wireValid & ~ (SE_out_conv2_B7_merge_reg_aunroll_x_fromReg2);
    assign SE_out_conv2_B7_merge_reg_aunroll_x_V3 = SE_out_conv2_B7_merge_reg_aunroll_x_wireValid & ~ (SE_out_conv2_B7_merge_reg_aunroll_x_fromReg3);
    assign SE_out_conv2_B7_merge_reg_aunroll_x_V4 = SE_out_conv2_B7_merge_reg_aunroll_x_wireValid & ~ (SE_out_conv2_B7_merge_reg_aunroll_x_fromReg4);
    assign SE_out_conv2_B7_merge_reg_aunroll_x_V5 = SE_out_conv2_B7_merge_reg_aunroll_x_wireValid & ~ (SE_out_conv2_B7_merge_reg_aunroll_x_fromReg5);
    assign SE_out_conv2_B7_merge_reg_aunroll_x_V6 = SE_out_conv2_B7_merge_reg_aunroll_x_wireValid & ~ (SE_out_conv2_B7_merge_reg_aunroll_x_fromReg6);
    assign SE_out_conv2_B7_merge_reg_aunroll_x_V7 = SE_out_conv2_B7_merge_reg_aunroll_x_wireValid & ~ (SE_out_conv2_B7_merge_reg_aunroll_x_fromReg7);
    assign SE_out_conv2_B7_merge_reg_aunroll_x_V8 = SE_out_conv2_B7_merge_reg_aunroll_x_wireValid & ~ (SE_out_conv2_B7_merge_reg_aunroll_x_fromReg8);
    assign SE_out_conv2_B7_merge_reg_aunroll_x_V9 = SE_out_conv2_B7_merge_reg_aunroll_x_wireValid & ~ (SE_out_conv2_B7_merge_reg_aunroll_x_fromReg9);
    assign SE_out_conv2_B7_merge_reg_aunroll_x_V10 = SE_out_conv2_B7_merge_reg_aunroll_x_wireValid & ~ (SE_out_conv2_B7_merge_reg_aunroll_x_fromReg10);
    assign SE_out_conv2_B7_merge_reg_aunroll_x_V11 = SE_out_conv2_B7_merge_reg_aunroll_x_wireValid & ~ (SE_out_conv2_B7_merge_reg_aunroll_x_fromReg11);
    assign SE_out_conv2_B7_merge_reg_aunroll_x_V12 = SE_out_conv2_B7_merge_reg_aunroll_x_wireValid & ~ (SE_out_conv2_B7_merge_reg_aunroll_x_fromReg12);
    assign SE_out_conv2_B7_merge_reg_aunroll_x_V13 = SE_out_conv2_B7_merge_reg_aunroll_x_wireValid & ~ (SE_out_conv2_B7_merge_reg_aunroll_x_fromReg13);
    // Computing multiple Valid(s)
    assign SE_out_conv2_B7_merge_reg_aunroll_x_wireValid = conv2_B7_merge_reg_aunroll_x_out_valid_out;

    // SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo(STALLENABLE,3053)
    // Valid signal propagation
    assign SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_V0 = SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_wireValid;
    // Backward Stall generation
    assign SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_backStall = i_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_conv252_out_stall_out | ~ (SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_wireValid = SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_V;

    // SE_out_i_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_conv252(STALLENABLE,2627)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_conv252_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_conv252_wireValid = i_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_conv252_out_valid_out;

    // i_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_conv252(BLACKBOX,183)@100
    // in in_stall_in@20000000
    // out out_data_out@101
    // out out_feedback_out_106@20000000
    // out out_feedback_valid_out_106@20000000
    // out out_stall_out@20000000
    // out out_valid_out@101
    conv2_i_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_0 thei_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_conv252 (
        .in_data_in(SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_D0),
        .in_feedback_stall_in_106(i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_feedback_stall_out_106),
        .in_keep_going(SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_conv252_backStall),
        .in_valid_in(SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_V0),
        .out_data_out(),
        .out_feedback_out_106(i_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_conv252_out_feedback_out_106),
        .out_feedback_valid_out_106(i_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_conv252_out_feedback_valid_out_106),
        .out_stall_out(i_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_conv252_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_conv252_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_conv2_B7_merge_reg_aunroll_x(BITJOIN,2277)
    assign bubble_join_conv2_B7_merge_reg_aunroll_x_q = {conv2_B7_merge_reg_aunroll_x_out_data_out_25_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_24_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_23_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_22_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_21_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_20_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_19_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_18_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_17_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_16_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_15_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_14_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_13_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_12_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_11_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_10_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_9_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_8_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_7_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_6_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_5_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_4_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_3_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_2_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_1_tpl, conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl};

    // bubble_select_conv2_B7_merge_reg_aunroll_x(BITSELECT,2278)
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_b = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[0:0]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_c = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[32:1]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_d = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[64:33]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_e = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[96:65]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_f = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[128:97]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_g = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[160:129]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_h = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[161:161]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_i = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[162:162]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_j = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[163:163]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_k = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[164:164]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_l = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[165:165]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_m = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[197:166]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_n = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[198:198]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_o = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[199:199]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_p = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[200:200]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_q = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[201:201]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_r = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[265:202]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_s = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[329:266]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_t = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[361:330]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_u = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[425:362]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_v = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[426:426]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_w = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[427:427]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_x = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[428:428]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_y = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[429:429]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_z = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[430:430]);
    assign bubble_select_conv2_B7_merge_reg_aunroll_x_aa = $unsigned(bubble_join_conv2_B7_merge_reg_aunroll_x_q[431:431]);

    // i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215(BLACKBOX,152)@1
    // in in_stall_in@20000000
    // out out_data_out@2
    // out out_feedback_stall_out_106@20000000
    // out out_stall_out@20000000
    // out out_valid_out@2
    conv2_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_0 thei_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215 (
        .in_data_in(bubble_select_conv2_B7_merge_reg_aunroll_x_j),
        .in_dir(bubble_select_conv2_B7_merge_reg_aunroll_x_b),
        .in_feedback_in_106(i_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_conv252_out_feedback_out_106),
        .in_feedback_valid_in_106(i_llvm_fpga_push_i1_memdep_phi2_pop57139_push106_conv252_out_feedback_valid_out_106),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_backStall),
        .in_valid_in(SE_out_conv2_B7_merge_reg_aunroll_x_V2),
        .out_data_out(i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out),
        .out_feedback_stall_out_106(i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_feedback_stall_out_106),
        .out_stall_out(i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215(BITJOIN,2328)
    assign bubble_join_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_q = i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215(BITSELECT,2329)
    assign bubble_select_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_b = $unsigned(bubble_join_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_q[0:0]);

    // SE_out_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215(STALLENABLE,2565)
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_V0 = SE_out_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_wireValid;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_backStall = redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_stall_out | ~ (SE_out_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_wireValid = i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_valid_out;

    // redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo(STALLFIFO,2251)
    assign redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_valid_in = SE_out_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_V0;
    assign redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_stall_in = SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_backStall;
    assign redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_data_in = bubble_select_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_b;
    assign redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_valid_in_bitsignaltemp = redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_valid_in[0];
    assign redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_stall_in_bitsignaltemp = redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_stall_in[0];
    assign redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_valid_out[0] = redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_valid_out_bitsignaltemp;
    assign redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_stall_out[0] = redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(31),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(1),
        .IMPL("ram")
    ) theredist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo (
        .valid_in(redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_valid_in_bitsignaltemp),
        .stall_in(redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_stall_in_bitsignaltemp),
        .data_in(bubble_select_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_b),
        .valid_out(redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_valid_out_bitsignaltemp),
        .stall_out(redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_stall_out_bitsignaltemp),
        .data_out(redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo(STALLENABLE,3051)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_fromReg0 <= '0;
            SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_fromReg0 <= SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_toReg0;
            // Successor 1
            SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_fromReg1 <= SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_consumed0 = (~ (SE_i_reduction_conv2_0_conv272_backStall) & SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_wireValid) | SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_fromReg0;
    assign SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_consumed1 = (~ (redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_stall_out) & SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_wireValid) | SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_fromReg1;
    // Consuming
    assign SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_StallValid = SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_backStall & SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_wireValid;
    assign SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_toReg0 = SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_StallValid & SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_consumed0;
    assign SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_toReg1 = SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_StallValid & SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_consumed1;
    // Backward Stall generation
    assign SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_or0 = SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_consumed0;
    assign SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_wireStall = ~ (SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_consumed1 & SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_or0);
    assign SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_backStall = SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_wireStall;
    // Valid signal propagation
    assign SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_V0 = SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_wireValid & ~ (SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_fromReg0);
    assign SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_V1 = SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_wireValid & ~ (SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_wireValid = redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_valid_out;

    // SE_i_reduction_conv2_0_conv272(STALLENABLE,2684)
    // Valid signal propagation
    assign SE_i_reduction_conv2_0_conv272_V0 = SE_i_reduction_conv2_0_conv272_wireValid;
    // Backward Stall generation
    assign SE_i_reduction_conv2_0_conv272_backStall = SE_i_reduction_conv2_2_conv284_backStall | ~ (SE_i_reduction_conv2_0_conv272_wireValid);
    // Computing multiple Valid(s)
    assign SE_i_reduction_conv2_0_conv272_and0 = SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_V0;
    assign SE_i_reduction_conv2_0_conv272_wireValid = SE_out_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_V0 & SE_i_reduction_conv2_0_conv272_and0;

    // SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232(STALLENABLE,2567)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_fromReg0 <= SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_fromReg1 <= SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_consumed0 = (~ (SE_i_reduction_conv2_0_conv272_backStall) & SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_wireValid) | SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_consumed1 = (~ (redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_stall_out) & SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_wireValid) | SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_StallValid = SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_backStall & SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_wireValid;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_toReg0 = SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_StallValid & SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_toReg1 = SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_StallValid & SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_or0 = SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_wireStall = ~ (SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_consumed1 & SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_or0);
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_backStall = SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_V0 = SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_V1 = SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_wireValid = i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_valid_out;

    // SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo(STALLENABLE,3049)
    // Valid signal propagation
    assign SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_V0 = SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_wireValid;
    // Backward Stall generation
    assign SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_backStall = i_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_conv271_out_stall_out | ~ (SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_wireValid = SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_V;

    // SE_out_i_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_conv271(STALLENABLE,2629)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_conv271_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_conv271_wireValid = i_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_conv271_out_valid_out;

    // i_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_conv271(BLACKBOX,184)@100
    // in in_stall_in@20000000
    // out out_data_out@101
    // out out_feedback_out_100@20000000
    // out out_feedback_valid_out_100@20000000
    // out out_stall_out@20000000
    // out out_valid_out@101
    conv2_i_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_0 thei_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_conv271 (
        .in_data_in(SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_D0),
        .in_feedback_stall_in_100(i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_feedback_stall_out_100),
        .in_keep_going(SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_conv271_backStall),
        .in_valid_in(SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_V0),
        .out_data_out(),
        .out_feedback_out_100(i_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_conv271_out_feedback_out_100),
        .out_feedback_valid_out_100(i_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_conv271_out_feedback_valid_out_100),
        .out_stall_out(i_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_conv271_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_conv271_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232(BLACKBOX,153)@31
    // in in_stall_in@20000000
    // out out_data_out@32
    // out out_feedback_stall_out_100@20000000
    // out out_stall_out@20000000
    // out out_valid_out@32
    conv2_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_0 thei_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232 (
        .in_data_in(SR_SE_out_coalesced_delay_1_fifo_D0),
        .in_dir(SR_SE_out_coalesced_delay_1_fifo_D1),
        .in_feedback_in_100(i_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_conv271_out_feedback_out_100),
        .in_feedback_valid_in_100(i_llvm_fpga_push_i1_memdep_phi3_pop39134_push100_conv271_out_feedback_valid_out_100),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_backStall),
        .in_valid_in(SE_out_coalesced_delay_1_fifo_V0),
        .out_data_out(i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out),
        .out_feedback_stall_out_100(i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_feedback_stall_out_100),
        .out_stall_out(i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_coalesced_delay_1_fifo(STALLENABLE,3083)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_coalesced_delay_1_fifo_fromReg0 <= '0;
            SE_out_coalesced_delay_1_fifo_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_coalesced_delay_1_fifo_fromReg0 <= SE_out_coalesced_delay_1_fifo_toReg0;
            // Successor 1
            SE_out_coalesced_delay_1_fifo_fromReg1 <= SE_out_coalesced_delay_1_fifo_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_coalesced_delay_1_fifo_consumed0 = (~ (i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_stall_out) & SE_out_coalesced_delay_1_fifo_wireValid) | SE_out_coalesced_delay_1_fifo_fromReg0;
    assign SE_out_coalesced_delay_1_fifo_consumed1 = (~ (i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_stall_out) & SE_out_coalesced_delay_1_fifo_wireValid) | SE_out_coalesced_delay_1_fifo_fromReg1;
    // Consuming
    assign SE_out_coalesced_delay_1_fifo_StallValid = SE_out_coalesced_delay_1_fifo_backStall & SE_out_coalesced_delay_1_fifo_wireValid;
    assign SE_out_coalesced_delay_1_fifo_toReg0 = SE_out_coalesced_delay_1_fifo_StallValid & SE_out_coalesced_delay_1_fifo_consumed0;
    assign SE_out_coalesced_delay_1_fifo_toReg1 = SE_out_coalesced_delay_1_fifo_StallValid & SE_out_coalesced_delay_1_fifo_consumed1;
    // Backward Stall generation
    assign SE_out_coalesced_delay_1_fifo_or0 = SE_out_coalesced_delay_1_fifo_consumed0;
    assign SE_out_coalesced_delay_1_fifo_wireStall = ~ (SE_out_coalesced_delay_1_fifo_consumed1 & SE_out_coalesced_delay_1_fifo_or0);
    assign SE_out_coalesced_delay_1_fifo_backStall = SE_out_coalesced_delay_1_fifo_wireStall;
    // Valid signal propagation
    assign SE_out_coalesced_delay_1_fifo_V0 = SE_out_coalesced_delay_1_fifo_wireValid & ~ (SE_out_coalesced_delay_1_fifo_fromReg0);
    assign SE_out_coalesced_delay_1_fifo_V1 = SE_out_coalesced_delay_1_fifo_wireValid & ~ (SE_out_coalesced_delay_1_fifo_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_coalesced_delay_1_fifo_wireValid = SR_SE_out_coalesced_delay_1_fifo_V;

    // redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo(STALLFIFO,2247)
    assign redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_valid_in = SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_V1;
    assign redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_stall_in = SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_backStall;
    assign redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_data_in = bubble_select_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_b;
    assign redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_valid_in_bitsignaltemp = redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_valid_in[0];
    assign redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_stall_in_bitsignaltemp = redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_stall_in[0];
    assign redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_valid_out[0] = redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_valid_out_bitsignaltemp;
    assign redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_stall_out[0] = redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(69),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(1),
        .IMPL("ram")
    ) theredist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo (
        .valid_in(redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_valid_in_bitsignaltemp),
        .stall_in(redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_stall_in_bitsignaltemp),
        .data_in(bubble_select_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_b),
        .valid_out(redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_valid_out_bitsignaltemp),
        .stall_out(redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_stall_out_bitsignaltemp),
        .data_out(redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222(STALLENABLE,2571)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_fromReg0 <= SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_fromReg1 <= SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_consumed0 = (~ (SE_i_reduction_conv2_1_conv268_backStall) & SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_wireValid) | SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_consumed1 = (~ (redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_stall_out) & SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_wireValid) | SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_StallValid = SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_backStall & SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_wireValid;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_toReg0 = SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_StallValid & SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_toReg1 = SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_StallValid & SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_or0 = SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_wireStall = ~ (SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_consumed1 & SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_or0);
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_backStall = SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_V0 = SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_V1 = SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_wireValid = i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_valid_out;

    // SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo(STALLENABLE,3043)
    // Valid signal propagation
    assign SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_V0 = SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_wireValid;
    // Backward Stall generation
    assign SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_backStall = i_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_conv259_out_stall_out | ~ (SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_wireValid = SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_V;

    // SE_out_i_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_conv259(STALLENABLE,2633)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_conv259_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_conv259_wireValid = i_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_conv259_out_valid_out;

    // i_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_conv259(BLACKBOX,186)@100
    // in in_stall_in@20000000
    // out out_data_out@101
    // out out_feedback_out_89@20000000
    // out out_feedback_valid_out_89@20000000
    // out out_stall_out@20000000
    // out out_valid_out@101
    conv2_i_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_0 thei_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_conv259 (
        .in_data_in(SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_D0),
        .in_feedback_stall_in_89(i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_feedback_stall_out_89),
        .in_keep_going(SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_conv259_backStall),
        .in_valid_in(SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_V0),
        .out_data_out(),
        .out_feedback_out_89(i_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_conv259_out_feedback_out_89),
        .out_feedback_valid_out_89(i_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_conv259_out_feedback_valid_out_89),
        .out_stall_out(i_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_conv259_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_conv259_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0(REG,2262)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_q <= $unsigned(1'b0);
        end
        else if (SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_backEN == 1'b1)
        begin
            redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_q <= $unsigned(SR_SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_D0);
        end
    end

    // bubble_join_coalesced_delay_1_fifo(BITJOIN,2503)
    assign bubble_join_coalesced_delay_1_fifo_q = coalesced_delay_1_fifo_data_out;

    // bubble_select_coalesced_delay_1_fifo(BITSELECT,2504)
    assign bubble_select_coalesced_delay_1_fifo_b = $unsigned(bubble_join_coalesced_delay_1_fifo_q[1:0]);

    // sel_for_coalesced_delay_1(BITSELECT,2171)
    assign sel_for_coalesced_delay_1_b = $unsigned(bubble_select_coalesced_delay_1_fifo_b[0:0]);
    assign sel_for_coalesced_delay_1_c = $unsigned(bubble_select_coalesced_delay_1_fifo_b[1:1]);

    // SR_SE_out_coalesced_delay_1_fifo(STALLREG,3454)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_coalesced_delay_1_fifo_r_valid <= 1'b0;
            SR_SE_out_coalesced_delay_1_fifo_r_data0 <= 1'bx;
            SR_SE_out_coalesced_delay_1_fifo_r_data1 <= 1'bx;
            SR_SE_out_coalesced_delay_1_fifo_r_data2 <= 1'bx;
            SR_SE_out_coalesced_delay_1_fifo_r_data3 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_out_coalesced_delay_1_fifo_r_valid <= SE_out_coalesced_delay_1_fifo_backStall & (SR_SE_out_coalesced_delay_1_fifo_r_valid | SR_SE_out_coalesced_delay_1_fifo_i_valid);

            if (SR_SE_out_coalesced_delay_1_fifo_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_coalesced_delay_1_fifo_r_data0 <= $unsigned(sel_for_coalesced_delay_1_c);
                SR_SE_out_coalesced_delay_1_fifo_r_data1 <= $unsigned(redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_q);
                SR_SE_out_coalesced_delay_1_fifo_r_data2 <= $unsigned(redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_q);
                SR_SE_out_coalesced_delay_1_fifo_r_data3 <= $unsigned(sel_for_coalesced_delay_1_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_coalesced_delay_1_fifo_and0 = coalesced_delay_1_fifo_valid_out;
    assign SR_SE_out_coalesced_delay_1_fifo_i_valid = SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_V0 & SR_SE_out_coalesced_delay_1_fifo_and0;
    // Stall signal propagation
    assign SR_SE_out_coalesced_delay_1_fifo_backStall = SR_SE_out_coalesced_delay_1_fifo_r_valid | ~ (SR_SE_out_coalesced_delay_1_fifo_i_valid);

    // Valid
    assign SR_SE_out_coalesced_delay_1_fifo_V = SR_SE_out_coalesced_delay_1_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_1_fifo_r_valid : SR_SE_out_coalesced_delay_1_fifo_i_valid;

    // Data0
    assign SR_SE_out_coalesced_delay_1_fifo_D0 = SR_SE_out_coalesced_delay_1_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_1_fifo_r_data0 : sel_for_coalesced_delay_1_c;
    // Data1
    assign SR_SE_out_coalesced_delay_1_fifo_D1 = SR_SE_out_coalesced_delay_1_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_1_fifo_r_data1 : redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_q;
    // Data2
    assign SR_SE_out_coalesced_delay_1_fifo_D2 = SR_SE_out_coalesced_delay_1_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_1_fifo_r_data2 : redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_q;
    // Data3
    assign SR_SE_out_coalesced_delay_1_fifo_D3 = SR_SE_out_coalesced_delay_1_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_1_fifo_r_data3 : sel_for_coalesced_delay_1_b;

    // i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222(BLACKBOX,155)@31
    // in in_stall_in@20000000
    // out out_data_out@32
    // out out_feedback_stall_out_89@20000000
    // out out_stall_out@20000000
    // out out_valid_out@32
    conv2_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_0 thei_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222 (
        .in_data_in(SR_SE_out_coalesced_delay_1_fifo_D3),
        .in_dir(SR_SE_out_coalesced_delay_1_fifo_D2),
        .in_feedback_in_89(i_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_conv259_out_feedback_out_89),
        .in_feedback_valid_in_89(i_llvm_fpga_push_i1_memdep_phi5_pop21103_push89_conv259_out_feedback_valid_out_89),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_backStall),
        .in_valid_in(SE_out_coalesced_delay_1_fifo_V1),
        .out_data_out(i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out),
        .out_feedback_stall_out_89(i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_feedback_stall_out_89),
        .out_stall_out(i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222(BITJOIN,2337)
    assign bubble_join_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_q = i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222(BITSELECT,2338)
    assign bubble_select_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_b = $unsigned(bubble_join_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_q[0:0]);

    // bubble_join_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo(BITJOIN,2458)
    assign bubble_join_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_q = redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_data_out;

    // bubble_select_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo(BITSELECT,2459)
    assign bubble_select_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_b = $unsigned(bubble_join_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_q[0:0]);

    // i_reduction_conv2_1_conv268(LOGICAL,217)@32
    assign i_reduction_conv2_1_conv268_q = bubble_select_redist65_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_30_fifo_b | bubble_select_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_b;

    // i_reduction_conv2_0_conv272(LOGICAL,216)@32
    assign i_reduction_conv2_0_conv272_q = bubble_select_redist68_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_30_fifo_b | bubble_select_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_b;

    // SE_i_reduction_conv2_2_conv284(STALLENABLE,2686)
    // Valid signal propagation
    assign SE_i_reduction_conv2_2_conv284_V0 = SE_i_reduction_conv2_2_conv284_R_v_0;
    // Stall signal propagation
    assign SE_i_reduction_conv2_2_conv284_s_tv_0 = SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_backStall & SE_i_reduction_conv2_2_conv284_R_v_0;
    // Backward Enable generation
    assign SE_i_reduction_conv2_2_conv284_backEN = ~ (SE_i_reduction_conv2_2_conv284_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_reduction_conv2_2_conv284_and0 = SE_i_reduction_conv2_0_conv272_V0 & SE_i_reduction_conv2_2_conv284_backEN;
    assign SE_i_reduction_conv2_2_conv284_v_s_0 = SE_i_reduction_conv2_1_conv268_V0 & SE_i_reduction_conv2_2_conv284_and0;
    // Backward Stall generation
    assign SE_i_reduction_conv2_2_conv284_backStall = ~ (SE_i_reduction_conv2_2_conv284_v_s_0);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_reduction_conv2_2_conv284_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_i_reduction_conv2_2_conv284_backEN == 1'b0)
            begin
                SE_i_reduction_conv2_2_conv284_R_v_0 <= SE_i_reduction_conv2_2_conv284_R_v_0 & SE_i_reduction_conv2_2_conv284_s_tv_0;
            end
            else
            begin
                SE_i_reduction_conv2_2_conv284_R_v_0 <= SE_i_reduction_conv2_2_conv284_v_s_0;
            end

        end
    end

    // i_reduction_conv2_2_conv284(LOGICAL,218)@32 + 1
    assign i_reduction_conv2_2_conv284_qi = i_reduction_conv2_0_conv272_q | i_reduction_conv2_1_conv268_q;
    dspba_delay_ver #( .width(1), .depth(1), .reset_kind("ASYNC"), .phase(0), .modulus(1), .reset_high(1'b0) )
    i_reduction_conv2_2_conv284_delay ( .xin(i_reduction_conv2_2_conv284_qi), .xout(i_reduction_conv2_2_conv284_q), .ena(SE_i_reduction_conv2_2_conv284_backEN[0]), .clk(clock), .aclr(resetn) );

    // bubble_join_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219(BITJOIN,2340)
    assign bubble_join_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_q = i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219(BITSELECT,2341)
    assign bubble_select_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_b = $unsigned(bubble_join_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_q[0:0]);

    // i_reduction_conv2_3_conv290(LOGICAL,219)@33
    assign i_reduction_conv2_3_conv290_q = bubble_select_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_b | i_reduction_conv2_2_conv284_q;

    // bubble_join_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26(BITJOIN,2343)
    assign bubble_join_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_q = i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26(BITSELECT,2344)
    assign bubble_select_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_b = $unsigned(bubble_join_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_q[0:0]);

    // i_reduction_conv2_4_conv292(LOGICAL,220)@33
    assign i_reduction_conv2_4_conv292_q = bubble_select_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_b | i_reduction_conv2_3_conv290_q;

    // bubble_join_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226(BITJOIN,2409)
    assign bubble_join_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_q = i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out;

    // bubble_select_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226(BITSELECT,2410)
    assign bubble_select_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_b = $unsigned(bubble_join_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_q[63:0]);

    // i_unnamed_conv281(LOGICAL,222)@32 + 1
    assign i_unnamed_conv281_qi = $unsigned(SR_SE_i_unnamed_conv281_D0 == c_i32_0104_recast_x_q ? 1'b1 : 1'b0);
    dspba_delay_ver #( .width(1), .depth(1), .reset_kind("ASYNC"), .phase(0), .modulus(1), .reset_high(1'b0) )
    i_unnamed_conv281_delay ( .xin(i_unnamed_conv281_qi), .xout(i_unnamed_conv281_q), .ena(SE_i_unnamed_conv281_backEN[0]), .clk(clock), .aclr(resetn) );

    // i_arrayidx34_arrayidx64_conv288(MUX,110)@33
    assign i_arrayidx34_arrayidx64_conv288_s = i_unnamed_conv281_q;
    always @(i_arrayidx34_arrayidx64_conv288_s or bubble_select_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_b or bubble_select_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_b)
    begin
        unique case (i_arrayidx34_arrayidx64_conv288_s)
            1'b0 : i_arrayidx34_arrayidx64_conv288_q = bubble_select_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_b;
            1'b1 : i_arrayidx34_arrayidx64_conv288_q = bubble_select_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_b;
            default : i_arrayidx34_arrayidx64_conv288_q = 64'b0;
        endcase
    end

    // redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo(STALLFIFO,2246)
    assign redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_valid_in = SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_V1;
    assign redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_stall_in = SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_backStall;
    assign redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_data_in = bubble_select_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_b;
    assign redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_valid_in_bitsignaltemp = redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_valid_in[0];
    assign redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_stall_in_bitsignaltemp = redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_stall_in[0];
    assign redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_valid_out[0] = redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_valid_out_bitsignaltemp;
    assign redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_stall_out[0] = redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(68),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(1),
        .IMPL("ram")
    ) theredist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo (
        .valid_in(redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_valid_in_bitsignaltemp),
        .stall_in(redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_stall_in_bitsignaltemp),
        .data_in(bubble_select_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_b),
        .valid_out(redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_valid_out_bitsignaltemp),
        .stall_out(redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_stall_out_bitsignaltemp),
        .data_out(redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219(STALLENABLE,2573)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_fromReg0 <= SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_fromReg1 <= SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_consumed0 = (~ (SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_backStall) & SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_wireValid) | SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_consumed1 = (~ (redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_stall_out) & SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_wireValid) | SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_StallValid = SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_backStall & SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_wireValid;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_toReg0 = SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_StallValid & SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_toReg1 = SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_StallValid & SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_or0 = SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_wireStall = ~ (SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_consumed1 & SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_or0);
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_backStall = SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_V0 = SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_V1 = SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_wireValid = i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_valid_out;

    // SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26(STALLENABLE,2575)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_fromReg1 <= '0;
            SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_fromReg2 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_fromReg0 <= SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_fromReg1 <= SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_toReg1;
            // Successor 2
            SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_fromReg2 <= SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_toReg2;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_consumed0 = (~ (SR_SE_i_arrayidx34_arrayidx64_conv288_backStall) & SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_wireValid) | SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_consumed1 = (~ (SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_backStall) & SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_wireValid) | SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_fromReg1;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_consumed2 = (~ (SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_backStall) & SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_wireValid) | SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_fromReg2;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_StallValid = SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_backStall & SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_wireValid;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_toReg0 = SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_StallValid & SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_toReg1 = SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_StallValid & SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_consumed1;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_toReg2 = SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_StallValid & SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_consumed2;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_or0 = SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_or1 = SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_consumed1 & SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_or0;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_wireStall = ~ (SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_consumed2 & SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_or1);
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_backStall = SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_V0 = SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_V1 = SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_fromReg1);
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_V2 = SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_fromReg2);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_and0 = i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_out_valid_out;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_and1 = SE_i_reduction_conv2_2_conv284_V0 & SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_and0;
    assign SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_wireValid = SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_V0 & SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_and1;

    // SE_i_unnamed_conv281(STALLENABLE,2690)
    // Valid signal propagation
    assign SE_i_unnamed_conv281_V0 = SE_i_unnamed_conv281_R_v_0;
    // Stall signal propagation
    assign SE_i_unnamed_conv281_s_tv_0 = SR_SE_i_arrayidx34_arrayidx64_conv288_backStall & SE_i_unnamed_conv281_R_v_0;
    // Backward Enable generation
    assign SE_i_unnamed_conv281_backEN = ~ (SE_i_unnamed_conv281_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_unnamed_conv281_v_s_0 = SE_i_unnamed_conv281_backEN & SR_SE_i_unnamed_conv281_V;
    // Backward Stall generation
    assign SE_i_unnamed_conv281_backStall = ~ (SE_i_unnamed_conv281_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_unnamed_conv281_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_i_unnamed_conv281_backEN == 1'b0)
            begin
                SE_i_unnamed_conv281_R_v_0 <= SE_i_unnamed_conv281_R_v_0 & SE_i_unnamed_conv281_s_tv_0;
            end
            else
            begin
                SE_i_unnamed_conv281_R_v_0 <= SE_i_unnamed_conv281_v_s_0;
            end

        end
    end

    // SE_i_arrayidx34_arrayidx64_conv288(STALLENABLE,2528)
    // Valid signal propagation
    assign SE_i_arrayidx34_arrayidx64_conv288_V0 = SE_i_arrayidx34_arrayidx64_conv288_wireValid;
    // Backward Stall generation
    assign SE_i_arrayidx34_arrayidx64_conv288_backStall = i_llvm_fpga_mem_pn1_conv296_out_o_stall | ~ (SE_i_arrayidx34_arrayidx64_conv288_wireValid);
    // Computing multiple Valid(s)
    assign SE_i_arrayidx34_arrayidx64_conv288_wireValid = SR_SE_i_arrayidx34_arrayidx64_conv288_V;

    // SR_SE_i_arrayidx34_arrayidx64_conv288(STALLREG,3470)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx34_arrayidx64_conv288_r_valid <= 1'b0;
            SR_SE_i_arrayidx34_arrayidx64_conv288_r_data0 <= 64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx34_arrayidx64_conv288_r_data1 <= 1'bx;
            SR_SE_i_arrayidx34_arrayidx64_conv288_r_data2 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx34_arrayidx64_conv288_r_valid <= SE_i_arrayidx34_arrayidx64_conv288_backStall & (SR_SE_i_arrayidx34_arrayidx64_conv288_r_valid | SR_SE_i_arrayidx34_arrayidx64_conv288_i_valid);

            if (SR_SE_i_arrayidx34_arrayidx64_conv288_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx34_arrayidx64_conv288_r_data0 <= i_arrayidx34_arrayidx64_conv288_q;
                SR_SE_i_arrayidx34_arrayidx64_conv288_r_data1 <= i_reduction_conv2_4_conv292_q;
                SR_SE_i_arrayidx34_arrayidx64_conv288_r_data2 <= i_first_cleanup_xor_conv273_q;
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx34_arrayidx64_conv288_and0 = SE_i_unnamed_conv281_V0;
    assign SR_SE_i_arrayidx34_arrayidx64_conv288_and1 = SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_V0 & SR_SE_i_arrayidx34_arrayidx64_conv288_and0;
    assign SR_SE_i_arrayidx34_arrayidx64_conv288_and2 = SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_V0 & SR_SE_i_arrayidx34_arrayidx64_conv288_and1;
    assign SR_SE_i_arrayidx34_arrayidx64_conv288_and3 = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_V1 & SR_SE_i_arrayidx34_arrayidx64_conv288_and2;
    assign SR_SE_i_arrayidx34_arrayidx64_conv288_i_valid = SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_V0 & SR_SE_i_arrayidx34_arrayidx64_conv288_and3;
    // Stall signal propagation
    assign SR_SE_i_arrayidx34_arrayidx64_conv288_backStall = SR_SE_i_arrayidx34_arrayidx64_conv288_r_valid | ~ (SR_SE_i_arrayidx34_arrayidx64_conv288_i_valid);

    // Valid
    assign SR_SE_i_arrayidx34_arrayidx64_conv288_V = SR_SE_i_arrayidx34_arrayidx64_conv288_r_valid == 1'b1 ? SR_SE_i_arrayidx34_arrayidx64_conv288_r_valid : SR_SE_i_arrayidx34_arrayidx64_conv288_i_valid;

    // Data0
    assign SR_SE_i_arrayidx34_arrayidx64_conv288_D0 = SR_SE_i_arrayidx34_arrayidx64_conv288_r_valid == 1'b1 ? SR_SE_i_arrayidx34_arrayidx64_conv288_r_data0 : i_arrayidx34_arrayidx64_conv288_q;
    // Data1
    assign SR_SE_i_arrayidx34_arrayidx64_conv288_D1 = SR_SE_i_arrayidx34_arrayidx64_conv288_r_valid == 1'b1 ? SR_SE_i_arrayidx34_arrayidx64_conv288_r_data1 : i_reduction_conv2_4_conv292_q;
    // Data2
    assign SR_SE_i_arrayidx34_arrayidx64_conv288_D2 = SR_SE_i_arrayidx34_arrayidx64_conv288_r_valid == 1'b1 ? SR_SE_i_arrayidx34_arrayidx64_conv288_r_data2 : i_first_cleanup_xor_conv273_q;

    // SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224(STALLENABLE,2611)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_fromReg0 <= SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_fromReg1 <= SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_consumed0 = (~ (SR_SE_i_arrayidx34_arrayidx64_conv288_backStall) & SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_wireValid) | SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_fromReg0;
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_consumed1 = (~ (redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_stall_out) & SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_wireValid) | SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_StallValid = SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_backStall & SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_wireValid;
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_toReg0 = SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_StallValid & SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_consumed0;
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_toReg1 = SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_StallValid & SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_or0 = SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_consumed0;
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_wireStall = ~ (SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_consumed1 & SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_or0);
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_backStall = SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_V0 = SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_wireValid & ~ (SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_fromReg0);
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_V1 = SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_wireValid & ~ (SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_wireValid = i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_valid_out;

    // SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo(STALLENABLE,3015)
    // Valid signal propagation
    assign SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_V0 = SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_wireValid;
    // Backward Stall generation
    assign SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_backStall = i_llvm_fpga_push_p1024f32_arrayidx34110_push91_conv261_out_stall_out | ~ (SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_wireValid = SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_V;

    // SE_out_i_llvm_fpga_push_p1024f32_arrayidx34110_push91_conv261(STALLENABLE,2675)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_p1024f32_arrayidx34110_push91_conv261_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_p1024f32_arrayidx34110_push91_conv261_wireValid = i_llvm_fpga_push_p1024f32_arrayidx34110_push91_conv261_out_valid_out;

    // i_llvm_fpga_push_p1024f32_arrayidx34110_push91_conv261(BLACKBOX,207)@100
    // in in_stall_in@20000000
    // out out_data_out@101
    // out out_feedback_out_91@20000000
    // out out_feedback_valid_out_91@20000000
    // out out_stall_out@20000000
    // out out_valid_out@101
    conv2_i_llvm_fpga_push_p1024f32_arrayidx34110_push91_0 thei_llvm_fpga_push_p1024f32_arrayidx34110_push91_conv261 (
        .in_data_in(SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_D0),
        .in_feedback_stall_in_91(i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_feedback_stall_out_91),
        .in_keep_going(SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_p1024f32_arrayidx34110_push91_conv261_backStall),
        .in_valid_in(SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_V0),
        .out_data_out(),
        .out_feedback_out_91(i_llvm_fpga_push_p1024f32_arrayidx34110_push91_conv261_out_feedback_out_91),
        .out_feedback_valid_out_91(i_llvm_fpga_push_p1024f32_arrayidx34110_push91_conv261_out_feedback_valid_out_91),
        .out_stall_out(i_llvm_fpga_push_p1024f32_arrayidx34110_push91_conv261_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_p1024f32_arrayidx34110_push91_conv261_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224(BLACKBOX,175)@32
    // in in_stall_in@20000000
    // out out_data_out@33
    // out out_feedback_stall_out_91@20000000
    // out out_stall_out@20000000
    // out out_valid_out@33
    conv2_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_0 thei_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224 (
        .in_data_in(SR_SE_out_coalesced_delay_2_fifo_D4),
        .in_dir(SR_SE_out_coalesced_delay_2_fifo_D2),
        .in_feedback_in_91(i_llvm_fpga_push_p1024f32_arrayidx34110_push91_conv261_out_feedback_out_91),
        .in_feedback_valid_in_91(i_llvm_fpga_push_p1024f32_arrayidx34110_push91_conv261_out_feedback_valid_out_91),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_backStall),
        .in_valid_in(SE_out_coalesced_delay_2_fifo_V1),
        .out_data_out(i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out),
        .out_feedback_stall_out_91(i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_feedback_stall_out_91),
        .out_stall_out(i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo(STALLENABLE,3041)
    // Valid signal propagation
    assign SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_V0 = SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_wireValid;
    // Backward Stall generation
    assign SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_backStall = i_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_conv256_out_stall_out | ~ (SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_wireValid = SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_V;

    // SE_out_i_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_conv256(STALLENABLE,2635)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_conv256_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_conv256_wireValid = i_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_conv256_out_valid_out;

    // i_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_conv256(BLACKBOX,187)@100
    // in in_stall_in@20000000
    // out out_data_out@101
    // out out_feedback_out_85@20000000
    // out out_feedback_valid_out_85@20000000
    // out out_stall_out@20000000
    // out out_valid_out@101
    conv2_i_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_0 thei_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_conv256 (
        .in_data_in(SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_D0),
        .in_feedback_stall_in_85(i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_feedback_stall_out_85),
        .in_keep_going(SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_conv256_backStall),
        .in_valid_in(SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_V0),
        .out_data_out(),
        .out_feedback_out_85(i_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_conv256_out_feedback_out_85),
        .out_feedback_valid_out_85(i_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_conv256_out_feedback_valid_out_85),
        .out_stall_out(i_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_conv256_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_conv256_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219(BLACKBOX,156)@32
    // in in_stall_in@20000000
    // out out_data_out@33
    // out out_feedback_stall_out_85@20000000
    // out out_stall_out@20000000
    // out out_valid_out@33
    conv2_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_0 thei_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219 (
        .in_data_in(SR_SE_out_coalesced_delay_2_fifo_D0),
        .in_dir(SR_SE_out_coalesced_delay_2_fifo_D1),
        .in_feedback_in_85(i_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_conv256_out_feedback_out_85),
        .in_feedback_valid_in_85(i_llvm_fpga_push_i1_memdep_phi6_pop1886_push85_conv256_out_feedback_valid_out_85),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_backStall),
        .in_valid_in(SE_out_coalesced_delay_2_fifo_V0),
        .out_data_out(i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out),
        .out_feedback_stall_out_85(i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_feedback_stall_out_85),
        .out_stall_out(i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_coalesced_delay_2_fifo(STALLENABLE,3085)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_coalesced_delay_2_fifo_fromReg0 <= '0;
            SE_out_coalesced_delay_2_fifo_fromReg1 <= '0;
            SE_out_coalesced_delay_2_fifo_fromReg2 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_coalesced_delay_2_fifo_fromReg0 <= SE_out_coalesced_delay_2_fifo_toReg0;
            // Successor 1
            SE_out_coalesced_delay_2_fifo_fromReg1 <= SE_out_coalesced_delay_2_fifo_toReg1;
            // Successor 2
            SE_out_coalesced_delay_2_fifo_fromReg2 <= SE_out_coalesced_delay_2_fifo_toReg2;
        end
    end
    // Input Stall processing
    assign SE_out_coalesced_delay_2_fifo_consumed0 = (~ (i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_stall_out) & SE_out_coalesced_delay_2_fifo_wireValid) | SE_out_coalesced_delay_2_fifo_fromReg0;
    assign SE_out_coalesced_delay_2_fifo_consumed1 = (~ (i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_stall_out) & SE_out_coalesced_delay_2_fifo_wireValid) | SE_out_coalesced_delay_2_fifo_fromReg1;
    assign SE_out_coalesced_delay_2_fifo_consumed2 = (~ (i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_stall_out) & SE_out_coalesced_delay_2_fifo_wireValid) | SE_out_coalesced_delay_2_fifo_fromReg2;
    // Consuming
    assign SE_out_coalesced_delay_2_fifo_StallValid = SE_out_coalesced_delay_2_fifo_backStall & SE_out_coalesced_delay_2_fifo_wireValid;
    assign SE_out_coalesced_delay_2_fifo_toReg0 = SE_out_coalesced_delay_2_fifo_StallValid & SE_out_coalesced_delay_2_fifo_consumed0;
    assign SE_out_coalesced_delay_2_fifo_toReg1 = SE_out_coalesced_delay_2_fifo_StallValid & SE_out_coalesced_delay_2_fifo_consumed1;
    assign SE_out_coalesced_delay_2_fifo_toReg2 = SE_out_coalesced_delay_2_fifo_StallValid & SE_out_coalesced_delay_2_fifo_consumed2;
    // Backward Stall generation
    assign SE_out_coalesced_delay_2_fifo_or0 = SE_out_coalesced_delay_2_fifo_consumed0;
    assign SE_out_coalesced_delay_2_fifo_or1 = SE_out_coalesced_delay_2_fifo_consumed1 & SE_out_coalesced_delay_2_fifo_or0;
    assign SE_out_coalesced_delay_2_fifo_wireStall = ~ (SE_out_coalesced_delay_2_fifo_consumed2 & SE_out_coalesced_delay_2_fifo_or1);
    assign SE_out_coalesced_delay_2_fifo_backStall = SE_out_coalesced_delay_2_fifo_wireStall;
    // Valid signal propagation
    assign SE_out_coalesced_delay_2_fifo_V0 = SE_out_coalesced_delay_2_fifo_wireValid & ~ (SE_out_coalesced_delay_2_fifo_fromReg0);
    assign SE_out_coalesced_delay_2_fifo_V1 = SE_out_coalesced_delay_2_fifo_wireValid & ~ (SE_out_coalesced_delay_2_fifo_fromReg1);
    assign SE_out_coalesced_delay_2_fifo_V2 = SE_out_coalesced_delay_2_fifo_wireValid & ~ (SE_out_coalesced_delay_2_fifo_fromReg2);
    // Computing multiple Valid(s)
    assign SE_out_coalesced_delay_2_fifo_wireValid = SR_SE_out_coalesced_delay_2_fifo_V;

    // redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo(STALLFIFO,2229)
    assign redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_valid_in = SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_V1;
    assign redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_stall_in = SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_backStall;
    assign redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_data_in = bubble_select_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_b;
    assign redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_valid_in_bitsignaltemp = redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_valid_in[0];
    assign redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_stall_in_bitsignaltemp = redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_stall_in[0];
    assign redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_valid_out[0] = redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_valid_out_bitsignaltemp;
    assign redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_stall_out[0] = redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(68),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(64),
        .IMPL("ram")
    ) theredist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo (
        .valid_in(redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_valid_in_bitsignaltemp),
        .stall_in(redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_stall_in_bitsignaltemp),
        .data_in(bubble_select_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_b),
        .valid_out(redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_valid_out_bitsignaltemp),
        .stall_out(redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_stall_out_bitsignaltemp),
        .data_out(redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226(STALLENABLE,2613)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_fromReg0 <= SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_fromReg1 <= SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_consumed0 = (~ (SR_SE_i_arrayidx34_arrayidx64_conv288_backStall) & SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_wireValid) | SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_fromReg0;
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_consumed1 = (~ (redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_stall_out) & SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_wireValid) | SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_StallValid = SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_backStall & SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_wireValid;
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_toReg0 = SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_StallValid & SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_consumed0;
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_toReg1 = SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_StallValid & SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_or0 = SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_consumed0;
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_wireStall = ~ (SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_consumed1 & SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_or0);
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_backStall = SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_V0 = SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_wireValid & ~ (SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_fromReg0);
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_V1 = SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_wireValid & ~ (SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_wireValid = i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_valid_out;

    // i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226(BLACKBOX,176)@32
    // in in_stall_in@20000000
    // out out_data_out@33
    // out out_feedback_stall_out_93@20000000
    // out out_stall_out@20000000
    // out out_valid_out@33
    conv2_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_0 thei_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226 (
        .in_data_in(SR_SE_out_coalesced_delay_2_fifo_D5),
        .in_dir(SR_SE_out_coalesced_delay_2_fifo_D3),
        .in_feedback_in_93(i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_out_feedback_out_93),
        .in_feedback_valid_in_93(i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_out_feedback_valid_out_93),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_backStall),
        .in_valid_in(SE_out_coalesced_delay_2_fifo_V2),
        .out_data_out(i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out),
        .out_feedback_stall_out_93(i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_feedback_stall_out_93),
        .out_stall_out(i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264(BLACKBOX,208)@100
    // in in_stall_in@20000000
    // out out_data_out@101
    // out out_feedback_out_93@20000000
    // out out_feedback_valid_out_93@20000000
    // out out_stall_out@20000000
    // out out_valid_out@101
    conv2_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_0 thei_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264 (
        .in_data_in(SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_D0),
        .in_feedback_stall_in_93(i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_feedback_stall_out_93),
        .in_keep_going(SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_backStall),
        .in_valid_in(SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_V0),
        .out_data_out(),
        .out_feedback_out_93(i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_out_feedback_out_93),
        .out_feedback_valid_out_93(i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_out_feedback_valid_out_93),
        .out_stall_out(i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264(STALLENABLE,2676)
    // Valid signal propagation
    assign SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_V0 = SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_wireValid;
    // Backward Stall generation
    assign SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_backStall = i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_out_stall_out | ~ (SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_wireValid);
    // Computing multiple Valid(s)
    assign SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_wireValid = SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_V;

    // SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264(STALLREG,3502)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_r_valid <= 1'b0;
            SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_r_data0 <= 64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_r_valid <= SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_backStall & (SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_r_valid | SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_i_valid);

            if (SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_r_data0 <= $unsigned(bubble_select_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_b);
                SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_r_data1 <= $unsigned(bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_and0 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V18;
    assign SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_i_valid = SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_V1 & SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_and0;
    // Stall signal propagation
    assign SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_backStall = SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_r_valid | ~ (SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_i_valid);

    // Valid
    assign SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_V = SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_r_valid : SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_i_valid;

    // Data0
    assign SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_D0 = SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_r_data0 : bubble_select_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_b;
    // Data1
    assign SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_D1 = SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_r_data1 : bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b;

    // bubble_join_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo(BITJOIN,2422)
    assign bubble_join_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_q = redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_data_out;

    // bubble_select_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo(BITSELECT,2423)
    assign bubble_select_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_b = $unsigned(bubble_join_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_q[63:0]);

    // SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo(STALLREG,3501)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_r_valid <= 1'b0;
            SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_r_data0 <= 64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_r_valid <= SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_backStall & (SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_r_valid | SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_i_valid);

            if (SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_r_data0 <= $unsigned(bubble_select_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_b);
                SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_r_data1 <= $unsigned(bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_and0 = redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_valid_out;
    assign SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_i_valid = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V17 & SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_and0;
    // Stall signal propagation
    assign SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_backStall = SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_r_valid | ~ (SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_i_valid);

    // Valid
    assign SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_V = SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_r_valid == 1'b1 ? SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_r_valid : SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_i_valid;

    // Data0
    assign SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_D0 = SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_r_valid == 1'b1 ? SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_r_data0 : bubble_select_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_b;
    // Data1
    assign SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_D1 = SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_r_valid == 1'b1 ? SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_r_data1 : bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b;

    // bubble_join_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo(BITJOIN,2425)
    assign bubble_join_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_q = redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_data_out;

    // bubble_select_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo(BITSELECT,2426)
    assign bubble_select_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_b = $unsigned(bubble_join_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_q[63:0]);

    // SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo(STALLREG,3500)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_r_valid <= 1'b0;
            SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_r_data0 <= 64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_r_valid <= SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_backStall & (SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_r_valid | SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_i_valid);

            if (SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_r_data0 <= $unsigned(bubble_select_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_b);
                SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_r_data1 <= $unsigned(bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_and0 = redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_valid_out;
    assign SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_i_valid = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V16 & SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_and0;
    // Stall signal propagation
    assign SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_backStall = SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_r_valid | ~ (SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_i_valid);

    // Valid
    assign SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_V = SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_r_valid == 1'b1 ? SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_r_valid : SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_i_valid;

    // Data0
    assign SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_D0 = SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_r_valid == 1'b1 ? SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_r_data0 : bubble_select_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_b;
    // Data1
    assign SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_D1 = SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_r_valid == 1'b1 ? SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_r_data1 : bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b;

    // c_i4_1108(CONSTANT,103)
    assign c_i4_1108_q = $unsigned(4'b1111);

    // bubble_join_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27(BITJOIN,2399)
    assign bubble_join_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_q = i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27(BITSELECT,2400)
    assign bubble_select_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_b = $unsigned(bubble_join_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_q[3:0]);

    // i_fpga_indvars_iv_next_conv240(ADD,117)@100
    assign i_fpga_indvars_iv_next_conv240_a = {1'b0, bubble_select_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_b};
    assign i_fpga_indvars_iv_next_conv240_b = {1'b0, c_i4_1108_q};
    assign i_fpga_indvars_iv_next_conv240_o = $unsigned(i_fpga_indvars_iv_next_conv240_a) + $unsigned(i_fpga_indvars_iv_next_conv240_b);
    assign i_fpga_indvars_iv_next_conv240_q = i_fpga_indvars_iv_next_conv240_o[4:0];

    // bgTrunc_i_fpga_indvars_iv_next_conv240_sel_x(BITSELECT,3)@100
    assign bgTrunc_i_fpga_indvars_iv_next_conv240_sel_x_b = i_fpga_indvars_iv_next_conv240_q[3:0];

    // redist72_i_first_cleanup_conv233_sel_x_b_67_fifo(STALLFIFO,2255)
    assign redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_valid_in = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_V4;
    assign redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_stall_in = SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_backStall;
    assign redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_data_in = i_first_cleanup_conv233_sel_x_b;
    assign redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_valid_in_bitsignaltemp = redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_valid_in[0];
    assign redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_stall_in_bitsignaltemp = redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_stall_in[0];
    assign redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_valid_out[0] = redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_valid_out_bitsignaltemp;
    assign redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_stall_out[0] = redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(68),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(1),
        .IMPL("ram")
    ) theredist72_i_first_cleanup_conv233_sel_x_b_67_fifo (
        .valid_in(redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_valid_in_bitsignaltemp),
        .stall_in(redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_stall_in_bitsignaltemp),
        .data_in(i_first_cleanup_conv233_sel_x_b),
        .valid_out(redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_valid_out_bitsignaltemp),
        .stall_out(redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_stall_out_bitsignaltemp),
        .data_out(redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo(BITJOIN,2479)
    assign bubble_join_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_q = redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_data_out;

    // bubble_select_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo(BITSELECT,2480)
    assign bubble_select_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_b = $unsigned(bubble_join_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_q[0:0]);

    // i_exitcond_conv238_cmp_nsign(LOGICAL,496)@100
    assign i_exitcond_conv238_cmp_nsign_q = $unsigned(~ (bubble_select_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_b[3:3]));

    // i_notcmp_conv277(LOGICAL,214)@100
    assign i_notcmp_conv277_q = i_exitcond_conv238_cmp_nsign_q ^ VCC_q;

    // SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo(STALLENABLE,3059)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_fromReg0 <= '0;
            SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_fromReg0 <= SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_toReg0;
            // Successor 1
            SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_fromReg1 <= SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_consumed0 = (~ (SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_backStall) & SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_wireValid) | SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_fromReg0;
    assign SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_consumed1 = (~ (SR_SE_i_masked_conv287_backStall) & SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_wireValid) | SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_fromReg1;
    // Consuming
    assign SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_StallValid = SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_backStall & SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_wireValid;
    assign SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_toReg0 = SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_StallValid & SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_consumed0;
    assign SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_toReg1 = SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_StallValid & SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_consumed1;
    // Backward Stall generation
    assign SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_or0 = SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_consumed0;
    assign SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_wireStall = ~ (SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_consumed1 & SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_or0);
    assign SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_backStall = SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_wireStall;
    // Valid signal propagation
    assign SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_V0 = SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_wireValid & ~ (SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_fromReg0);
    assign SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_V1 = SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_wireValid & ~ (SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_wireValid = redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_valid_out;

    // i_masked_conv287(LOGICAL,209)@100 + 1
    assign i_masked_conv287_qi = SR_SE_i_masked_conv287_D0 & SR_SE_i_masked_conv287_D1;
    dspba_delay_ver #( .width(1), .depth(1), .reset_kind("ASYNC"), .phase(0), .modulus(1), .reset_high(1'b0) )
    i_masked_conv287_delay ( .xin(i_masked_conv287_qi), .xout(i_masked_conv287_q), .ena(SE_i_masked_conv287_backEN[0]), .clk(clock), .aclr(resetn) );

    // redist47_i_masked_conv287_q_31_fifo(STALLFIFO,2228)
    assign redist47_i_masked_conv287_q_31_fifo_valid_in = SE_i_masked_conv287_V0;
    assign redist47_i_masked_conv287_q_31_fifo_stall_in = SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_backStall;
    assign redist47_i_masked_conv287_q_31_fifo_data_in = i_masked_conv287_q;
    assign redist47_i_masked_conv287_q_31_fifo_valid_in_bitsignaltemp = redist47_i_masked_conv287_q_31_fifo_valid_in[0];
    assign redist47_i_masked_conv287_q_31_fifo_stall_in_bitsignaltemp = redist47_i_masked_conv287_q_31_fifo_stall_in[0];
    assign redist47_i_masked_conv287_q_31_fifo_valid_out[0] = redist47_i_masked_conv287_q_31_fifo_valid_out_bitsignaltemp;
    assign redist47_i_masked_conv287_q_31_fifo_stall_out[0] = redist47_i_masked_conv287_q_31_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(31),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(1),
        .IMPL("ram")
    ) theredist47_i_masked_conv287_q_31_fifo (
        .valid_in(redist47_i_masked_conv287_q_31_fifo_valid_in_bitsignaltemp),
        .stall_in(redist47_i_masked_conv287_q_31_fifo_stall_in_bitsignaltemp),
        .data_in(i_masked_conv287_q),
        .valid_out(redist47_i_masked_conv287_q_31_fifo_valid_out_bitsignaltemp),
        .stall_out(redist47_i_masked_conv287_q_31_fifo_stall_out_bitsignaltemp),
        .data_out(redist47_i_masked_conv287_q_31_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_i_masked_conv287(STALLENABLE,2678)
    // Valid signal propagation
    assign SE_i_masked_conv287_V0 = SE_i_masked_conv287_R_v_0;
    // Stall signal propagation
    assign SE_i_masked_conv287_s_tv_0 = redist47_i_masked_conv287_q_31_fifo_stall_out & SE_i_masked_conv287_R_v_0;
    // Backward Enable generation
    assign SE_i_masked_conv287_backEN = ~ (SE_i_masked_conv287_s_tv_0);
    // Determine whether to write valid data into the first register stage
    assign SE_i_masked_conv287_v_s_0 = SE_i_masked_conv287_backEN & SR_SE_i_masked_conv287_V;
    // Backward Stall generation
    assign SE_i_masked_conv287_backStall = ~ (SE_i_masked_conv287_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_masked_conv287_R_v_0 <= 1'b0;
        end
        else
        begin
            if (SE_i_masked_conv287_backEN == 1'b0)
            begin
                SE_i_masked_conv287_R_v_0 <= SE_i_masked_conv287_R_v_0 & SE_i_masked_conv287_s_tv_0;
            end
            else
            begin
                SE_i_masked_conv287_R_v_0 <= SE_i_masked_conv287_v_s_0;
            end

        end
    end

    // SR_SE_i_masked_conv287(STALLREG,3437)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_masked_conv287_r_valid <= 1'b0;
            SR_SE_i_masked_conv287_r_data0 <= 1'bx;
            SR_SE_i_masked_conv287_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_i_masked_conv287_r_valid <= SE_i_masked_conv287_backStall & (SR_SE_i_masked_conv287_r_valid | SR_SE_i_masked_conv287_i_valid);

            if (SR_SE_i_masked_conv287_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_masked_conv287_r_data0 <= i_notcmp_conv277_q;
                SR_SE_i_masked_conv287_r_data1 <= $unsigned(bubble_select_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_masked_conv287_and0 = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_V3;
    assign SR_SE_i_masked_conv287_i_valid = SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_V1 & SR_SE_i_masked_conv287_and0;
    // Stall signal propagation
    assign SR_SE_i_masked_conv287_backStall = SR_SE_i_masked_conv287_r_valid | ~ (SR_SE_i_masked_conv287_i_valid);

    // Valid
    assign SR_SE_i_masked_conv287_V = SR_SE_i_masked_conv287_r_valid == 1'b1 ? SR_SE_i_masked_conv287_r_valid : SR_SE_i_masked_conv287_i_valid;

    // Data0
    assign SR_SE_i_masked_conv287_D0 = SR_SE_i_masked_conv287_r_valid == 1'b1 ? SR_SE_i_masked_conv287_r_data0 : i_notcmp_conv277_q;
    // Data1
    assign SR_SE_i_masked_conv287_D1 = SR_SE_i_masked_conv287_r_valid == 1'b1 ? SR_SE_i_masked_conv287_r_data1 : bubble_select_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_b;

    // SE_out_i_llvm_fpga_push_i1_notexitcond_conv278(STALLENABLE,2649)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i1_notexitcond_conv278_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i1_notexitcond_conv278_wireValid = i_llvm_fpga_push_i1_notexitcond_conv278_out_valid_out;

    // i_llvm_fpga_push_i1_notexitcond_conv278(BLACKBOX,194)@100
    // in in_stall_in@20000000
    // out out_data_out@101
    // out out_feedback_out_3@20000000
    // out out_feedback_valid_out_3@20000000
    // out out_stall_out@20000000
    // out out_valid_out@101
    conv2_i_llvm_fpga_push_i1_notexitcond_0 thei_llvm_fpga_push_i1_notexitcond_conv278 (
        .in_data_in(SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_D0),
        .in_feedback_stall_in_3(i_llvm_fpga_pipeline_keep_going_conv23_out_not_exitcond_stall_out),
        .in_first_cleanup(SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i1_notexitcond_conv278_backStall),
        .in_valid_in(SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_V0),
        .out_data_out(),
        .out_feedback_out_3(i_llvm_fpga_push_i1_notexitcond_conv278_out_feedback_out_3),
        .out_feedback_valid_out_3(i_llvm_fpga_push_i1_notexitcond_conv278_out_feedback_valid_out_3),
        .out_stall_out(i_llvm_fpga_push_i1_notexitcond_conv278_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i1_notexitcond_conv278_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_in_i_llvm_fpga_push_i1_notexitcond_conv278(STALLENABLE,2648)
    // Valid signal propagation
    assign SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_V0 = SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_wireValid;
    // Backward Stall generation
    assign SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_backStall = i_llvm_fpga_push_i1_notexitcond_conv278_out_stall_out | ~ (SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_wireValid);
    // Computing multiple Valid(s)
    assign SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_wireValid = SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_V;

    // SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278(STALLREG,3489)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_r_valid <= 1'b0;
            SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_r_data0 <= 1'bx;
            SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_r_valid <= SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_backStall & (SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_r_valid | SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_i_valid);

            if (SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_r_data0 <= $unsigned(i_exitcond_conv238_cmp_nsign_q);
                SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_r_data1 <= $unsigned(bubble_select_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_and0 = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_V1;
    assign SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_i_valid = SE_out_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_V0 & SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_and0;
    // Stall signal propagation
    assign SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_backStall = SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_r_valid | ~ (SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_i_valid);

    // Valid
    assign SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_V = SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_r_valid : SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_i_valid;

    // Data0
    assign SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_D0 = SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_r_data0 : i_exitcond_conv238_cmp_nsign_q;
    // Data1
    assign SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_D1 = SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_r_data1 : bubble_select_redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_b;

    // bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg(STALLFIFO,3426)
    assign bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_valid_in = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_V0;
    assign bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_stall_in = SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_backStall;
    assign bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_valid_in_bitsignaltemp = bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_valid_in[0];
    assign bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_stall_in_bitsignaltemp = bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_stall_in[0];
    assign bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_valid_out[0] = bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_valid_out_bitsignaltemp;
    assign bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_stall_out[0] = bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_stall_out_bitsignaltemp;
    acl_valid_fifo_counter #(
        .DEPTH(32),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .ASYNC_RESET(1)
    ) thebubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg (
        .valid_in(bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_valid_in_bitsignaltemp),
        .stall_in(bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_stall_in_bitsignaltemp),
        .valid_out(bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_valid_out_bitsignaltemp),
        .stall_out(bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_stall_out_bitsignaltemp),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27(STALLENABLE,2607)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg1 <= '0;
            SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg2 <= '0;
            SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg3 <= '0;
            SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg4 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg0 <= SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg1 <= SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_toReg1;
            // Successor 2
            SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg2 <= SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_toReg2;
            // Successor 3
            SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg3 <= SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_toReg3;
            // Successor 4
            SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg4 <= SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_toReg4;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_consumed0 = (~ (bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_stall_out) & SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_wireValid) | SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_consumed1 = (~ (SR_SE_in_i_llvm_fpga_push_i1_notexitcond_conv278_backStall) & SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_wireValid) | SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg1;
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_consumed2 = (~ (SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_backStall) & SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_wireValid) | SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg2;
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_consumed3 = (~ (SR_SE_i_masked_conv287_backStall) & SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_wireValid) | SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg3;
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_consumed4 = (~ (SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_backStall) & SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_wireValid) | SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg4;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_StallValid = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_backStall & SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_wireValid;
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_toReg0 = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_StallValid & SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_consumed0;
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_toReg1 = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_StallValid & SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_consumed1;
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_toReg2 = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_StallValid & SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_consumed2;
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_toReg3 = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_StallValid & SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_consumed3;
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_toReg4 = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_StallValid & SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_consumed4;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_or0 = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_consumed0;
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_or1 = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_consumed1 & SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_or0;
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_or2 = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_consumed2 & SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_or1;
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_or3 = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_consumed3 & SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_or2;
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_wireStall = ~ (SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_consumed4 & SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_or3);
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_backStall = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_V0 = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_wireValid & ~ (SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_V1 = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_wireValid & ~ (SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg1);
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_V2 = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_wireValid & ~ (SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg2);
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_V3 = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_wireValid & ~ (SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg3);
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_V4 = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_wireValid & ~ (SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_fromReg4);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_wireValid = i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_out_valid_out;

    // SE_out_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279(STALLENABLE,2671)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_wireValid = i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_out_valid_out;

    // i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279(BLACKBOX,205)@100
    // in in_stall_in@20000000
    // out out_data_out@101
    // out out_feedback_out_77@20000000
    // out out_feedback_valid_out_77@20000000
    // out out_stall_out@20000000
    // out out_valid_out@101
    conv2_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_0 thei_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279 (
        .in_data_in(SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_D0),
        .in_feedback_stall_in_77(i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_out_feedback_stall_out_77),
        .in_keep_going(SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_backStall),
        .in_valid_in(SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_V0),
        .out_data_out(),
        .out_feedback_out_77(i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_out_feedback_out_77),
        .out_feedback_valid_out_77(i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_out_feedback_valid_out_77),
        .out_stall_out(i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279(STALLENABLE,2670)
    // Valid signal propagation
    assign SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_V0 = SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_wireValid;
    // Backward Stall generation
    assign SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_backStall = i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_out_stall_out | ~ (SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_wireValid);
    // Computing multiple Valid(s)
    assign SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_wireValid = SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_V;

    // SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279(STALLREG,3499)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_r_valid <= 1'b0;
            SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_r_data0 <= 4'bxxxx;
            SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_r_valid <= SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_backStall & (SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_r_valid | SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_i_valid);

            if (SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_r_data0 <= bgTrunc_i_fpga_indvars_iv_next_conv240_sel_x_b;
                SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_r_data1 <= $unsigned(bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_and0 = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_V2;
    assign SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_i_valid = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V15 & SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_and0;
    // Stall signal propagation
    assign SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_backStall = SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_r_valid | ~ (SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_i_valid);

    // Valid
    assign SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_V = SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_r_valid : SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_i_valid;

    // Data0
    assign SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_D0 = SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_r_data0 : bgTrunc_i_fpga_indvars_iv_next_conv240_sel_x_b;
    // Data1
    assign SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_D1 = SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_r_data1 : bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b;

    // bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg(STALLFIFO,3424)
    assign bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_valid_in = SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_V0;
    assign bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_stall_in = SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_backStall;
    assign bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_valid_in_bitsignaltemp = bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_valid_in[0];
    assign bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_stall_in_bitsignaltemp = bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_stall_in[0];
    assign bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_valid_out[0] = bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_valid_out_bitsignaltemp;
    assign bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_stall_out[0] = bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_stall_out_bitsignaltemp;
    acl_valid_fifo_counter #(
        .DEPTH(32),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .ASYNC_RESET(1)
    ) thebubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg (
        .valid_in(bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_valid_in_bitsignaltemp),
        .stall_in(bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_stall_in_bitsignaltemp),
        .valid_out(bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_valid_out_bitsignaltemp),
        .stall_out(bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_stall_out_bitsignaltemp),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218(STALLENABLE,2593)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_fromReg0 <= SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_fromReg1 <= SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_consumed0 = (~ (bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_stall_out) & SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_wireValid) | SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_consumed1 = (~ (SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_backStall) & SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_wireValid) | SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_StallValid = SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_backStall & SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_wireValid;
    assign SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_toReg0 = SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_StallValid & SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_consumed0;
    assign SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_toReg1 = SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_StallValid & SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_or0 = SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_consumed0;
    assign SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_wireStall = ~ (SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_consumed1 & SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_or0);
    assign SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_backStall = SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_V0 = SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_wireValid & ~ (SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_V1 = SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_wireValid & ~ (SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_wireValid = i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_out_valid_out;

    // SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255(STALLENABLE,2656)
    // Valid signal propagation
    assign SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_V0 = SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_wireValid;
    // Backward Stall generation
    assign SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_backStall = i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_out_stall_out | ~ (SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_wireValid);
    // Computing multiple Valid(s)
    assign SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_wireValid = SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_V;

    // SE_out_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255(STALLENABLE,2657)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_wireValid = i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_out_valid_out;

    // i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255(BLACKBOX,198)@100
    // in in_stall_in@20000000
    // out out_data_out@101
    // out out_feedback_out_84@20000000
    // out out_feedback_valid_out_84@20000000
    // out out_stall_out@20000000
    // out out_valid_out@101
    conv2_i_llvm_fpga_push_i32_channel_039_pop1781_push84_0 thei_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255 (
        .in_data_in(SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_D0),
        .in_feedback_stall_in_84(i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_out_feedback_stall_out_84),
        .in_keep_going(SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_backStall),
        .in_valid_in(SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_V0),
        .out_data_out(),
        .out_feedback_out_84(i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_out_feedback_out_84),
        .out_feedback_valid_out_84(i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_out_feedback_valid_out_84),
        .out_stall_out(i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218(BLACKBOX,166)@99
    // in in_stall_in@20000000
    // out out_data_out@100
    // out out_feedback_stall_out_84@20000000
    // out out_stall_out@20000000
    // out out_valid_out@100
    conv2_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_0 thei_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218 (
        .in_data_in(SR_SE_out_coalesced_delay_3_fifo_D0),
        .in_dir(SR_SE_out_coalesced_delay_3_fifo_D1),
        .in_feedback_in_84(i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_out_feedback_out_84),
        .in_feedback_valid_in_84(i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_out_feedback_valid_out_84),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_backStall),
        .in_valid_in(SE_out_coalesced_delay_3_fifo_V0),
        .out_data_out(i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_out_data_out),
        .out_feedback_stall_out_84(i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_out_feedback_stall_out_84),
        .out_stall_out(i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_coalesced_delay_3_fifo(STALLENABLE,3087)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_coalesced_delay_3_fifo_fromReg0 <= '0;
            SE_out_coalesced_delay_3_fifo_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_coalesced_delay_3_fifo_fromReg0 <= SE_out_coalesced_delay_3_fifo_toReg0;
            // Successor 1
            SE_out_coalesced_delay_3_fifo_fromReg1 <= SE_out_coalesced_delay_3_fifo_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_coalesced_delay_3_fifo_consumed0 = (~ (i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_out_stall_out) & SE_out_coalesced_delay_3_fifo_wireValid) | SE_out_coalesced_delay_3_fifo_fromReg0;
    assign SE_out_coalesced_delay_3_fifo_consumed1 = (~ (i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_out_stall_out) & SE_out_coalesced_delay_3_fifo_wireValid) | SE_out_coalesced_delay_3_fifo_fromReg1;
    // Consuming
    assign SE_out_coalesced_delay_3_fifo_StallValid = SE_out_coalesced_delay_3_fifo_backStall & SE_out_coalesced_delay_3_fifo_wireValid;
    assign SE_out_coalesced_delay_3_fifo_toReg0 = SE_out_coalesced_delay_3_fifo_StallValid & SE_out_coalesced_delay_3_fifo_consumed0;
    assign SE_out_coalesced_delay_3_fifo_toReg1 = SE_out_coalesced_delay_3_fifo_StallValid & SE_out_coalesced_delay_3_fifo_consumed1;
    // Backward Stall generation
    assign SE_out_coalesced_delay_3_fifo_or0 = SE_out_coalesced_delay_3_fifo_consumed0;
    assign SE_out_coalesced_delay_3_fifo_wireStall = ~ (SE_out_coalesced_delay_3_fifo_consumed1 & SE_out_coalesced_delay_3_fifo_or0);
    assign SE_out_coalesced_delay_3_fifo_backStall = SE_out_coalesced_delay_3_fifo_wireStall;
    // Valid signal propagation
    assign SE_out_coalesced_delay_3_fifo_V0 = SE_out_coalesced_delay_3_fifo_wireValid & ~ (SE_out_coalesced_delay_3_fifo_fromReg0);
    assign SE_out_coalesced_delay_3_fifo_V1 = SE_out_coalesced_delay_3_fifo_wireValid & ~ (SE_out_coalesced_delay_3_fifo_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_coalesced_delay_3_fifo_wireValid = SR_SE_out_coalesced_delay_3_fifo_V;

    // SE_out_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247(STALLENABLE,2669)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_wireValid = i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_out_valid_out;

    // i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247(BLACKBOX,204)@100
    // in in_stall_in@20000000
    // out out_data_out@101
    // out out_feedback_out_88@20000000
    // out out_feedback_valid_out_88@20000000
    // out out_stall_out@20000000
    // out out_valid_out@101
    conv2_i_llvm_fpga_push_i32_row_038_pop2099_push88_0 thei_llvm_fpga_push_i32_row_038_pop2099_push88_conv247 (
        .in_data_in(SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_D0),
        .in_feedback_stall_in_88(i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_out_feedback_stall_out_88),
        .in_keep_going(SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_backStall),
        .in_valid_in(SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_V0),
        .out_data_out(),
        .out_feedback_out_88(i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_out_feedback_out_88),
        .out_feedback_valid_out_88(i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_out_feedback_valid_out_88),
        .out_stall_out(i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211(BLACKBOX,172)@99
    // in in_stall_in@20000000
    // out out_data_out@100
    // out out_feedback_stall_out_88@20000000
    // out out_stall_out@20000000
    // out out_valid_out@100
    conv2_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_0 thei_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211 (
        .in_data_in(SR_SE_out_coalesced_delay_3_fifo_D3),
        .in_dir(SR_SE_out_coalesced_delay_3_fifo_D2),
        .in_feedback_in_88(i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_out_feedback_out_88),
        .in_feedback_valid_in_88(i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_out_feedback_valid_out_88),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_backStall),
        .in_valid_in(SE_out_coalesced_delay_3_fifo_V1),
        .out_data_out(i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_out_data_out),
        .out_feedback_stall_out_88(i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_out_feedback_stall_out_88),
        .out_stall_out(i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211(BITJOIN,2395)
    assign bubble_join_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_q = i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211(BITSELECT,2396)
    assign bubble_select_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_b = $unsigned(bubble_join_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_q[31:0]);

    // bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg(STALLFIFO,3425)
    assign bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_valid_in = SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_V0;
    assign bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_stall_in = SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_backStall;
    assign bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_valid_in_bitsignaltemp = bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_valid_in[0];
    assign bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_stall_in_bitsignaltemp = bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_stall_in[0];
    assign bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_valid_out[0] = bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_valid_out_bitsignaltemp;
    assign bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_stall_out[0] = bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_stall_out_bitsignaltemp;
    acl_valid_fifo_counter #(
        .DEPTH(32),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .ASYNC_RESET(1)
    ) thebubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg (
        .valid_in(bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_valid_in_bitsignaltemp),
        .stall_in(bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_stall_in_bitsignaltemp),
        .valid_out(bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_valid_out_bitsignaltemp),
        .stall_out(bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_stall_out_bitsignaltemp),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211(STALLENABLE,2605)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_fromReg0 <= SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_fromReg1 <= SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_consumed0 = (~ (bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_stall_out) & SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_wireValid) | SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_consumed1 = (~ (SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_backStall) & SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_wireValid) | SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_StallValid = SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_backStall & SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_wireValid;
    assign SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_toReg0 = SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_StallValid & SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_consumed0;
    assign SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_toReg1 = SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_StallValid & SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_or0 = SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_consumed0;
    assign SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_wireStall = ~ (SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_consumed1 & SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_or0);
    assign SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_backStall = SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_V0 = SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_wireValid & ~ (SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_V1 = SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_wireValid & ~ (SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_wireValid = i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_out_valid_out;

    // SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247(STALLENABLE,2668)
    // Valid signal propagation
    assign SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_V0 = SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_wireValid;
    // Backward Stall generation
    assign SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_backStall = i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_out_stall_out | ~ (SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_wireValid);
    // Computing multiple Valid(s)
    assign SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_wireValid = SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_V;

    // SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247(STALLREG,3498)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_r_valid <= 1'b0;
            SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_r_data0 <= 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_r_valid <= SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_backStall & (SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_r_valid | SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_i_valid);

            if (SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_r_data0 <= $unsigned(bubble_select_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_b);
                SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_r_data1 <= $unsigned(bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_and0 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V14;
    assign SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_i_valid = SE_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_V1 & SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_and0;
    // Stall signal propagation
    assign SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_backStall = SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_r_valid | ~ (SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_i_valid);

    // Valid
    assign SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_V = SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_r_valid : SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_i_valid;

    // Data0
    assign SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_D0 = SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_r_data0 : bubble_select_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_b;
    // Data1
    assign SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_D1 = SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_r_data1 : bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b;

    // bubble_join_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo(BITJOIN,2428)
    assign bubble_join_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_q = redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_data_out;

    // bubble_select_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo(BITSELECT,2429)
    assign bubble_select_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_b = $unsigned(bubble_join_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_q[31:0]);

    // SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo(STALLREG,3497)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_r_valid <= 1'b0;
            SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_r_data0 <= 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_r_valid <= SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_backStall & (SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_r_valid | SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_i_valid);

            if (SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_r_data0 <= $unsigned(bubble_select_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_b);
                SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_r_data1 <= $unsigned(bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_and0 = redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_valid_out;
    assign SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_i_valid = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V13 & SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_and0;
    // Stall signal propagation
    assign SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_backStall = SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_r_valid | ~ (SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_i_valid);

    // Valid
    assign SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_V = SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_r_valid == 1'b1 ? SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_r_valid : SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_i_valid;

    // Data0
    assign SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_D0 = SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_r_valid == 1'b1 ? SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_r_data0 : bubble_select_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_b;
    // Data1
    assign SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_D1 = SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_r_valid == 1'b1 ? SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_r_data1 : bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b;

    // bubble_join_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo(BITJOIN,2431)
    assign bubble_join_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_q = redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_data_out;

    // bubble_select_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo(BITSELECT,2432)
    assign bubble_select_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_b = $unsigned(bubble_join_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_q[31:0]);

    // SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo(STALLREG,3496)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_r_valid <= 1'b0;
            SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_r_data0 <= 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_r_valid <= SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_backStall & (SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_r_valid | SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_i_valid);

            if (SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_r_data0 <= $unsigned(bubble_select_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_b);
                SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_r_data1 <= $unsigned(bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_and0 = redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_valid_out;
    assign SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_i_valid = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V12 & SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_and0;
    // Stall signal propagation
    assign SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_backStall = SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_r_valid | ~ (SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_i_valid);

    // Valid
    assign SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_V = SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_r_valid == 1'b1 ? SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_r_valid : SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_i_valid;

    // Data0
    assign SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_D0 = SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_r_valid == 1'b1 ? SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_r_data0 : bubble_select_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_b;
    // Data1
    assign SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_D1 = SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_r_valid == 1'b1 ? SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_r_data1 : bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b;

    // c_i32_1106(CONSTANT,102)
    assign c_i32_1106_q = $unsigned(32'b00000000000000000000000000000001);

    // bubble_join_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo(BITJOIN,2434)
    assign bubble_join_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_q = redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_data_out;

    // bubble_select_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo(BITSELECT,2435)
    assign bubble_select_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_b = $unsigned(bubble_join_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_q[31:0]);

    // i_inc_conv237(ADD,138)@100
    assign i_inc_conv237_a = {1'b0, bubble_select_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_b};
    assign i_inc_conv237_b = {1'b0, c_i32_1106_q};
    assign i_inc_conv237_o = $unsigned(i_inc_conv237_a) + $unsigned(i_inc_conv237_b);
    assign i_inc_conv237_q = i_inc_conv237_o[32:0];

    // bgTrunc_i_inc_conv237_sel_x(BITSELECT,4)@100
    assign bgTrunc_i_inc_conv237_sel_x_b = i_inc_conv237_q[31:0];

    // SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo(STALLREG,3495)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_r_valid <= 1'b0;
            SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_r_data0 <= 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_r_valid <= SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_backStall & (SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_r_valid | SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_i_valid);

            if (SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_r_data0 <= bgTrunc_i_inc_conv237_sel_x_b;
                SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_r_data1 <= $unsigned(bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_and0 = redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_valid_out;
    assign SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_i_valid = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V11 & SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_and0;
    // Stall signal propagation
    assign SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_backStall = SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_r_valid | ~ (SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_i_valid);

    // Valid
    assign SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_V = SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_r_valid == 1'b1 ? SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_r_valid : SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_i_valid;

    // Data0
    assign SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_D0 = SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_r_valid == 1'b1 ? SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_r_data0 : bgTrunc_i_inc_conv237_sel_x_b;
    // Data1
    assign SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_D1 = SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_r_valid == 1'b1 ? SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_r_data1 : bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b;

    // bubble_join_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo(BITJOIN,2440)
    assign bubble_join_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_q = redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_data_out;

    // bubble_select_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo(BITSELECT,2441)
    assign bubble_select_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_b = $unsigned(bubble_join_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_q[31:0]);

    // SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo(STALLREG,3494)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_r_valid <= 1'b0;
            SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_r_data0 <= 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_r_valid <= SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_backStall & (SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_r_valid | SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_i_valid);

            if (SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_r_data0 <= $unsigned(bubble_select_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_b);
                SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_r_data1 <= $unsigned(bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_and0 = redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_valid_out;
    assign SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_i_valid = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V10 & SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_and0;
    // Stall signal propagation
    assign SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_backStall = SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_r_valid | ~ (SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_i_valid);

    // Valid
    assign SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_V = SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_r_valid == 1'b1 ? SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_r_valid : SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_i_valid;

    // Data0
    assign SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_D0 = SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_r_valid == 1'b1 ? SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_r_data0 : bubble_select_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_b;
    // Data1
    assign SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_D1 = SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_r_valid == 1'b1 ? SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_r_data1 : bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b;

    // bubble_join_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo(BITJOIN,2443)
    assign bubble_join_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_q = redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_data_out;

    // bubble_select_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo(BITSELECT,2444)
    assign bubble_select_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_b = $unsigned(bubble_join_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_q[31:0]);

    // SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo(STALLREG,3493)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_r_valid <= 1'b0;
            SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_r_data0 <= 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_r_valid <= SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_backStall & (SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_r_valid | SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_i_valid);

            if (SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_r_data0 <= $unsigned(bubble_select_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_b);
                SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_r_data1 <= $unsigned(bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_and0 = redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_valid_out;
    assign SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_i_valid = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V9 & SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_and0;
    // Stall signal propagation
    assign SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_backStall = SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_r_valid | ~ (SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_i_valid);

    // Valid
    assign SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_V = SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_r_valid == 1'b1 ? SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_r_valid : SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_i_valid;

    // Data0
    assign SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_D0 = SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_r_valid == 1'b1 ? SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_r_data0 : bubble_select_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_b;
    // Data1
    assign SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_D1 = SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_r_valid == 1'b1 ? SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_r_data1 : bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b;

    // bubble_join_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218(BITJOIN,2376)
    assign bubble_join_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_q = i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218(BITSELECT,2377)
    assign bubble_select_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_b = $unsigned(bubble_join_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_q[31:0]);

    // SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255(STALLREG,3492)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_r_valid <= 1'b0;
            SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_r_data0 <= 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_r_valid <= SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_backStall & (SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_r_valid | SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_i_valid);

            if (SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_r_data0 <= $unsigned(bubble_select_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_b);
                SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_r_data1 <= $unsigned(bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_and0 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V8;
    assign SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_i_valid = SE_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_V1 & SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_and0;
    // Stall signal propagation
    assign SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_backStall = SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_r_valid | ~ (SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_i_valid);

    // Valid
    assign SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_V = SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_r_valid : SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_i_valid;

    // Data0
    assign SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_D0 = SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_r_data0 : bubble_select_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_b;
    // Data1
    assign SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_D1 = SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_r_data1 : bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b;

    // bubble_join_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo(BITJOIN,2446)
    assign bubble_join_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_q = redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_data_out;

    // bubble_select_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo(BITSELECT,2447)
    assign bubble_select_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_b = $unsigned(bubble_join_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_q[31:0]);

    // SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo(STALLREG,3491)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_r_valid <= 1'b0;
            SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_r_data0 <= 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_r_valid <= SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_backStall & (SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_r_valid | SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_i_valid);

            if (SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_r_data0 <= $unsigned(bubble_select_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_b);
                SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_r_data1 <= $unsigned(bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_and0 = redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_valid_out;
    assign SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_i_valid = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V7 & SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_and0;
    // Stall signal propagation
    assign SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_backStall = SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_r_valid | ~ (SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_i_valid);

    // Valid
    assign SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_V = SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_r_valid == 1'b1 ? SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_r_valid : SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_i_valid;

    // Data0
    assign SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_D0 = SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_r_valid == 1'b1 ? SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_r_data0 : bubble_select_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_b;
    // Data1
    assign SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_D1 = SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_r_valid == 1'b1 ? SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_r_data1 : bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b;

    // leftShiftStage0Idx1Rng1_uid483_i_cleanups_shl_conv20_shift_x(BITSELECT,482)@100
    assign leftShiftStage0Idx1Rng1_uid483_i_cleanups_shl_conv20_shift_x_in = bubble_select_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_b[0:0];
    assign leftShiftStage0Idx1Rng1_uid483_i_cleanups_shl_conv20_shift_x_b = leftShiftStage0Idx1Rng1_uid483_i_cleanups_shl_conv20_shift_x_in[0:0];

    // leftShiftStage0Idx1_uid484_i_cleanups_shl_conv20_shift_x(BITJOIN,483)@100
    assign leftShiftStage0Idx1_uid484_i_cleanups_shl_conv20_shift_x_q = {leftShiftStage0Idx1Rng1_uid483_i_cleanups_shl_conv20_shift_x_b, GND_q};

    // leftShiftStage0_uid486_i_cleanups_shl_conv20_shift_x(MUX,485)@100
    assign leftShiftStage0_uid486_i_cleanups_shl_conv20_shift_x_s = VCC_q;
    always @(leftShiftStage0_uid486_i_cleanups_shl_conv20_shift_x_s or bubble_select_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_b or leftShiftStage0Idx1_uid484_i_cleanups_shl_conv20_shift_x_q)
    begin
        unique case (leftShiftStage0_uid486_i_cleanups_shl_conv20_shift_x_s)
            1'b0 : leftShiftStage0_uid486_i_cleanups_shl_conv20_shift_x_q = bubble_select_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_b;
            1'b1 : leftShiftStage0_uid486_i_cleanups_shl_conv20_shift_x_q = leftShiftStage0Idx1_uid484_i_cleanups_shl_conv20_shift_x_q;
            default : leftShiftStage0_uid486_i_cleanups_shl_conv20_shift_x_q = 2'b0;
        endcase
    end

    // i_cleanups_shl_conv234_vt_select_1(BITSELECT,113)@100
    assign i_cleanups_shl_conv234_vt_select_1_b = leftShiftStage0_uid486_i_cleanups_shl_conv20_shift_x_q[1:1];

    // i_cleanups_shl_conv234_vt_join(BITJOIN,112)@100
    assign i_cleanups_shl_conv234_vt_join_q = {i_cleanups_shl_conv234_vt_select_1_b, GND_q};

    // bubble_join_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo(BITJOIN,2449)
    assign bubble_join_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_q = redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_data_out;

    // bubble_select_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo(BITSELECT,2450)
    assign bubble_select_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_b = $unsigned(bubble_join_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_q[1:0]);

    // i_or_conv286(LOGICAL,215)@100
    assign i_or_conv286_q = i_notcmp_conv277_q | bubble_select_redist71_i_first_cleanup_xor_conv273_q_67_fifo_b;

    // i_next_cleanups_conv291(MUX,210)@100
    assign i_next_cleanups_conv291_s = i_or_conv286_q;
    always @(i_next_cleanups_conv291_s or bubble_select_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_b or i_cleanups_shl_conv234_vt_join_q)
    begin
        unique case (i_next_cleanups_conv291_s)
            1'b0 : i_next_cleanups_conv291_q = bubble_select_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_b;
            1'b1 : i_next_cleanups_conv291_q = i_cleanups_shl_conv234_vt_join_q;
            default : i_next_cleanups_conv291_q = 2'b0;
        endcase
    end

    // redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo(STALLFIFO,2245)
    assign redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_valid_in = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_V0;
    assign redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_stall_in = SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_backStall;
    assign redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_data_in = bubble_select_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_b;
    assign redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_valid_in_bitsignaltemp = redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_valid_in[0];
    assign redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_stall_in_bitsignaltemp = redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_stall_in[0];
    assign redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_valid_out[0] = redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_valid_out_bitsignaltemp;
    assign redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_stall_out[0] = redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(68),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(2),
        .IMPL("ram")
    ) theredist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo (
        .valid_in(redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_valid_in_bitsignaltemp),
        .stall_in(redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_stall_in_bitsignaltemp),
        .data_in(bubble_select_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_b),
        .valid_out(redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_valid_out_bitsignaltemp),
        .stall_out(redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_stall_out_bitsignaltemp),
        .data_out(redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo(STALLENABLE,3039)
    // Valid signal propagation
    assign SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_V0 = SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_wireValid;
    // Backward Stall generation
    assign SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_backStall = i_llvm_fpga_push_i2_cleanups_push81_conv293_out_stall_out | ~ (SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_wireValid = SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_V;

    // SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo(STALLREG,3490)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_r_valid <= 1'b0;
            SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_r_data0 <= 2'bxx;
            SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_r_valid <= SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_backStall & (SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_r_valid | SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_i_valid);

            if (SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_r_data0 <= i_next_cleanups_conv291_q;
                SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_r_data1 <= $unsigned(bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_and0 = redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_valid_out;
    assign SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_and1 = SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_V4 & SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_and0;
    assign SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_and2 = SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_V1 & SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_and1;
    assign SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_i_valid = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V6 & SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_and2;
    // Stall signal propagation
    assign SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_backStall = SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_r_valid | ~ (SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_i_valid);

    // Valid
    assign SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_V = SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_r_valid == 1'b1 ? SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_r_valid : SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_i_valid;

    // Data0
    assign SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_D0 = SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_r_valid == 1'b1 ? SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_r_data0 : i_next_cleanups_conv291_q;
    // Data1
    assign SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_D1 = SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_r_valid == 1'b1 ? SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_r_data1 : bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b;

    // bubble_join_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo(BITJOIN,2452)
    assign bubble_join_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_q = redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_data_out;

    // bubble_select_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo(BITSELECT,2453)
    assign bubble_select_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_b = $unsigned(bubble_join_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_q[0:0]);

    // SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo(STALLREG,3482)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_r_valid <= 1'b0;
            SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_r_data0 <= 1'bx;
            SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_r_valid <= SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_backStall & (SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_r_valid | SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_i_valid);

            if (SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_r_data0 <= $unsigned(bubble_select_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_b);
                SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_r_data1 <= $unsigned(bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_and0 = redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_valid_out;
    assign SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_i_valid = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V5 & SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_and0;
    // Stall signal propagation
    assign SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_backStall = SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_r_valid | ~ (SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_i_valid);

    // Valid
    assign SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_V = SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_r_valid == 1'b1 ? SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_r_valid : SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_i_valid;

    // Data0
    assign SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_D0 = SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_r_valid == 1'b1 ? SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_r_data0 : bubble_select_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_b;
    // Data1
    assign SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_D1 = SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_r_valid == 1'b1 ? SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_r_data1 : bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b;

    // bubble_join_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo(BITJOIN,2455)
    assign bubble_join_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_q = redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_data_out;

    // bubble_select_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo(BITSELECT,2456)
    assign bubble_select_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_b = $unsigned(bubble_join_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_q[0:0]);

    // SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo(STALLREG,3481)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_r_valid <= 1'b0;
            SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_r_data0 <= 1'bx;
            SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_r_valid <= SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_backStall & (SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_r_valid | SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_i_valid);

            if (SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_r_data0 <= $unsigned(bubble_select_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_b);
                SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_r_data1 <= $unsigned(bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_and0 = redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_valid_out;
    assign SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_i_valid = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V4 & SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_and0;
    // Stall signal propagation
    assign SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_backStall = SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_r_valid | ~ (SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_i_valid);

    // Valid
    assign SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_V = SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_r_valid == 1'b1 ? SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_r_valid : SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_i_valid;

    // Data0
    assign SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_D0 = SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_r_valid == 1'b1 ? SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_r_data0 : bubble_select_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_b;
    // Data1
    assign SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_D1 = SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_r_valid == 1'b1 ? SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_r_data1 : bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b;

    // bubble_join_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo(BITJOIN,2461)
    assign bubble_join_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_q = redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_data_out;

    // bubble_select_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo(BITSELECT,2462)
    assign bubble_select_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_b = $unsigned(bubble_join_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_q[0:0]);

    // SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo(STALLREG,3480)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_r_valid <= 1'b0;
            SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_r_data0 <= 1'bx;
            SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_r_valid <= SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_backStall & (SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_r_valid | SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_i_valid);

            if (SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_r_data0 <= $unsigned(bubble_select_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_b);
                SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_r_data1 <= $unsigned(bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_and0 = redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_valid_out;
    assign SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_i_valid = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V3 & SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_and0;
    // Stall signal propagation
    assign SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_backStall = SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_r_valid | ~ (SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_i_valid);

    // Valid
    assign SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_V = SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_r_valid == 1'b1 ? SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_r_valid : SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_i_valid;

    // Data0
    assign SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_D0 = SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_r_valid == 1'b1 ? SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_r_data0 : bubble_select_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_b;
    // Data1
    assign SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_D1 = SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_r_valid == 1'b1 ? SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_r_data1 : bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b;

    // bubble_join_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo(BITJOIN,2464)
    assign bubble_join_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_q = redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_data_out;

    // bubble_select_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo(BITSELECT,2465)
    assign bubble_select_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_b = $unsigned(bubble_join_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_q[0:0]);

    // SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo(STALLREG,3479)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_r_valid <= 1'b0;
            SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_r_data0 <= 1'bx;
            SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_r_valid <= SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_backStall & (SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_r_valid | SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_i_valid);

            if (SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_r_data0 <= $unsigned(bubble_select_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_b);
                SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_r_data1 <= $unsigned(bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_and0 = redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_valid_out;
    assign SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_i_valid = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V2 & SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_and0;
    // Stall signal propagation
    assign SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_backStall = SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_r_valid | ~ (SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_i_valid);

    // Valid
    assign SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_V = SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_r_valid == 1'b1 ? SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_r_valid : SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_i_valid;

    // Data0
    assign SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_D0 = SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_r_valid == 1'b1 ? SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_r_data0 : bubble_select_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_b;
    // Data1
    assign SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_D1 = SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_r_valid == 1'b1 ? SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_r_data1 : bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b;

    // bubble_join_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo(BITJOIN,2470)
    assign bubble_join_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_q = redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_data_out;

    // bubble_select_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo(BITSELECT,2471)
    assign bubble_select_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_b = $unsigned(bubble_join_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_q[0:0]);

    // SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo(STALLREG,3478)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_r_valid <= 1'b0;
            SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_r_data0 <= 1'bx;
            SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_r_valid <= SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_backStall & (SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_r_valid | SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_i_valid);

            if (SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_r_data0 <= $unsigned(bubble_select_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_b);
                SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_r_data1 <= $unsigned(bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_and0 = redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_valid_out;
    assign SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_i_valid = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V1 & SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_and0;
    // Stall signal propagation
    assign SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_backStall = SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_r_valid | ~ (SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_i_valid);

    // Valid
    assign SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_V = SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_r_valid == 1'b1 ? SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_r_valid : SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_i_valid;

    // Data0
    assign SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_D0 = SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_r_valid == 1'b1 ? SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_r_data0 : bubble_select_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_b;
    // Data1
    assign SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_D1 = SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_r_valid == 1'b1 ? SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_r_data1 : bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b;

    // bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg(STALLFIFO,3423)
    assign bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_valid_in = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V0;
    assign bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_stall_in = SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_backStall;
    assign bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_valid_in_bitsignaltemp = bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_valid_in[0];
    assign bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_stall_in_bitsignaltemp = bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_stall_in[0];
    assign bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_valid_out[0] = bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_valid_out_bitsignaltemp;
    assign bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_stall_out[0] = bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_stall_out_bitsignaltemp;
    acl_valid_fifo_counter #(
        .DEPTH(32),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .ASYNC_RESET(1)
    ) thebubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg (
        .valid_in(bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_valid_in_bitsignaltemp),
        .stall_in(bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_stall_in_bitsignaltemp),
        .valid_out(bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_valid_out_bitsignaltemp),
        .stall_out(bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_stall_out_bitsignaltemp),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_pipeline_keep_going_conv23(STALLENABLE,2553)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg1 <= '0;
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg2 <= '0;
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg3 <= '0;
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg4 <= '0;
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg5 <= '0;
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg6 <= '0;
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg7 <= '0;
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg8 <= '0;
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg9 <= '0;
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg10 <= '0;
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg11 <= '0;
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg12 <= '0;
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg13 <= '0;
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg14 <= '0;
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg15 <= '0;
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg16 <= '0;
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg17 <= '0;
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg18 <= '0;
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg19 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg0 <= SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg1 <= SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg1;
            // Successor 2
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg2 <= SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg2;
            // Successor 3
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg3 <= SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg3;
            // Successor 4
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg4 <= SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg4;
            // Successor 5
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg5 <= SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg5;
            // Successor 6
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg6 <= SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg6;
            // Successor 7
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg7 <= SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg7;
            // Successor 8
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg8 <= SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg8;
            // Successor 9
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg9 <= SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg9;
            // Successor 10
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg10 <= SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg10;
            // Successor 11
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg11 <= SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg11;
            // Successor 12
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg12 <= SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg12;
            // Successor 13
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg13 <= SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg13;
            // Successor 14
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg14 <= SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg14;
            // Successor 15
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg15 <= SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg15;
            // Successor 16
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg16 <= SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg16;
            // Successor 17
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg17 <= SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg17;
            // Successor 18
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg18 <= SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg18;
            // Successor 19
            SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg19 <= SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg19;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed0 = (~ (bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_stall_out) & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid) | SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg0;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed1 = (~ (SR_SE_out_redist69_i_llvm_fpga_pop_i1_memdep_phi2_pop57139_pop106_conv215_out_data_out_98_fifo_backStall) & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid) | SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg1;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed2 = (~ (SR_SE_out_redist67_i_llvm_fpga_pop_i1_memdep_phi3_pop39134_pop100_conv232_out_data_out_68_fifo_backStall) & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid) | SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg2;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed3 = (~ (SR_SE_out_redist66_i_llvm_fpga_pop_i1_memdep_phi4_pop28125_pop96_conv229_out_data_out_98_fifo_backStall) & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid) | SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg3;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed4 = (~ (SR_SE_out_redist64_i_llvm_fpga_pop_i1_memdep_phi5_pop21103_pop89_conv222_out_data_out_68_fifo_backStall) & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid) | SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg4;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed5 = (~ (SR_SE_out_redist63_i_llvm_fpga_pop_i1_memdep_phi6_pop1886_pop85_conv219_out_data_out_67_fifo_backStall) & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid) | SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg5;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed6 = (~ (SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_backStall) & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid) | SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg6;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed7 = (~ (SR_SE_out_redist61_i_llvm_fpga_pop_i32_add136_pop103_conv212_out_data_out_72_fifo_backStall) & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid) | SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg7;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed8 = (~ (SR_SE_in_i_llvm_fpga_push_i32_channel_039_pop1781_push84_conv255_backStall) & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid) | SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg8;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed9 = (~ (SR_SE_out_redist60_i_llvm_fpga_pop_i32_col_037_pop27113_pop92_conv225_out_data_out_70_fifo_backStall) & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid) | SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg9;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed10 = (~ (SR_SE_out_redist59_i_llvm_fpga_pop_i32_i_035_pop56135_pop101_conv28_out_data_out_98_fifo_backStall) & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid) | SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg10;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed11 = (~ (SR_SE_out_redist56_i_llvm_fpga_pop_i32_j_034_pop78_conv25_out_data_out_70_fifo_backStall) & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid) | SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg11;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed12 = (~ (SR_SE_out_redist54_i_llvm_fpga_pop_i32_k_036_pop38132_pop99_conv29_out_data_out_74_fifo_backStall) & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid) | SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg12;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed13 = (~ (SR_SE_out_redist52_i_llvm_fpga_pop_i32_pop102_conv210_out_data_out_69_fifo_backStall) & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid) | SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg13;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed14 = (~ (SR_SE_in_i_llvm_fpga_push_i32_row_038_pop2099_push88_conv247_backStall) & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid) | SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg14;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed15 = (~ (SR_SE_in_i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_backStall) & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid) | SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg15;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed16 = (~ (SR_SE_out_redist51_i_llvm_fpga_pop_i64_idxprom25107_pop90_conv223_out_data_out_75_fifo_backStall) & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid) | SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg16;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed17 = (~ (SR_SE_out_redist49_i_llvm_fpga_pop_p1024f32_arrayidx34110_pop91_conv224_out_data_out_67_fifo_backStall) & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid) | SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg17;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed18 = (~ (SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_backStall) & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid) | SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg18;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed19 = (~ (redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_stall_out) & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid) | SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg19;
    // Consuming
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_backStall & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg0 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed0;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg1 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed1;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg2 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed2;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg3 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed3;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg4 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed4;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg5 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed5;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg6 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed6;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg7 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed7;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg8 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed8;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg9 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed9;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg10 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed10;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg11 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed11;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg12 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed12;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg13 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed13;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg14 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed14;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg15 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed15;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg16 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed16;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg17 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed17;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg18 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed18;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_toReg19 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_StallValid & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed19;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or0 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed0;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or1 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed1 & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or0;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or2 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed2 & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or1;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or3 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed3 & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or2;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or4 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed4 & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or3;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or5 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed5 & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or4;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or6 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed6 & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or5;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or7 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed7 & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or6;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or8 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed8 & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or7;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or9 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed9 & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or8;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or10 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed10 & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or9;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or11 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed11 & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or10;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or12 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed12 & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or11;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or13 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed13 & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or12;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or14 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed14 & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or13;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or15 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed15 & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or14;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or16 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed16 & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or15;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or17 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed17 & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or16;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or18 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed18 & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or17;
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireStall = ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_consumed19 & SE_out_i_llvm_fpga_pipeline_keep_going_conv23_or18);
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_backStall = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V0 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid & ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg0);
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V1 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid & ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg1);
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V2 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid & ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg2);
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V3 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid & ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg3);
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V4 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid & ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg4);
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V5 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid & ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg5);
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V6 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid & ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg6);
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V7 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid & ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg7);
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V8 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid & ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg8);
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V9 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid & ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg9);
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V10 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid & ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg10);
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V11 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid & ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg11);
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V12 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid & ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg12);
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V13 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid & ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg13);
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V14 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid & ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg14);
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V15 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid & ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg15);
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V16 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid & ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg16);
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V17 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid & ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg17);
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V18 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid & ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg18);
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V19 = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid & ~ (SE_out_i_llvm_fpga_pipeline_keep_going_conv23_fromReg19);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pipeline_keep_going_conv23_wireValid = i_llvm_fpga_pipeline_keep_going_conv23_out_valid_out;

    // redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo(STALLFIFO,2253)
    assign redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_valid_in = SE_out_i_llvm_fpga_pipeline_keep_going_conv23_V19;
    assign redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_stall_in = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_backStall;
    assign redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_data_in = bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b;
    assign redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_valid_in_bitsignaltemp = redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_valid_in[0];
    assign redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_stall_in_bitsignaltemp = redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_stall_in[0];
    assign redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_valid_out[0] = redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_valid_out_bitsignaltemp;
    assign redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_stall_out[0] = redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(32),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(1),
        .IMPL("ram")
    ) theredist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo (
        .valid_in(redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_valid_in_bitsignaltemp),
        .stall_in(redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_stall_in_bitsignaltemp),
        .data_in(bubble_select_i_llvm_fpga_pipeline_keep_going_conv23_b),
        .valid_out(redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_valid_out_bitsignaltemp),
        .stall_out(redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_stall_out_bitsignaltemp),
        .data_out(redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo(BITJOIN,2473)
    assign bubble_join_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_q = redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_data_out;

    // bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo(BITSELECT,2474)
    assign bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b = $unsigned(bubble_join_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_q[0:0]);

    // i_last_initeration_conv275_sel_x(BITSELECT,89)@131
    assign i_last_initeration_conv275_sel_x_b = i_next_initerations_conv235_vt_join_q[0:0];

    // SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221(STALLENABLE,2583)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_fromReg0 <= SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_fromReg1 <= SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_consumed0 = (~ (SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_backStall) & SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_wireValid) | SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_consumed1 = (~ (SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_backStall) & SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_wireValid) | SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_StallValid = SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_backStall & SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_wireValid;
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_toReg0 = SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_StallValid & SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_toReg1 = SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_StallValid & SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_or0 = SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_wireStall = ~ (SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_consumed1 & SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_or0);
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_backStall = SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_V0 = SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_V1 = SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_wireValid = i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_out_valid_out;

    // SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258(STALLENABLE,2644)
    // Valid signal propagation
    assign SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_V0 = SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_wireValid;
    // Backward Stall generation
    assign SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_backStall = i_llvm_fpga_push_i1_notcmp5195_push87_conv258_out_stall_out | ~ (SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_wireValid);
    // Computing multiple Valid(s)
    assign SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_wireValid = SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_V;

    // SE_out_i_llvm_fpga_push_i1_notcmp5195_push87_conv258(STALLENABLE,2645)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_wireValid = i_llvm_fpga_push_i1_notcmp5195_push87_conv258_out_valid_out;

    // i_llvm_fpga_push_i1_notcmp5195_push87_conv258(BLACKBOX,192)@131
    // in in_stall_in@20000000
    // out out_data_out@132
    // out out_feedback_out_87@20000000
    // out out_feedback_valid_out_87@20000000
    // out out_stall_out@20000000
    // out out_valid_out@132
    conv2_i_llvm_fpga_push_i1_notcmp5195_push87_0 thei_llvm_fpga_push_i1_notcmp5195_push87_conv258 (
        .in_data_in(SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_D0),
        .in_feedback_stall_in_87(i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_out_feedback_stall_out_87),
        .in_keep_going(SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_backStall),
        .in_valid_in(SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_V0),
        .out_data_out(),
        .out_feedback_out_87(i_llvm_fpga_push_i1_notcmp5195_push87_conv258_out_feedback_out_87),
        .out_feedback_valid_out_87(i_llvm_fpga_push_i1_notcmp5195_push87_conv258_out_feedback_valid_out_87),
        .out_stall_out(i_llvm_fpga_push_i1_notcmp5195_push87_conv258_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i1_notcmp5195_push87_conv258_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221(BLACKBOX,161)@130
    // in in_stall_in@20000000
    // out out_data_out@131
    // out out_feedback_stall_out_87@20000000
    // out out_stall_out@20000000
    // out out_valid_out@131
    conv2_i_llvm_fpga_pop_i1_notcmp5195_pop87_0 thei_llvm_fpga_pop_i1_notcmp5195_pop87_conv221 (
        .in_data_in(SR_SE_out_coalesced_delay_4_fifo_D18),
        .in_dir(SR_SE_out_coalesced_delay_4_fifo_D9),
        .in_feedback_in_87(i_llvm_fpga_push_i1_notcmp5195_push87_conv258_out_feedback_out_87),
        .in_feedback_valid_in_87(i_llvm_fpga_push_i1_notcmp5195_push87_conv258_out_feedback_valid_out_87),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_backStall),
        .in_valid_in(SE_out_coalesced_delay_4_fifo_V8),
        .out_data_out(i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_out_data_out),
        .out_feedback_stall_out_87(i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_out_feedback_stall_out_87),
        .out_stall_out(i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228(STALLENABLE,2581)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_fromReg0 <= SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_fromReg1 <= SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_consumed0 = (~ (SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_backStall) & SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_wireValid) | SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_consumed1 = (~ (SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_backStall) & SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_wireValid) | SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_StallValid = SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_backStall & SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_wireValid;
    assign SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_toReg0 = SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_StallValid & SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_toReg1 = SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_StallValid & SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_or0 = SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_wireStall = ~ (SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_consumed1 & SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_or0);
    assign SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_backStall = SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_V0 = SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_V1 = SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_wireValid = i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_out_valid_out;

    // SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266(STALLENABLE,2642)
    // Valid signal propagation
    assign SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_V0 = SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_wireValid;
    // Backward Stall generation
    assign SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_backStall = i_llvm_fpga_push_i1_notcmp46122_push95_conv266_out_stall_out | ~ (SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_wireValid);
    // Computing multiple Valid(s)
    assign SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_wireValid = SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_V;

    // SE_out_i_llvm_fpga_push_i1_notcmp46122_push95_conv266(STALLENABLE,2643)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_wireValid = i_llvm_fpga_push_i1_notcmp46122_push95_conv266_out_valid_out;

    // i_llvm_fpga_push_i1_notcmp46122_push95_conv266(BLACKBOX,191)@131
    // in in_stall_in@20000000
    // out out_data_out@132
    // out out_feedback_out_95@20000000
    // out out_feedback_valid_out_95@20000000
    // out out_stall_out@20000000
    // out out_valid_out@132
    conv2_i_llvm_fpga_push_i1_notcmp46122_push95_0 thei_llvm_fpga_push_i1_notcmp46122_push95_conv266 (
        .in_data_in(SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_D0),
        .in_feedback_stall_in_95(i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_out_feedback_stall_out_95),
        .in_keep_going(SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_backStall),
        .in_valid_in(SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_V0),
        .out_data_out(),
        .out_feedback_out_95(i_llvm_fpga_push_i1_notcmp46122_push95_conv266_out_feedback_out_95),
        .out_feedback_valid_out_95(i_llvm_fpga_push_i1_notcmp46122_push95_conv266_out_feedback_valid_out_95),
        .out_stall_out(i_llvm_fpga_push_i1_notcmp46122_push95_conv266_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i1_notcmp46122_push95_conv266_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228(BLACKBOX,160)@130
    // in in_stall_in@20000000
    // out out_data_out@131
    // out out_feedback_stall_out_95@20000000
    // out out_stall_out@20000000
    // out out_valid_out@131
    conv2_i_llvm_fpga_pop_i1_notcmp46122_pop95_0 thei_llvm_fpga_pop_i1_notcmp46122_pop95_conv228 (
        .in_data_in(SR_SE_out_coalesced_delay_4_fifo_D17),
        .in_dir(SR_SE_out_coalesced_delay_4_fifo_D8),
        .in_feedback_in_95(i_llvm_fpga_push_i1_notcmp46122_push95_conv266_out_feedback_out_95),
        .in_feedback_valid_in_95(i_llvm_fpga_push_i1_notcmp46122_push95_conv266_out_feedback_valid_out_95),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_backStall),
        .in_valid_in(SE_out_coalesced_delay_4_fifo_V7),
        .out_data_out(i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_out_data_out),
        .out_feedback_stall_out_95(i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_out_feedback_stall_out_95),
        .out_stall_out(i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231(STALLENABLE,2579)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_fromReg0 <= SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_fromReg1 <= SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_consumed0 = (~ (SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_backStall) & SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_wireValid) | SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_consumed1 = (~ (SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_backStall) & SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_wireValid) | SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_StallValid = SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_backStall & SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_wireValid;
    assign SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_toReg0 = SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_StallValid & SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_toReg1 = SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_StallValid & SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_or0 = SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_wireStall = ~ (SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_consumed1 & SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_or0);
    assign SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_backStall = SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_V0 = SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_V1 = SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_wireValid = i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_out_valid_out;

    // SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270(STALLENABLE,2640)
    // Valid signal propagation
    assign SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_V0 = SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_wireValid;
    // Backward Stall generation
    assign SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_backStall = i_llvm_fpga_push_i1_notcmp41130_push98_conv270_out_stall_out | ~ (SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_wireValid);
    // Computing multiple Valid(s)
    assign SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_wireValid = SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_V;

    // SE_out_i_llvm_fpga_push_i1_notcmp41130_push98_conv270(STALLENABLE,2641)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_wireValid = i_llvm_fpga_push_i1_notcmp41130_push98_conv270_out_valid_out;

    // i_llvm_fpga_push_i1_notcmp41130_push98_conv270(BLACKBOX,190)@131
    // in in_stall_in@20000000
    // out out_data_out@132
    // out out_feedback_out_98@20000000
    // out out_feedback_valid_out_98@20000000
    // out out_stall_out@20000000
    // out out_valid_out@132
    conv2_i_llvm_fpga_push_i1_notcmp41130_push98_0 thei_llvm_fpga_push_i1_notcmp41130_push98_conv270 (
        .in_data_in(SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_D0),
        .in_feedback_stall_in_98(i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_out_feedback_stall_out_98),
        .in_keep_going(SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_backStall),
        .in_valid_in(SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_V0),
        .out_data_out(),
        .out_feedback_out_98(i_llvm_fpga_push_i1_notcmp41130_push98_conv270_out_feedback_out_98),
        .out_feedback_valid_out_98(i_llvm_fpga_push_i1_notcmp41130_push98_conv270_out_feedback_valid_out_98),
        .out_stall_out(i_llvm_fpga_push_i1_notcmp41130_push98_conv270_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i1_notcmp41130_push98_conv270_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231(BLACKBOX,159)@130
    // in in_stall_in@20000000
    // out out_data_out@131
    // out out_feedback_stall_out_98@20000000
    // out out_stall_out@20000000
    // out out_valid_out@131
    conv2_i_llvm_fpga_pop_i1_notcmp41130_pop98_0 thei_llvm_fpga_pop_i1_notcmp41130_pop98_conv231 (
        .in_data_in(SR_SE_out_coalesced_delay_4_fifo_D16),
        .in_dir(SR_SE_out_coalesced_delay_4_fifo_D7),
        .in_feedback_in_98(i_llvm_fpga_push_i1_notcmp41130_push98_conv270_out_feedback_out_98),
        .in_feedback_valid_in_98(i_llvm_fpga_push_i1_notcmp41130_push98_conv270_out_feedback_valid_out_98),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_backStall),
        .in_valid_in(SE_out_coalesced_delay_4_fifo_V6),
        .out_data_out(i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_out_data_out),
        .out_feedback_stall_out_98(i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_out_feedback_stall_out_98),
        .out_stall_out(i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214(STALLENABLE,2577)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_fromReg0 <= SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_fromReg1 <= SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_consumed0 = (~ (SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_backStall) & SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_wireValid) | SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_consumed1 = (~ (SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_backStall) & SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_wireValid) | SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_StallValid = SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_backStall & SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_wireValid;
    assign SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_toReg0 = SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_StallValid & SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_toReg1 = SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_StallValid & SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_or0 = SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_wireStall = ~ (SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_consumed1 & SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_or0);
    assign SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_backStall = SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_V0 = SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_V1 = SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_wireValid = i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_out_valid_out;

    // SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251(STALLENABLE,2638)
    // Valid signal propagation
    assign SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_V0 = SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_wireValid;
    // Backward Stall generation
    assign SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_backStall = i_llvm_fpga_push_i1_notcmp36138_push105_conv251_out_stall_out | ~ (SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_wireValid);
    // Computing multiple Valid(s)
    assign SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_wireValid = SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_V;

    // SE_out_i_llvm_fpga_push_i1_notcmp36138_push105_conv251(STALLENABLE,2639)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_wireValid = i_llvm_fpga_push_i1_notcmp36138_push105_conv251_out_valid_out;

    // i_llvm_fpga_push_i1_notcmp36138_push105_conv251(BLACKBOX,189)@131
    // in in_stall_in@20000000
    // out out_data_out@132
    // out out_feedback_out_105@20000000
    // out out_feedback_valid_out_105@20000000
    // out out_stall_out@20000000
    // out out_valid_out@132
    conv2_i_llvm_fpga_push_i1_notcmp36138_push105_0 thei_llvm_fpga_push_i1_notcmp36138_push105_conv251 (
        .in_data_in(SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_D0),
        .in_feedback_stall_in_105(i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_out_feedback_stall_out_105),
        .in_keep_going(SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_backStall),
        .in_valid_in(SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_V0),
        .out_data_out(),
        .out_feedback_out_105(i_llvm_fpga_push_i1_notcmp36138_push105_conv251_out_feedback_out_105),
        .out_feedback_valid_out_105(i_llvm_fpga_push_i1_notcmp36138_push105_conv251_out_feedback_valid_out_105),
        .out_stall_out(i_llvm_fpga_push_i1_notcmp36138_push105_conv251_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i1_notcmp36138_push105_conv251_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214(BLACKBOX,158)@130
    // in in_stall_in@20000000
    // out out_data_out@131
    // out out_feedback_stall_out_105@20000000
    // out out_stall_out@20000000
    // out out_valid_out@131
    conv2_i_llvm_fpga_pop_i1_notcmp36138_pop105_0 thei_llvm_fpga_pop_i1_notcmp36138_pop105_conv214 (
        .in_data_in(SR_SE_out_coalesced_delay_4_fifo_D15),
        .in_dir(SR_SE_out_coalesced_delay_4_fifo_D6),
        .in_feedback_in_105(i_llvm_fpga_push_i1_notcmp36138_push105_conv251_out_feedback_out_105),
        .in_feedback_valid_in_105(i_llvm_fpga_push_i1_notcmp36138_push105_conv251_out_feedback_valid_out_105),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_backStall),
        .in_valid_in(SE_out_coalesced_delay_4_fifo_V5),
        .out_data_out(i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_out_data_out),
        .out_feedback_stall_out_105(i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_out_feedback_stall_out_105),
        .out_stall_out(i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216(STALLENABLE,2563)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_fromReg0 <= SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_fromReg1 <= SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_consumed0 = (~ (SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_backStall) & SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_wireValid) | SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_consumed1 = (~ (SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_backStall) & SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_wireValid) | SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_StallValid = SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_backStall & SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_wireValid;
    assign SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_toReg0 = SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_StallValid & SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_toReg1 = SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_StallValid & SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_or0 = SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_wireStall = ~ (SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_consumed1 & SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_or0);
    assign SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_backStall = SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_V0 = SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_V1 = SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_wireValid = i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_out_valid_out;

    // SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253(STALLENABLE,2622)
    // Valid signal propagation
    assign SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_V0 = SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_wireValid;
    // Backward Stall generation
    assign SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_backStall = i_llvm_fpga_push_i1_exitcond3171_push82_conv253_out_stall_out | ~ (SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_wireValid);
    // Computing multiple Valid(s)
    assign SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_wireValid = SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_V;

    // SE_out_i_llvm_fpga_push_i1_exitcond3171_push82_conv253(STALLENABLE,2623)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_wireValid = i_llvm_fpga_push_i1_exitcond3171_push82_conv253_out_valid_out;

    // i_llvm_fpga_push_i1_exitcond3171_push82_conv253(BLACKBOX,181)@131
    // in in_stall_in@20000000
    // out out_data_out@132
    // out out_feedback_out_82@20000000
    // out out_feedback_valid_out_82@20000000
    // out out_stall_out@20000000
    // out out_valid_out@132
    conv2_i_llvm_fpga_push_i1_exitcond3171_push82_0 thei_llvm_fpga_push_i1_exitcond3171_push82_conv253 (
        .in_data_in(SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_D0),
        .in_feedback_stall_in_82(i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_out_feedback_stall_out_82),
        .in_keep_going(SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_backStall),
        .in_valid_in(SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_V0),
        .out_data_out(),
        .out_feedback_out_82(i_llvm_fpga_push_i1_exitcond3171_push82_conv253_out_feedback_out_82),
        .out_feedback_valid_out_82(i_llvm_fpga_push_i1_exitcond3171_push82_conv253_out_feedback_valid_out_82),
        .out_stall_out(i_llvm_fpga_push_i1_exitcond3171_push82_conv253_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i1_exitcond3171_push82_conv253_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216(BLACKBOX,151)@130
    // in in_stall_in@20000000
    // out out_data_out@131
    // out out_feedback_stall_out_82@20000000
    // out out_stall_out@20000000
    // out out_valid_out@131
    conv2_i_llvm_fpga_pop_i1_exitcond3171_pop82_0 thei_llvm_fpga_pop_i1_exitcond3171_pop82_conv216 (
        .in_data_in(SR_SE_out_coalesced_delay_4_fifo_D14),
        .in_dir(SR_SE_out_coalesced_delay_4_fifo_D5),
        .in_feedback_in_82(i_llvm_fpga_push_i1_exitcond3171_push82_conv253_out_feedback_out_82),
        .in_feedback_valid_in_82(i_llvm_fpga_push_i1_exitcond3171_push82_conv253_out_feedback_valid_out_82),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_backStall),
        .in_valid_in(SE_out_coalesced_delay_4_fifo_V4),
        .out_data_out(i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_out_data_out),
        .out_feedback_stall_out_82(i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_out_feedback_stall_out_82),
        .out_stall_out(i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220(STALLENABLE,2561)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_fromReg0 <= SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_fromReg1 <= SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_consumed0 = (~ (SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_backStall) & SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_wireValid) | SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_consumed1 = (~ (SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_backStall) & SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_wireValid) | SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_StallValid = SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_backStall & SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_wireValid;
    assign SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_toReg0 = SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_StallValid & SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_toReg1 = SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_StallValid & SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_or0 = SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_wireStall = ~ (SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_consumed1 & SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_or0);
    assign SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_backStall = SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_V0 = SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_V1 = SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_wireValid = i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_out_valid_out;

    // SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257(STALLENABLE,2620)
    // Valid signal propagation
    assign SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_V0 = SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_wireValid;
    // Backward Stall generation
    assign SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_backStall = i_llvm_fpga_push_i1_exitcond2891_push86_conv257_out_stall_out | ~ (SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_wireValid);
    // Computing multiple Valid(s)
    assign SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_wireValid = SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_V;

    // SE_out_i_llvm_fpga_push_i1_exitcond2891_push86_conv257(STALLENABLE,2621)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_wireValid = i_llvm_fpga_push_i1_exitcond2891_push86_conv257_out_valid_out;

    // i_llvm_fpga_push_i1_exitcond2891_push86_conv257(BLACKBOX,180)@131
    // in in_stall_in@20000000
    // out out_data_out@132
    // out out_feedback_out_86@20000000
    // out out_feedback_valid_out_86@20000000
    // out out_stall_out@20000000
    // out out_valid_out@132
    conv2_i_llvm_fpga_push_i1_exitcond2891_push86_0 thei_llvm_fpga_push_i1_exitcond2891_push86_conv257 (
        .in_data_in(SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_D0),
        .in_feedback_stall_in_86(i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_out_feedback_stall_out_86),
        .in_keep_going(SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_backStall),
        .in_valid_in(SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_V0),
        .out_data_out(),
        .out_feedback_out_86(i_llvm_fpga_push_i1_exitcond2891_push86_conv257_out_feedback_out_86),
        .out_feedback_valid_out_86(i_llvm_fpga_push_i1_exitcond2891_push86_conv257_out_feedback_valid_out_86),
        .out_stall_out(i_llvm_fpga_push_i1_exitcond2891_push86_conv257_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i1_exitcond2891_push86_conv257_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220(BLACKBOX,150)@130
    // in in_stall_in@20000000
    // out out_data_out@131
    // out out_feedback_stall_out_86@20000000
    // out out_stall_out@20000000
    // out out_valid_out@131
    conv2_i_llvm_fpga_pop_i1_exitcond2891_pop86_0 thei_llvm_fpga_pop_i1_exitcond2891_pop86_conv220 (
        .in_data_in(SR_SE_out_coalesced_delay_4_fifo_D13),
        .in_dir(SR_SE_out_coalesced_delay_4_fifo_D4),
        .in_feedback_in_86(i_llvm_fpga_push_i1_exitcond2891_push86_conv257_out_feedback_out_86),
        .in_feedback_valid_in_86(i_llvm_fpga_push_i1_exitcond2891_push86_conv257_out_feedback_valid_out_86),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_backStall),
        .in_valid_in(SE_out_coalesced_delay_4_fifo_V3),
        .out_data_out(i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_out_data_out),
        .out_feedback_stall_out_86(i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_out_feedback_stall_out_86),
        .out_stall_out(i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227(STALLENABLE,2559)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_fromReg0 <= SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_fromReg1 <= SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_consumed0 = (~ (SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_backStall) & SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_wireValid) | SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_consumed1 = (~ (SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_backStall) & SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_wireValid) | SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_StallValid = SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_backStall & SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_wireValid;
    assign SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_toReg0 = SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_StallValid & SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_toReg1 = SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_StallValid & SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_or0 = SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_wireStall = ~ (SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_consumed1 & SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_or0);
    assign SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_backStall = SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_V0 = SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_V1 = SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_wireValid = i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_out_valid_out;

    // SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265(STALLENABLE,2618)
    // Valid signal propagation
    assign SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_V0 = SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_wireValid;
    // Backward Stall generation
    assign SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_backStall = i_llvm_fpga_push_i1_exitcond25119_push94_conv265_out_stall_out | ~ (SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_wireValid);
    // Computing multiple Valid(s)
    assign SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_wireValid = SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_V;

    // SE_out_i_llvm_fpga_push_i1_exitcond25119_push94_conv265(STALLENABLE,2619)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_wireValid = i_llvm_fpga_push_i1_exitcond25119_push94_conv265_out_valid_out;

    // i_llvm_fpga_push_i1_exitcond25119_push94_conv265(BLACKBOX,179)@131
    // in in_stall_in@20000000
    // out out_data_out@132
    // out out_feedback_out_94@20000000
    // out out_feedback_valid_out_94@20000000
    // out out_stall_out@20000000
    // out out_valid_out@132
    conv2_i_llvm_fpga_push_i1_exitcond25119_push94_0 thei_llvm_fpga_push_i1_exitcond25119_push94_conv265 (
        .in_data_in(SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_D0),
        .in_feedback_stall_in_94(i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_out_feedback_stall_out_94),
        .in_keep_going(SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_backStall),
        .in_valid_in(SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_V0),
        .out_data_out(),
        .out_feedback_out_94(i_llvm_fpga_push_i1_exitcond25119_push94_conv265_out_feedback_out_94),
        .out_feedback_valid_out_94(i_llvm_fpga_push_i1_exitcond25119_push94_conv265_out_feedback_valid_out_94),
        .out_stall_out(i_llvm_fpga_push_i1_exitcond25119_push94_conv265_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i1_exitcond25119_push94_conv265_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227(BLACKBOX,149)@130
    // in in_stall_in@20000000
    // out out_data_out@131
    // out out_feedback_stall_out_94@20000000
    // out out_stall_out@20000000
    // out out_valid_out@131
    conv2_i_llvm_fpga_pop_i1_exitcond25119_pop94_0 thei_llvm_fpga_pop_i1_exitcond25119_pop94_conv227 (
        .in_data_in(SR_SE_out_coalesced_delay_4_fifo_D12),
        .in_dir(SR_SE_out_coalesced_delay_4_fifo_D3),
        .in_feedback_in_94(i_llvm_fpga_push_i1_exitcond25119_push94_conv265_out_feedback_out_94),
        .in_feedback_valid_in_94(i_llvm_fpga_push_i1_exitcond25119_push94_conv265_out_feedback_valid_out_94),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_backStall),
        .in_valid_in(SE_out_coalesced_delay_4_fifo_V2),
        .out_data_out(i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_out_data_out),
        .out_feedback_stall_out_94(i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_out_feedback_stall_out_94),
        .out_stall_out(i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230(STALLENABLE,2557)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_fromReg0 <= SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_fromReg1 <= SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_consumed0 = (~ (SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_backStall) & SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_wireValid) | SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_consumed1 = (~ (SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_backStall) & SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_wireValid) | SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_StallValid = SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_backStall & SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_wireValid;
    assign SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_toReg0 = SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_StallValid & SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_toReg1 = SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_StallValid & SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_or0 = SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_wireStall = ~ (SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_consumed1 & SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_or0);
    assign SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_backStall = SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_V0 = SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_V1 = SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_wireValid = i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_out_valid_out;

    // SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269(STALLENABLE,2616)
    // Valid signal propagation
    assign SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_V0 = SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_wireValid;
    // Backward Stall generation
    assign SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_backStall = i_llvm_fpga_push_i1_exitcond22128_push97_conv269_out_stall_out | ~ (SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_wireValid);
    // Computing multiple Valid(s)
    assign SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_wireValid = SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_V;

    // SE_out_i_llvm_fpga_push_i1_exitcond22128_push97_conv269(STALLENABLE,2617)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_wireValid = i_llvm_fpga_push_i1_exitcond22128_push97_conv269_out_valid_out;

    // i_llvm_fpga_push_i1_exitcond22128_push97_conv269(BLACKBOX,178)@131
    // in in_stall_in@20000000
    // out out_data_out@132
    // out out_feedback_out_97@20000000
    // out out_feedback_valid_out_97@20000000
    // out out_stall_out@20000000
    // out out_valid_out@132
    conv2_i_llvm_fpga_push_i1_exitcond22128_push97_0 thei_llvm_fpga_push_i1_exitcond22128_push97_conv269 (
        .in_data_in(SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_D0),
        .in_feedback_stall_in_97(i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_out_feedback_stall_out_97),
        .in_keep_going(SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_backStall),
        .in_valid_in(SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_V0),
        .out_data_out(),
        .out_feedback_out_97(i_llvm_fpga_push_i1_exitcond22128_push97_conv269_out_feedback_out_97),
        .out_feedback_valid_out_97(i_llvm_fpga_push_i1_exitcond22128_push97_conv269_out_feedback_valid_out_97),
        .out_stall_out(i_llvm_fpga_push_i1_exitcond22128_push97_conv269_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i1_exitcond22128_push97_conv269_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230(BLACKBOX,148)@130
    // in in_stall_in@20000000
    // out out_data_out@131
    // out out_feedback_stall_out_97@20000000
    // out out_stall_out@20000000
    // out out_valid_out@131
    conv2_i_llvm_fpga_pop_i1_exitcond22128_pop97_0 thei_llvm_fpga_pop_i1_exitcond22128_pop97_conv230 (
        .in_data_in(SR_SE_out_coalesced_delay_4_fifo_D11),
        .in_dir(SR_SE_out_coalesced_delay_4_fifo_D2),
        .in_feedback_in_97(i_llvm_fpga_push_i1_exitcond22128_push97_conv269_out_feedback_out_97),
        .in_feedback_valid_in_97(i_llvm_fpga_push_i1_exitcond22128_push97_conv269_out_feedback_valid_out_97),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_backStall),
        .in_valid_in(SE_out_coalesced_delay_4_fifo_V1),
        .out_data_out(i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_out_data_out),
        .out_feedback_stall_out_97(i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_out_feedback_stall_out_97),
        .out_stall_out(i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213(STALLENABLE,2555)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_fromReg0 <= SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_fromReg1 <= SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_consumed0 = (~ (SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_backStall) & SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_wireValid) | SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_consumed1 = (~ (SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_backStall) & SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_wireValid) | SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_StallValid = SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_backStall & SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_wireValid;
    assign SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_toReg0 = SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_StallValid & SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_toReg1 = SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_StallValid & SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_or0 = SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_wireStall = ~ (SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_consumed1 & SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_or0);
    assign SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_backStall = SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_V0 = SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_V1 = SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_wireValid = i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_out_valid_out;

    // SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250(STALLENABLE,2614)
    // Valid signal propagation
    assign SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_V0 = SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_wireValid;
    // Backward Stall generation
    assign SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_backStall = i_llvm_fpga_push_i1_exitcond19137_push104_conv250_out_stall_out | ~ (SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_wireValid);
    // Computing multiple Valid(s)
    assign SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_wireValid = SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_V;

    // SE_out_i_llvm_fpga_push_i1_exitcond19137_push104_conv250(STALLENABLE,2615)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_wireValid = i_llvm_fpga_push_i1_exitcond19137_push104_conv250_out_valid_out;

    // i_llvm_fpga_push_i1_exitcond19137_push104_conv250(BLACKBOX,177)@131
    // in in_stall_in@20000000
    // out out_data_out@132
    // out out_feedback_out_104@20000000
    // out out_feedback_valid_out_104@20000000
    // out out_stall_out@20000000
    // out out_valid_out@132
    conv2_i_llvm_fpga_push_i1_exitcond19137_push104_0 thei_llvm_fpga_push_i1_exitcond19137_push104_conv250 (
        .in_data_in(SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_D0),
        .in_feedback_stall_in_104(i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_out_feedback_stall_out_104),
        .in_keep_going(SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_backStall),
        .in_valid_in(SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_V0),
        .out_data_out(),
        .out_feedback_out_104(i_llvm_fpga_push_i1_exitcond19137_push104_conv250_out_feedback_out_104),
        .out_feedback_valid_out_104(i_llvm_fpga_push_i1_exitcond19137_push104_conv250_out_feedback_valid_out_104),
        .out_stall_out(i_llvm_fpga_push_i1_exitcond19137_push104_conv250_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i1_exitcond19137_push104_conv250_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213(BLACKBOX,147)@130
    // in in_stall_in@20000000
    // out out_data_out@131
    // out out_feedback_stall_out_104@20000000
    // out out_stall_out@20000000
    // out out_valid_out@131
    conv2_i_llvm_fpga_pop_i1_exitcond19137_pop104_0 thei_llvm_fpga_pop_i1_exitcond19137_pop104_conv213 (
        .in_data_in(SR_SE_out_coalesced_delay_4_fifo_D0),
        .in_dir(SR_SE_out_coalesced_delay_4_fifo_D1),
        .in_feedback_in_104(i_llvm_fpga_push_i1_exitcond19137_push104_conv250_out_feedback_out_104),
        .in_feedback_valid_in_104(i_llvm_fpga_push_i1_exitcond19137_push104_conv250_out_feedback_valid_out_104),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_backStall),
        .in_valid_in(SE_out_coalesced_delay_4_fifo_V0),
        .out_data_out(i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_out_data_out),
        .out_feedback_stall_out_104(i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_out_feedback_stall_out_104),
        .out_stall_out(i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_coalesced_delay_4_fifo(STALLENABLE,3089)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_coalesced_delay_4_fifo_fromReg0 <= '0;
            SE_out_coalesced_delay_4_fifo_fromReg1 <= '0;
            SE_out_coalesced_delay_4_fifo_fromReg2 <= '0;
            SE_out_coalesced_delay_4_fifo_fromReg3 <= '0;
            SE_out_coalesced_delay_4_fifo_fromReg4 <= '0;
            SE_out_coalesced_delay_4_fifo_fromReg5 <= '0;
            SE_out_coalesced_delay_4_fifo_fromReg6 <= '0;
            SE_out_coalesced_delay_4_fifo_fromReg7 <= '0;
            SE_out_coalesced_delay_4_fifo_fromReg8 <= '0;
            SE_out_coalesced_delay_4_fifo_fromReg9 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_coalesced_delay_4_fifo_fromReg0 <= SE_out_coalesced_delay_4_fifo_toReg0;
            // Successor 1
            SE_out_coalesced_delay_4_fifo_fromReg1 <= SE_out_coalesced_delay_4_fifo_toReg1;
            // Successor 2
            SE_out_coalesced_delay_4_fifo_fromReg2 <= SE_out_coalesced_delay_4_fifo_toReg2;
            // Successor 3
            SE_out_coalesced_delay_4_fifo_fromReg3 <= SE_out_coalesced_delay_4_fifo_toReg3;
            // Successor 4
            SE_out_coalesced_delay_4_fifo_fromReg4 <= SE_out_coalesced_delay_4_fifo_toReg4;
            // Successor 5
            SE_out_coalesced_delay_4_fifo_fromReg5 <= SE_out_coalesced_delay_4_fifo_toReg5;
            // Successor 6
            SE_out_coalesced_delay_4_fifo_fromReg6 <= SE_out_coalesced_delay_4_fifo_toReg6;
            // Successor 7
            SE_out_coalesced_delay_4_fifo_fromReg7 <= SE_out_coalesced_delay_4_fifo_toReg7;
            // Successor 8
            SE_out_coalesced_delay_4_fifo_fromReg8 <= SE_out_coalesced_delay_4_fifo_toReg8;
            // Successor 9
            SE_out_coalesced_delay_4_fifo_fromReg9 <= SE_out_coalesced_delay_4_fifo_toReg9;
        end
    end
    // Input Stall processing
    assign SE_out_coalesced_delay_4_fifo_consumed0 = (~ (i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_out_stall_out) & SE_out_coalesced_delay_4_fifo_wireValid) | SE_out_coalesced_delay_4_fifo_fromReg0;
    assign SE_out_coalesced_delay_4_fifo_consumed1 = (~ (i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_out_stall_out) & SE_out_coalesced_delay_4_fifo_wireValid) | SE_out_coalesced_delay_4_fifo_fromReg1;
    assign SE_out_coalesced_delay_4_fifo_consumed2 = (~ (i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_out_stall_out) & SE_out_coalesced_delay_4_fifo_wireValid) | SE_out_coalesced_delay_4_fifo_fromReg2;
    assign SE_out_coalesced_delay_4_fifo_consumed3 = (~ (i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_out_stall_out) & SE_out_coalesced_delay_4_fifo_wireValid) | SE_out_coalesced_delay_4_fifo_fromReg3;
    assign SE_out_coalesced_delay_4_fifo_consumed4 = (~ (i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_out_stall_out) & SE_out_coalesced_delay_4_fifo_wireValid) | SE_out_coalesced_delay_4_fifo_fromReg4;
    assign SE_out_coalesced_delay_4_fifo_consumed5 = (~ (i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_out_stall_out) & SE_out_coalesced_delay_4_fifo_wireValid) | SE_out_coalesced_delay_4_fifo_fromReg5;
    assign SE_out_coalesced_delay_4_fifo_consumed6 = (~ (i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_out_stall_out) & SE_out_coalesced_delay_4_fifo_wireValid) | SE_out_coalesced_delay_4_fifo_fromReg6;
    assign SE_out_coalesced_delay_4_fifo_consumed7 = (~ (i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_out_stall_out) & SE_out_coalesced_delay_4_fifo_wireValid) | SE_out_coalesced_delay_4_fifo_fromReg7;
    assign SE_out_coalesced_delay_4_fifo_consumed8 = (~ (i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_out_stall_out) & SE_out_coalesced_delay_4_fifo_wireValid) | SE_out_coalesced_delay_4_fifo_fromReg8;
    assign SE_out_coalesced_delay_4_fifo_consumed9 = (~ (i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_out_stall_out) & SE_out_coalesced_delay_4_fifo_wireValid) | SE_out_coalesced_delay_4_fifo_fromReg9;
    // Consuming
    assign SE_out_coalesced_delay_4_fifo_StallValid = SE_out_coalesced_delay_4_fifo_backStall & SE_out_coalesced_delay_4_fifo_wireValid;
    assign SE_out_coalesced_delay_4_fifo_toReg0 = SE_out_coalesced_delay_4_fifo_StallValid & SE_out_coalesced_delay_4_fifo_consumed0;
    assign SE_out_coalesced_delay_4_fifo_toReg1 = SE_out_coalesced_delay_4_fifo_StallValid & SE_out_coalesced_delay_4_fifo_consumed1;
    assign SE_out_coalesced_delay_4_fifo_toReg2 = SE_out_coalesced_delay_4_fifo_StallValid & SE_out_coalesced_delay_4_fifo_consumed2;
    assign SE_out_coalesced_delay_4_fifo_toReg3 = SE_out_coalesced_delay_4_fifo_StallValid & SE_out_coalesced_delay_4_fifo_consumed3;
    assign SE_out_coalesced_delay_4_fifo_toReg4 = SE_out_coalesced_delay_4_fifo_StallValid & SE_out_coalesced_delay_4_fifo_consumed4;
    assign SE_out_coalesced_delay_4_fifo_toReg5 = SE_out_coalesced_delay_4_fifo_StallValid & SE_out_coalesced_delay_4_fifo_consumed5;
    assign SE_out_coalesced_delay_4_fifo_toReg6 = SE_out_coalesced_delay_4_fifo_StallValid & SE_out_coalesced_delay_4_fifo_consumed6;
    assign SE_out_coalesced_delay_4_fifo_toReg7 = SE_out_coalesced_delay_4_fifo_StallValid & SE_out_coalesced_delay_4_fifo_consumed7;
    assign SE_out_coalesced_delay_4_fifo_toReg8 = SE_out_coalesced_delay_4_fifo_StallValid & SE_out_coalesced_delay_4_fifo_consumed8;
    assign SE_out_coalesced_delay_4_fifo_toReg9 = SE_out_coalesced_delay_4_fifo_StallValid & SE_out_coalesced_delay_4_fifo_consumed9;
    // Backward Stall generation
    assign SE_out_coalesced_delay_4_fifo_or0 = SE_out_coalesced_delay_4_fifo_consumed0;
    assign SE_out_coalesced_delay_4_fifo_or1 = SE_out_coalesced_delay_4_fifo_consumed1 & SE_out_coalesced_delay_4_fifo_or0;
    assign SE_out_coalesced_delay_4_fifo_or2 = SE_out_coalesced_delay_4_fifo_consumed2 & SE_out_coalesced_delay_4_fifo_or1;
    assign SE_out_coalesced_delay_4_fifo_or3 = SE_out_coalesced_delay_4_fifo_consumed3 & SE_out_coalesced_delay_4_fifo_or2;
    assign SE_out_coalesced_delay_4_fifo_or4 = SE_out_coalesced_delay_4_fifo_consumed4 & SE_out_coalesced_delay_4_fifo_or3;
    assign SE_out_coalesced_delay_4_fifo_or5 = SE_out_coalesced_delay_4_fifo_consumed5 & SE_out_coalesced_delay_4_fifo_or4;
    assign SE_out_coalesced_delay_4_fifo_or6 = SE_out_coalesced_delay_4_fifo_consumed6 & SE_out_coalesced_delay_4_fifo_or5;
    assign SE_out_coalesced_delay_4_fifo_or7 = SE_out_coalesced_delay_4_fifo_consumed7 & SE_out_coalesced_delay_4_fifo_or6;
    assign SE_out_coalesced_delay_4_fifo_or8 = SE_out_coalesced_delay_4_fifo_consumed8 & SE_out_coalesced_delay_4_fifo_or7;
    assign SE_out_coalesced_delay_4_fifo_wireStall = ~ (SE_out_coalesced_delay_4_fifo_consumed9 & SE_out_coalesced_delay_4_fifo_or8);
    assign SE_out_coalesced_delay_4_fifo_backStall = SE_out_coalesced_delay_4_fifo_wireStall;
    // Valid signal propagation
    assign SE_out_coalesced_delay_4_fifo_V0 = SE_out_coalesced_delay_4_fifo_wireValid & ~ (SE_out_coalesced_delay_4_fifo_fromReg0);
    assign SE_out_coalesced_delay_4_fifo_V1 = SE_out_coalesced_delay_4_fifo_wireValid & ~ (SE_out_coalesced_delay_4_fifo_fromReg1);
    assign SE_out_coalesced_delay_4_fifo_V2 = SE_out_coalesced_delay_4_fifo_wireValid & ~ (SE_out_coalesced_delay_4_fifo_fromReg2);
    assign SE_out_coalesced_delay_4_fifo_V3 = SE_out_coalesced_delay_4_fifo_wireValid & ~ (SE_out_coalesced_delay_4_fifo_fromReg3);
    assign SE_out_coalesced_delay_4_fifo_V4 = SE_out_coalesced_delay_4_fifo_wireValid & ~ (SE_out_coalesced_delay_4_fifo_fromReg4);
    assign SE_out_coalesced_delay_4_fifo_V5 = SE_out_coalesced_delay_4_fifo_wireValid & ~ (SE_out_coalesced_delay_4_fifo_fromReg5);
    assign SE_out_coalesced_delay_4_fifo_V6 = SE_out_coalesced_delay_4_fifo_wireValid & ~ (SE_out_coalesced_delay_4_fifo_fromReg6);
    assign SE_out_coalesced_delay_4_fifo_V7 = SE_out_coalesced_delay_4_fifo_wireValid & ~ (SE_out_coalesced_delay_4_fifo_fromReg7);
    assign SE_out_coalesced_delay_4_fifo_V8 = SE_out_coalesced_delay_4_fifo_wireValid & ~ (SE_out_coalesced_delay_4_fifo_fromReg8);
    assign SE_out_coalesced_delay_4_fifo_V9 = SE_out_coalesced_delay_4_fifo_wireValid & ~ (SE_out_coalesced_delay_4_fifo_fromReg9);
    // Computing multiple Valid(s)
    assign SE_out_coalesced_delay_4_fifo_wireValid = SR_SE_out_coalesced_delay_4_fifo_V;

    // SE_out_i_llvm_fpga_push_i1_notcmp5676_push83_conv254(STALLENABLE,2647)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_wireValid = i_llvm_fpga_push_i1_notcmp5676_push83_conv254_out_valid_out;

    // i_llvm_fpga_push_i1_notcmp5676_push83_conv254(BLACKBOX,193)@131
    // in in_stall_in@20000000
    // out out_data_out@132
    // out out_feedback_out_83@20000000
    // out out_feedback_valid_out_83@20000000
    // out out_stall_out@20000000
    // out out_valid_out@132
    conv2_i_llvm_fpga_push_i1_notcmp5676_push83_0 thei_llvm_fpga_push_i1_notcmp5676_push83_conv254 (
        .in_data_in(SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_D0),
        .in_feedback_stall_in_83(i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_out_feedback_stall_out_83),
        .in_keep_going(SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_backStall),
        .in_valid_in(SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_V0),
        .out_data_out(),
        .out_feedback_out_83(i_llvm_fpga_push_i1_notcmp5676_push83_conv254_out_feedback_out_83),
        .out_feedback_valid_out_83(i_llvm_fpga_push_i1_notcmp5676_push83_conv254_out_feedback_valid_out_83),
        .out_stall_out(i_llvm_fpga_push_i1_notcmp5676_push83_conv254_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i1_notcmp5676_push83_conv254_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217(BLACKBOX,162)@130
    // in in_stall_in@20000000
    // out out_data_out@131
    // out out_feedback_stall_out_83@20000000
    // out out_stall_out@20000000
    // out out_valid_out@131
    conv2_i_llvm_fpga_pop_i1_notcmp5676_pop83_0 thei_llvm_fpga_pop_i1_notcmp5676_pop83_conv217 (
        .in_data_in(SR_SE_out_coalesced_delay_4_fifo_D19),
        .in_dir(SR_SE_out_coalesced_delay_4_fifo_D10),
        .in_feedback_in_83(i_llvm_fpga_push_i1_notcmp5676_push83_conv254_out_feedback_out_83),
        .in_feedback_valid_in_83(i_llvm_fpga_push_i1_notcmp5676_push83_conv254_out_feedback_valid_out_83),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_backStall),
        .in_valid_in(SE_out_coalesced_delay_4_fifo_V9),
        .out_data_out(i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_out_data_out),
        .out_feedback_stall_out_83(i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_out_feedback_stall_out_83),
        .out_stall_out(i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217(BITJOIN,2362)
    assign bubble_join_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_q = i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217(BITSELECT,2363)
    assign bubble_select_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_b = $unsigned(bubble_join_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_q[0:0]);

    // SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217(STALLENABLE,2585)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_fromReg0 <= SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_fromReg1 <= SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_consumed0 = (~ (SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_backStall) & SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_wireValid) | SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_consumed1 = (~ (SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_backStall) & SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_wireValid) | SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_StallValid = SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_backStall & SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_wireValid;
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_toReg0 = SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_StallValid & SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_toReg1 = SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_StallValid & SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_or0 = SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_consumed0;
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_wireStall = ~ (SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_consumed1 & SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_or0);
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_backStall = SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_V0 = SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_V1 = SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_wireValid & ~ (SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_wireValid = i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_out_valid_out;

    // SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254(STALLENABLE,2646)
    // Valid signal propagation
    assign SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_V0 = SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_wireValid;
    // Backward Stall generation
    assign SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_backStall = i_llvm_fpga_push_i1_notcmp5676_push83_conv254_out_stall_out | ~ (SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_wireValid);
    // Computing multiple Valid(s)
    assign SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_wireValid = SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_V;

    // SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254(STALLREG,3488)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_r_valid <= 1'b0;
            SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_r_data0 <= 1'bx;
            SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_r_valid <= SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_backStall & (SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_r_valid | SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_i_valid);

            if (SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_r_data0 <= $unsigned(bubble_select_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_b);
                SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_r_data1 <= $unsigned(bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_and0 = SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_V1;
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_i_valid = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V11 & SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_and0;
    // Stall signal propagation
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_backStall = SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_r_valid | ~ (SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_i_valid);

    // Valid
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_V = SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_r_valid : SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_i_valid;

    // Data0
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_D0 = SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_r_data0 : bubble_select_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_b;
    // Data1
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_D1 = SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_r_data1 : bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b;

    // bubble_join_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221(BITJOIN,2358)
    assign bubble_join_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_q = i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221(BITSELECT,2359)
    assign bubble_select_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_b = $unsigned(bubble_join_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_q[0:0]);

    // SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258(STALLREG,3487)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_r_valid <= 1'b0;
            SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_r_data0 <= 1'bx;
            SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_r_valid <= SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_backStall & (SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_r_valid | SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_i_valid);

            if (SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_r_data0 <= $unsigned(bubble_select_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_b);
                SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_r_data1 <= $unsigned(bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_and0 = SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_V1;
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_i_valid = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V10 & SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_and0;
    // Stall signal propagation
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_backStall = SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_r_valid | ~ (SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_i_valid);

    // Valid
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_V = SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_r_valid : SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_i_valid;

    // Data0
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_D0 = SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_r_data0 : bubble_select_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_b;
    // Data1
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_D1 = SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_r_data1 : bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b;

    // bubble_join_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228(BITJOIN,2354)
    assign bubble_join_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_q = i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228(BITSELECT,2355)
    assign bubble_select_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_b = $unsigned(bubble_join_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_q[0:0]);

    // SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266(STALLREG,3486)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_r_valid <= 1'b0;
            SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_r_data0 <= 1'bx;
            SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_r_valid <= SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_backStall & (SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_r_valid | SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_i_valid);

            if (SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_r_data0 <= $unsigned(bubble_select_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_b);
                SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_r_data1 <= $unsigned(bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_and0 = SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_V1;
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_i_valid = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V9 & SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_and0;
    // Stall signal propagation
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_backStall = SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_r_valid | ~ (SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_i_valid);

    // Valid
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_V = SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_r_valid : SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_i_valid;

    // Data0
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_D0 = SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_r_data0 : bubble_select_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_b;
    // Data1
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_D1 = SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_r_data1 : bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b;

    // bubble_join_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231(BITJOIN,2350)
    assign bubble_join_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_q = i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231(BITSELECT,2351)
    assign bubble_select_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_b = $unsigned(bubble_join_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_q[0:0]);

    // SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270(STALLREG,3485)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_r_valid <= 1'b0;
            SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_r_data0 <= 1'bx;
            SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_r_valid <= SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_backStall & (SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_r_valid | SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_i_valid);

            if (SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_r_data0 <= $unsigned(bubble_select_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_b);
                SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_r_data1 <= $unsigned(bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_and0 = SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_V1;
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_i_valid = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V8 & SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_and0;
    // Stall signal propagation
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_backStall = SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_r_valid | ~ (SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_i_valid);

    // Valid
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_V = SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_r_valid : SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_i_valid;

    // Data0
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_D0 = SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_r_data0 : bubble_select_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_b;
    // Data1
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_D1 = SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_r_data1 : bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b;

    // bubble_join_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214(BITJOIN,2346)
    assign bubble_join_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_q = i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214(BITSELECT,2347)
    assign bubble_select_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_b = $unsigned(bubble_join_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_q[0:0]);

    // SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251(STALLREG,3484)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_r_valid <= 1'b0;
            SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_r_data0 <= 1'bx;
            SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_r_valid <= SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_backStall & (SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_r_valid | SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_i_valid);

            if (SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_r_data0 <= $unsigned(bubble_select_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_b);
                SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_r_data1 <= $unsigned(bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_and0 = SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_V1;
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_i_valid = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V7 & SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_and0;
    // Stall signal propagation
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_backStall = SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_r_valid | ~ (SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_i_valid);

    // Valid
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_V = SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_r_valid : SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_i_valid;

    // Data0
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_D0 = SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_r_data0 : bubble_select_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_b;
    // Data1
    assign SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_D1 = SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_r_data1 : bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b;

    // i_llvm_fpga_mem_memdep_conv2100(BLACKBOX,142)@100
    // in in_i_stall@20000000
    // out out_lsu_memdep_o_active@20000000
    // out out_memdep_conv2_avm_address@20000000
    // out out_memdep_conv2_avm_burstcount@20000000
    // out out_memdep_conv2_avm_byteenable@20000000
    // out out_memdep_conv2_avm_enable@20000000
    // out out_memdep_conv2_avm_read@20000000
    // out out_memdep_conv2_avm_write@20000000
    // out out_memdep_conv2_avm_writedata@20000000
    // out out_o_stall@20000000
    // out out_o_valid@131
    // out out_o_writeack@131
    conv2_i_llvm_fpga_mem_memdep_0 thei_llvm_fpga_mem_memdep_conv2100 (
        .in_flush(in_flush),
        .in_i_address(SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_D0),
        .in_i_predicate(SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_D1),
        .in_i_stall(SE_out_i_llvm_fpga_mem_memdep_conv2100_backStall),
        .in_i_valid(SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_V0),
        .in_i_writedata(SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_D2),
        .in_memdep_conv2_avm_readdata(in_memdep_conv2_avm_readdata),
        .in_memdep_conv2_avm_readdatavalid(in_memdep_conv2_avm_readdatavalid),
        .in_memdep_conv2_avm_waitrequest(in_memdep_conv2_avm_waitrequest),
        .in_memdep_conv2_avm_writeack(in_memdep_conv2_avm_writeack),
        .out_lsu_memdep_o_active(i_llvm_fpga_mem_memdep_conv2100_out_lsu_memdep_o_active),
        .out_memdep_conv2_avm_address(i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_address),
        .out_memdep_conv2_avm_burstcount(i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_burstcount),
        .out_memdep_conv2_avm_byteenable(i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_byteenable),
        .out_memdep_conv2_avm_enable(i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_enable),
        .out_memdep_conv2_avm_read(i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_read),
        .out_memdep_conv2_avm_write(i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_write),
        .out_memdep_conv2_avm_writedata(i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_writedata),
        .out_o_stall(i_llvm_fpga_mem_memdep_conv2100_out_o_stall),
        .out_o_valid(i_llvm_fpga_mem_memdep_conv2100_out_o_valid),
        .out_o_writeack(i_llvm_fpga_mem_memdep_conv2100_out_o_writeack),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_i_llvm_fpga_mem_memdep_conv2100(BITJOIN,2291)
    assign bubble_join_i_llvm_fpga_mem_memdep_conv2100_q = i_llvm_fpga_mem_memdep_conv2100_out_o_writeack;

    // bubble_select_i_llvm_fpga_mem_memdep_conv2100(BITSELECT,2292)
    assign bubble_select_i_llvm_fpga_mem_memdep_conv2100_b = $unsigned(bubble_join_i_llvm_fpga_mem_memdep_conv2100_q[0:0]);

    // SE_out_i_llvm_fpga_mem_memdep_conv2100(STALLENABLE,2545)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_mem_memdep_conv2100_fromReg0 <= '0;
            SE_out_i_llvm_fpga_mem_memdep_conv2100_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_mem_memdep_conv2100_fromReg0 <= SE_out_i_llvm_fpga_mem_memdep_conv2100_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_mem_memdep_conv2100_fromReg1 <= SE_out_i_llvm_fpga_mem_memdep_conv2100_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_mem_memdep_conv2100_consumed0 = (~ (SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_backStall) & SE_out_i_llvm_fpga_mem_memdep_conv2100_wireValid) | SE_out_i_llvm_fpga_mem_memdep_conv2100_fromReg0;
    assign SE_out_i_llvm_fpga_mem_memdep_conv2100_consumed1 = (~ (SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_backStall) & SE_out_i_llvm_fpga_mem_memdep_conv2100_wireValid) | SE_out_i_llvm_fpga_mem_memdep_conv2100_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_mem_memdep_conv2100_StallValid = SE_out_i_llvm_fpga_mem_memdep_conv2100_backStall & SE_out_i_llvm_fpga_mem_memdep_conv2100_wireValid;
    assign SE_out_i_llvm_fpga_mem_memdep_conv2100_toReg0 = SE_out_i_llvm_fpga_mem_memdep_conv2100_StallValid & SE_out_i_llvm_fpga_mem_memdep_conv2100_consumed0;
    assign SE_out_i_llvm_fpga_mem_memdep_conv2100_toReg1 = SE_out_i_llvm_fpga_mem_memdep_conv2100_StallValid & SE_out_i_llvm_fpga_mem_memdep_conv2100_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_mem_memdep_conv2100_or0 = SE_out_i_llvm_fpga_mem_memdep_conv2100_consumed0;
    assign SE_out_i_llvm_fpga_mem_memdep_conv2100_wireStall = ~ (SE_out_i_llvm_fpga_mem_memdep_conv2100_consumed1 & SE_out_i_llvm_fpga_mem_memdep_conv2100_or0);
    assign SE_out_i_llvm_fpga_mem_memdep_conv2100_backStall = SE_out_i_llvm_fpga_mem_memdep_conv2100_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_mem_memdep_conv2100_V0 = SE_out_i_llvm_fpga_mem_memdep_conv2100_wireValid & ~ (SE_out_i_llvm_fpga_mem_memdep_conv2100_fromReg0);
    assign SE_out_i_llvm_fpga_mem_memdep_conv2100_V1 = SE_out_i_llvm_fpga_mem_memdep_conv2100_wireValid & ~ (SE_out_i_llvm_fpga_mem_memdep_conv2100_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_mem_memdep_conv2100_wireValid = i_llvm_fpga_mem_memdep_conv2100_out_o_valid;

    // SE_out_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101(STALLENABLE,2637)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_wireValid = i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_out_valid_out;

    // i_llvm_fpga_push_i1_memdep_phi_push79_conv2101(BLACKBOX,188)@131
    // in in_stall_in@20000000
    // out out_data_out@132
    // out out_feedback_out_79@20000000
    // out out_feedback_valid_out_79@20000000
    // out out_stall_out@20000000
    // out out_valid_out@132
    conv2_i_llvm_fpga_push_i1_memdep_phi_push79_0 thei_llvm_fpga_push_i1_memdep_phi_push79_conv2101 (
        .in_data_in(SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_D0),
        .in_feedback_stall_in_79(i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_out_feedback_stall_out_79),
        .in_keep_going(SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_backStall),
        .in_valid_in(SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_V0),
        .out_data_out(),
        .out_feedback_out_79(i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_out_feedback_out_79),
        .out_feedback_valid_out_79(i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_out_feedback_valid_out_79),
        .out_stall_out(i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101(STALLENABLE,2636)
    // Valid signal propagation
    assign SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_V0 = SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_wireValid;
    // Backward Stall generation
    assign SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_backStall = i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_out_stall_out | ~ (SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_wireValid);
    // Computing multiple Valid(s)
    assign SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_wireValid = SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_V;

    // SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101(STALLREG,3483)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_r_valid <= 1'b0;
            SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_r_data0 <= 1'bx;
            SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_r_valid <= SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_backStall & (SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_r_valid | SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_i_valid);

            if (SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_r_data0 <= $unsigned(bubble_select_i_llvm_fpga_mem_memdep_conv2100_b);
                SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_r_data1 <= $unsigned(bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_and0 = SE_out_i_llvm_fpga_mem_memdep_conv2100_V1;
    assign SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_i_valid = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V6 & SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_and0;
    // Stall signal propagation
    assign SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_backStall = SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_r_valid | ~ (SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_i_valid);

    // Valid
    assign SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_V = SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_r_valid : SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_i_valid;

    // Data0
    assign SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_D0 = SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_r_data0 : bubble_select_i_llvm_fpga_mem_memdep_conv2100_b;
    // Data1
    assign SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_D1 = SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_r_data1 : bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b;

    // bubble_join_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216(BITJOIN,2324)
    assign bubble_join_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_q = i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216(BITSELECT,2325)
    assign bubble_select_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_b = $unsigned(bubble_join_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_q[0:0]);

    // SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253(STALLREG,3476)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_r_valid <= 1'b0;
            SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_r_data0 <= 1'bx;
            SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_r_valid <= SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_backStall & (SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_r_valid | SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_i_valid);

            if (SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_r_data0 <= $unsigned(bubble_select_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_b);
                SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_r_data1 <= $unsigned(bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_and0 = SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_V1;
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_i_valid = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V4 & SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_and0;
    // Stall signal propagation
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_backStall = SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_r_valid | ~ (SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_i_valid);

    // Valid
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_V = SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_r_valid : SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_i_valid;

    // Data0
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_D0 = SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_r_data0 : bubble_select_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_b;
    // Data1
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_D1 = SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_r_data1 : bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b;

    // bubble_join_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220(BITJOIN,2320)
    assign bubble_join_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_q = i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220(BITSELECT,2321)
    assign bubble_select_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_b = $unsigned(bubble_join_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_q[0:0]);

    // SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257(STALLREG,3475)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_r_valid <= 1'b0;
            SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_r_data0 <= 1'bx;
            SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_r_valid <= SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_backStall & (SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_r_valid | SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_i_valid);

            if (SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_r_data0 <= $unsigned(bubble_select_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_b);
                SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_r_data1 <= $unsigned(bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_and0 = SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_V1;
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_i_valid = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V3 & SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_and0;
    // Stall signal propagation
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_backStall = SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_r_valid | ~ (SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_i_valid);

    // Valid
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_V = SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_r_valid : SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_i_valid;

    // Data0
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_D0 = SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_r_data0 : bubble_select_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_b;
    // Data1
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_D1 = SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_r_data1 : bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b;

    // bubble_join_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227(BITJOIN,2316)
    assign bubble_join_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_q = i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227(BITSELECT,2317)
    assign bubble_select_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_b = $unsigned(bubble_join_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_q[0:0]);

    // SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265(STALLREG,3474)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_r_valid <= 1'b0;
            SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_r_data0 <= 1'bx;
            SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_r_valid <= SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_backStall & (SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_r_valid | SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_i_valid);

            if (SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_r_data0 <= $unsigned(bubble_select_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_b);
                SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_r_data1 <= $unsigned(bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_and0 = SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_V1;
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_i_valid = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V2 & SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_and0;
    // Stall signal propagation
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_backStall = SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_r_valid | ~ (SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_i_valid);

    // Valid
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_V = SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_r_valid : SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_i_valid;

    // Data0
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_D0 = SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_r_data0 : bubble_select_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_b;
    // Data1
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_D1 = SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_r_data1 : bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b;

    // bubble_join_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230(BITJOIN,2312)
    assign bubble_join_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_q = i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230(BITSELECT,2313)
    assign bubble_select_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_b = $unsigned(bubble_join_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_q[0:0]);

    // SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269(STALLREG,3473)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_r_valid <= 1'b0;
            SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_r_data0 <= 1'bx;
            SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_r_valid <= SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_backStall & (SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_r_valid | SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_i_valid);

            if (SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_r_data0 <= $unsigned(bubble_select_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_b);
                SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_r_data1 <= $unsigned(bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_and0 = SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_V1;
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_i_valid = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V1 & SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_and0;
    // Stall signal propagation
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_backStall = SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_r_valid | ~ (SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_i_valid);

    // Valid
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_V = SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_r_valid : SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_i_valid;

    // Data0
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_D0 = SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_r_data0 : bubble_select_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_b;
    // Data1
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_D1 = SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_r_data1 : bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b;

    // bubble_join_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213(BITJOIN,2308)
    assign bubble_join_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_q = i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213(BITSELECT,2309)
    assign bubble_select_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_b = $unsigned(bubble_join_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_q[0:0]);

    // SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250(STALLREG,3472)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_r_valid <= 1'b0;
            SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_r_data0 <= 1'bx;
            SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_r_data1 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_r_valid <= SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_backStall & (SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_r_valid | SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_i_valid);

            if (SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_r_data0 <= $unsigned(bubble_select_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_b);
                SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_r_data1 <= $unsigned(bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_and0 = SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_V1;
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_i_valid = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V0 & SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_and0;
    // Stall signal propagation
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_backStall = SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_r_valid | ~ (SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_i_valid);

    // Valid
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_V = SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_r_valid : SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_i_valid;

    // Data0
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_D0 = SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_r_data0 : bubble_select_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_b;
    // Data1
    assign SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_D1 = SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_r_valid == 1'b1 ? SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_r_data1 : bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b;

    // SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo(STALLENABLE,3055)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg0 <= '0;
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg1 <= '0;
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg2 <= '0;
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg3 <= '0;
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg4 <= '0;
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg5 <= '0;
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg6 <= '0;
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg7 <= '0;
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg8 <= '0;
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg9 <= '0;
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg10 <= '0;
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg11 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg0 <= SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg0;
            // Successor 1
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg1 <= SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg1;
            // Successor 2
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg2 <= SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg2;
            // Successor 3
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg3 <= SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg3;
            // Successor 4
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg4 <= SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg4;
            // Successor 5
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg5 <= SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg5;
            // Successor 6
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg6 <= SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg6;
            // Successor 7
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg7 <= SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg7;
            // Successor 8
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg8 <= SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg8;
            // Successor 9
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg9 <= SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg9;
            // Successor 10
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg10 <= SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg10;
            // Successor 11
            SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg11 <= SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg11;
        end
    end
    // Input Stall processing
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed0 = (~ (SR_SE_in_i_llvm_fpga_push_i1_exitcond19137_push104_conv250_backStall) & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid) | SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg0;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed1 = (~ (SR_SE_in_i_llvm_fpga_push_i1_exitcond22128_push97_conv269_backStall) & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid) | SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg1;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed2 = (~ (SR_SE_in_i_llvm_fpga_push_i1_exitcond25119_push94_conv265_backStall) & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid) | SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg2;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed3 = (~ (SR_SE_in_i_llvm_fpga_push_i1_exitcond2891_push86_conv257_backStall) & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid) | SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg3;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed4 = (~ (SR_SE_in_i_llvm_fpga_push_i1_exitcond3171_push82_conv253_backStall) & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid) | SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg4;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed5 = (~ (SR_SE_i_next_initerations_conv235_vt_select_0_backStall) & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid) | SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg5;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed6 = (~ (SR_SE_in_i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_backStall) & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid) | SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg6;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed7 = (~ (SR_SE_in_i_llvm_fpga_push_i1_notcmp36138_push105_conv251_backStall) & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid) | SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg7;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed8 = (~ (SR_SE_in_i_llvm_fpga_push_i1_notcmp41130_push98_conv270_backStall) & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid) | SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg8;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed9 = (~ (SR_SE_in_i_llvm_fpga_push_i1_notcmp46122_push95_conv266_backStall) & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid) | SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg9;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed10 = (~ (SR_SE_in_i_llvm_fpga_push_i1_notcmp5195_push87_conv258_backStall) & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid) | SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg10;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed11 = (~ (SR_SE_in_i_llvm_fpga_push_i1_notcmp5676_push83_conv254_backStall) & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid) | SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg11;
    // Consuming
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_StallValid = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_backStall & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg0 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_StallValid & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed0;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg1 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_StallValid & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed1;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg2 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_StallValid & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed2;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg3 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_StallValid & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed3;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg4 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_StallValid & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed4;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg5 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_StallValid & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed5;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg6 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_StallValid & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed6;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg7 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_StallValid & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed7;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg8 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_StallValid & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed8;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg9 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_StallValid & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed9;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg10 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_StallValid & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed10;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_toReg11 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_StallValid & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed11;
    // Backward Stall generation
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or0 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed0;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or1 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed1 & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or0;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or2 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed2 & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or1;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or3 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed3 & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or2;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or4 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed4 & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or3;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or5 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed5 & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or4;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or6 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed6 & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or5;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or7 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed7 & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or6;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or8 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed8 & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or7;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or9 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed9 & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or8;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or10 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed10 & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or9;
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireStall = ~ (SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_consumed11 & SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_or10);
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_backStall = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireStall;
    // Valid signal propagation
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V0 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid & ~ (SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg0);
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V1 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid & ~ (SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg1);
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V2 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid & ~ (SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg2);
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V3 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid & ~ (SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg3);
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V4 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid & ~ (SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg4);
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V5 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid & ~ (SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg5);
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V6 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid & ~ (SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg6);
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V7 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid & ~ (SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg7);
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V8 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid & ~ (SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg8);
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V9 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid & ~ (SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg9);
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V10 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid & ~ (SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg10);
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V11 = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid & ~ (SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_fromReg11);
    // Computing multiple Valid(s)
    assign SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_wireValid = redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_valid_out;

    // SE_out_i_llvm_fpga_push_i1_lastiniteration_conv285(STALLENABLE,2625)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i1_lastiniteration_conv285_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i1_lastiniteration_conv285_wireValid = i_llvm_fpga_push_i1_lastiniteration_conv285_out_valid_out;

    // i_llvm_fpga_push_i1_lastiniteration_conv285(BLACKBOX,182)@131
    // in in_stall_in@20000000
    // out out_data_out@132
    // out out_feedback_out_2@20000000
    // out out_feedback_valid_out_2@20000000
    // out out_stall_out@20000000
    // out out_valid_out@132
    conv2_i_llvm_fpga_push_i1_lastiniteration_0 thei_llvm_fpga_push_i1_lastiniteration_conv285 (
        .in_data_in(SR_SE_i_next_initerations_conv235_vt_select_0_D0),
        .in_feedback_stall_in_2(i_llvm_fpga_pipeline_keep_going_conv23_out_initeration_stall_out),
        .in_keep_going(SR_SE_i_next_initerations_conv235_vt_select_0_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i1_lastiniteration_conv285_backStall),
        .in_valid_in(SE_i_next_initerations_conv235_vt_select_0_V0),
        .out_data_out(),
        .out_feedback_out_2(i_llvm_fpga_push_i1_lastiniteration_conv285_out_feedback_out_2),
        .out_feedback_valid_out_2(i_llvm_fpga_push_i1_lastiniteration_conv285_out_feedback_valid_out_2),
        .out_stall_out(i_llvm_fpga_push_i1_lastiniteration_conv285_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i1_lastiniteration_conv285_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_i_next_initerations_conv235_vt_select_0(STALLENABLE,2681)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_i_next_initerations_conv235_vt_select_0_fromReg0 <= '0;
            SE_i_next_initerations_conv235_vt_select_0_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_i_next_initerations_conv235_vt_select_0_fromReg0 <= SE_i_next_initerations_conv235_vt_select_0_toReg0;
            // Successor 1
            SE_i_next_initerations_conv235_vt_select_0_fromReg1 <= SE_i_next_initerations_conv235_vt_select_0_toReg1;
        end
    end
    // Input Stall processing
    assign SE_i_next_initerations_conv235_vt_select_0_consumed0 = (~ (i_llvm_fpga_push_i1_lastiniteration_conv285_out_stall_out) & SE_i_next_initerations_conv235_vt_select_0_wireValid) | SE_i_next_initerations_conv235_vt_select_0_fromReg0;
    assign SE_i_next_initerations_conv235_vt_select_0_consumed1 = (~ (i_llvm_fpga_push_i2_initerations_push80_conv274_out_stall_out) & SE_i_next_initerations_conv235_vt_select_0_wireValid) | SE_i_next_initerations_conv235_vt_select_0_fromReg1;
    // Consuming
    assign SE_i_next_initerations_conv235_vt_select_0_StallValid = SE_i_next_initerations_conv235_vt_select_0_backStall & SE_i_next_initerations_conv235_vt_select_0_wireValid;
    assign SE_i_next_initerations_conv235_vt_select_0_toReg0 = SE_i_next_initerations_conv235_vt_select_0_StallValid & SE_i_next_initerations_conv235_vt_select_0_consumed0;
    assign SE_i_next_initerations_conv235_vt_select_0_toReg1 = SE_i_next_initerations_conv235_vt_select_0_StallValid & SE_i_next_initerations_conv235_vt_select_0_consumed1;
    // Backward Stall generation
    assign SE_i_next_initerations_conv235_vt_select_0_or0 = SE_i_next_initerations_conv235_vt_select_0_consumed0;
    assign SE_i_next_initerations_conv235_vt_select_0_wireStall = ~ (SE_i_next_initerations_conv235_vt_select_0_consumed1 & SE_i_next_initerations_conv235_vt_select_0_or0);
    assign SE_i_next_initerations_conv235_vt_select_0_backStall = SE_i_next_initerations_conv235_vt_select_0_wireStall;
    // Valid signal propagation
    assign SE_i_next_initerations_conv235_vt_select_0_V0 = SE_i_next_initerations_conv235_vt_select_0_wireValid & ~ (SE_i_next_initerations_conv235_vt_select_0_fromReg0);
    assign SE_i_next_initerations_conv235_vt_select_0_V1 = SE_i_next_initerations_conv235_vt_select_0_wireValid & ~ (SE_i_next_initerations_conv235_vt_select_0_fromReg1);
    // Computing multiple Valid(s)
    assign SE_i_next_initerations_conv235_vt_select_0_wireValid = SR_SE_i_next_initerations_conv235_vt_select_0_V;

    // SR_SE_i_next_initerations_conv235_vt_select_0(STALLREG,3477)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_next_initerations_conv235_vt_select_0_r_valid <= 1'b0;
            SR_SE_i_next_initerations_conv235_vt_select_0_r_data0 <= 1'bx;
            SR_SE_i_next_initerations_conv235_vt_select_0_r_data1 <= 1'bx;
            SR_SE_i_next_initerations_conv235_vt_select_0_r_data2 <= 1'bx;
            SR_SE_i_next_initerations_conv235_vt_select_0_r_data3 <= 2'bxx;
        end
        else
        begin
            // Valid
            SR_SE_i_next_initerations_conv235_vt_select_0_r_valid <= SE_i_next_initerations_conv235_vt_select_0_backStall & (SR_SE_i_next_initerations_conv235_vt_select_0_r_valid | SR_SE_i_next_initerations_conv235_vt_select_0_i_valid);

            if (SR_SE_i_next_initerations_conv235_vt_select_0_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_next_initerations_conv235_vt_select_0_r_data0 <= i_last_initeration_conv275_sel_x_b;
                SR_SE_i_next_initerations_conv235_vt_select_0_r_data1 <= $unsigned(bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b);
                SR_SE_i_next_initerations_conv235_vt_select_0_r_data2 <= $unsigned(bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b);
                SR_SE_i_next_initerations_conv235_vt_select_0_r_data3 <= i_next_initerations_conv235_vt_join_q;
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_next_initerations_conv235_vt_select_0_and0 = SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_V1;
    assign SR_SE_i_next_initerations_conv235_vt_select_0_i_valid = SE_out_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_V5 & SR_SE_i_next_initerations_conv235_vt_select_0_and0;
    // Stall signal propagation
    assign SR_SE_i_next_initerations_conv235_vt_select_0_backStall = SR_SE_i_next_initerations_conv235_vt_select_0_r_valid | ~ (SR_SE_i_next_initerations_conv235_vt_select_0_i_valid);

    // Valid
    assign SR_SE_i_next_initerations_conv235_vt_select_0_V = SR_SE_i_next_initerations_conv235_vt_select_0_r_valid == 1'b1 ? SR_SE_i_next_initerations_conv235_vt_select_0_r_valid : SR_SE_i_next_initerations_conv235_vt_select_0_i_valid;

    // Data0
    assign SR_SE_i_next_initerations_conv235_vt_select_0_D0 = SR_SE_i_next_initerations_conv235_vt_select_0_r_valid == 1'b1 ? SR_SE_i_next_initerations_conv235_vt_select_0_r_data0 : i_last_initeration_conv275_sel_x_b;
    // Data1
    assign SR_SE_i_next_initerations_conv235_vt_select_0_D1 = SR_SE_i_next_initerations_conv235_vt_select_0_r_valid == 1'b1 ? SR_SE_i_next_initerations_conv235_vt_select_0_r_data1 : bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b;
    // Data2
    assign SR_SE_i_next_initerations_conv235_vt_select_0_D2 = SR_SE_i_next_initerations_conv235_vt_select_0_r_valid == 1'b1 ? SR_SE_i_next_initerations_conv235_vt_select_0_r_data2 : bubble_select_redist70_i_llvm_fpga_pipeline_keep_going_conv23_out_data_out_31_fifo_b;
    // Data3
    assign SR_SE_i_next_initerations_conv235_vt_select_0_D3 = SR_SE_i_next_initerations_conv235_vt_select_0_r_valid == 1'b1 ? SR_SE_i_next_initerations_conv235_vt_select_0_r_data3 : i_next_initerations_conv235_vt_join_q;

    // SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1(STALLENABLE,3270)
    // Valid signal propagation
    assign SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_V0 = SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_wireValid;
    // Backward Stall generation
    assign SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_backStall = in_stall_in | ~ (SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and0 = bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_reg_valid_out;
    assign SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and1 = bubble_out_i_llvm_fpga_pop_i32_row_038_pop2099_pop88_conv211_1_reg_valid_out & SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and0;
    assign SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and2 = redist47_i_masked_conv287_q_31_fifo_valid_out & SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and1;
    assign SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and3 = bubble_out_i_llvm_fpga_pop_i32_channel_039_pop1781_pop84_conv218_1_reg_valid_out & SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and2;
    assign SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and4 = bubble_out_i_llvm_fpga_pipeline_keep_going_conv23_1_reg_valid_out & SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and3;
    assign SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and5 = SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_V0 & SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and4;
    assign SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and6 = SE_out_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_V0 & SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and5;
    assign SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and7 = SE_out_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_V0 & SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and6;
    assign SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and8 = SE_out_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_V0 & SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and7;
    assign SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and9 = SE_out_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_V0 & SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and8;
    assign SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and10 = SE_out_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_V0 & SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and9;
    assign SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and11 = SE_out_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_V0 & SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and10;
    assign SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and12 = SE_out_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_V0 & SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and11;
    assign SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and13 = SE_out_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_V0 & SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and12;
    assign SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and14 = SE_out_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_V0 & SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and13;
    assign SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and15 = SE_out_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_V0 & SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and14;
    assign SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_wireValid = SE_out_i_llvm_fpga_mem_memdep_conv2100_V0 & SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_and15;

    // SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24(STALLENABLE,2589)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_fromReg0 <= SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_fromReg1 <= SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_consumed0 = (~ (SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_backStall) & SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_wireValid) | SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_consumed1 = (~ (SR_SE_i_next_initerations_conv235_vt_select_0_backStall) & SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_wireValid) | SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_fromReg1;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_StallValid = SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_backStall & SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_wireValid;
    assign SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_toReg0 = SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_StallValid & SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_consumed0;
    assign SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_toReg1 = SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_StallValid & SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_consumed1;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_or0 = SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_consumed0;
    assign SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_wireStall = ~ (SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_consumed1 & SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_or0);
    assign SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_backStall = SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_V0 = SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_wireValid & ~ (SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_V1 = SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_wireValid & ~ (SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_wireValid = i_llvm_fpga_pop_i2_initerations_pop80_conv24_out_valid_out;

    // SE_out_i_llvm_fpga_push_i2_initerations_push80_conv274(STALLENABLE,2653)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i2_initerations_push80_conv274_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i2_initerations_push80_conv274_wireValid = i_llvm_fpga_push_i2_initerations_push80_conv274_out_valid_out;

    // i_llvm_fpga_push_i2_initerations_push80_conv274(BLACKBOX,196)@131
    // in in_stall_in@20000000
    // out out_data_out@132
    // out out_feedback_out_80@20000000
    // out out_feedback_valid_out_80@20000000
    // out out_stall_out@20000000
    // out out_valid_out@132
    conv2_i_llvm_fpga_push_i2_initerations_push80_0 thei_llvm_fpga_push_i2_initerations_push80_conv274 (
        .in_data_in(SR_SE_i_next_initerations_conv235_vt_select_0_D3),
        .in_feedback_stall_in_80(i_llvm_fpga_pop_i2_initerations_pop80_conv24_out_feedback_stall_out_80),
        .in_keep_going(SR_SE_i_next_initerations_conv235_vt_select_0_D2),
        .in_stall_in(SE_out_i_llvm_fpga_push_i2_initerations_push80_conv274_backStall),
        .in_valid_in(SE_i_next_initerations_conv235_vt_select_0_V1),
        .out_data_out(),
        .out_feedback_out_80(i_llvm_fpga_push_i2_initerations_push80_conv274_out_feedback_out_80),
        .out_feedback_valid_out_80(i_llvm_fpga_push_i2_initerations_push80_conv274_out_feedback_valid_out_80),
        .out_stall_out(i_llvm_fpga_push_i2_initerations_push80_conv274_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i2_initerations_push80_conv274_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo(BITJOIN,2485)
    assign bubble_join_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_q = redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_data_out;

    // bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo(BITSELECT,2486)
    assign bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b = $unsigned(bubble_join_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_q[0:0]);

    // i_llvm_fpga_pop_i2_initerations_pop80_conv24(BLACKBOX,164)@130
    // in in_stall_in@20000000
    // out out_data_out@131
    // out out_feedback_stall_out_80@20000000
    // out out_stall_out@20000000
    // out out_valid_out@131
    conv2_i_llvm_fpga_pop_i2_initerations_pop80_0 thei_llvm_fpga_pop_i2_initerations_pop80_conv24 (
        .in_data_in(c_i2_1102_q),
        .in_dir(bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b),
        .in_feedback_in_80(i_llvm_fpga_push_i2_initerations_push80_conv274_out_feedback_out_80),
        .in_feedback_valid_in_80(i_llvm_fpga_push_i2_initerations_push80_conv274_out_feedback_valid_out_80),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i2_initerations_pop80_conv24_backStall),
        .in_valid_in(SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_V1),
        .out_data_out(i_llvm_fpga_pop_i2_initerations_pop80_conv24_out_data_out),
        .out_feedback_stall_out_80(i_llvm_fpga_pop_i2_initerations_pop80_conv24_out_feedback_stall_out_80),
        .out_stall_out(i_llvm_fpga_pop_i2_initerations_pop80_conv24_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i2_initerations_pop80_conv24_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_coalesced_delay_4_fifo(BITJOIN,2512)
    assign bubble_join_coalesced_delay_4_fifo_q = coalesced_delay_4_fifo_data_out;

    // bubble_select_coalesced_delay_4_fifo(BITSELECT,2513)
    assign bubble_select_coalesced_delay_4_fifo_b = $unsigned(bubble_join_coalesced_delay_4_fifo_q[9:0]);

    // sel_for_coalesced_delay_4(BITSELECT,2180)
    assign sel_for_coalesced_delay_4_b = $unsigned(bubble_select_coalesced_delay_4_fifo_b[0:0]);
    assign sel_for_coalesced_delay_4_c = $unsigned(bubble_select_coalesced_delay_4_fifo_b[1:1]);
    assign sel_for_coalesced_delay_4_d = $unsigned(bubble_select_coalesced_delay_4_fifo_b[2:2]);
    assign sel_for_coalesced_delay_4_e = $unsigned(bubble_select_coalesced_delay_4_fifo_b[3:3]);
    assign sel_for_coalesced_delay_4_f = $unsigned(bubble_select_coalesced_delay_4_fifo_b[4:4]);
    assign sel_for_coalesced_delay_4_g = $unsigned(bubble_select_coalesced_delay_4_fifo_b[5:5]);
    assign sel_for_coalesced_delay_4_h = $unsigned(bubble_select_coalesced_delay_4_fifo_b[6:6]);
    assign sel_for_coalesced_delay_4_i = $unsigned(bubble_select_coalesced_delay_4_fifo_b[7:7]);
    assign sel_for_coalesced_delay_4_j = $unsigned(bubble_select_coalesced_delay_4_fifo_b[8:8]);
    assign sel_for_coalesced_delay_4_k = $unsigned(bubble_select_coalesced_delay_4_fifo_b[9:9]);

    // SR_SE_out_coalesced_delay_4_fifo(STALLREG,3438)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_coalesced_delay_4_fifo_r_valid <= 1'b0;
            SR_SE_out_coalesced_delay_4_fifo_r_data0 <= 1'bx;
            SR_SE_out_coalesced_delay_4_fifo_r_data1 <= 1'bx;
            SR_SE_out_coalesced_delay_4_fifo_r_data2 <= 1'bx;
            SR_SE_out_coalesced_delay_4_fifo_r_data3 <= 1'bx;
            SR_SE_out_coalesced_delay_4_fifo_r_data4 <= 1'bx;
            SR_SE_out_coalesced_delay_4_fifo_r_data5 <= 1'bx;
            SR_SE_out_coalesced_delay_4_fifo_r_data6 <= 1'bx;
            SR_SE_out_coalesced_delay_4_fifo_r_data7 <= 1'bx;
            SR_SE_out_coalesced_delay_4_fifo_r_data8 <= 1'bx;
            SR_SE_out_coalesced_delay_4_fifo_r_data9 <= 1'bx;
            SR_SE_out_coalesced_delay_4_fifo_r_data10 <= 1'bx;
            SR_SE_out_coalesced_delay_4_fifo_r_data11 <= 1'bx;
            SR_SE_out_coalesced_delay_4_fifo_r_data12 <= 1'bx;
            SR_SE_out_coalesced_delay_4_fifo_r_data13 <= 1'bx;
            SR_SE_out_coalesced_delay_4_fifo_r_data14 <= 1'bx;
            SR_SE_out_coalesced_delay_4_fifo_r_data15 <= 1'bx;
            SR_SE_out_coalesced_delay_4_fifo_r_data16 <= 1'bx;
            SR_SE_out_coalesced_delay_4_fifo_r_data17 <= 1'bx;
            SR_SE_out_coalesced_delay_4_fifo_r_data18 <= 1'bx;
            SR_SE_out_coalesced_delay_4_fifo_r_data19 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_out_coalesced_delay_4_fifo_r_valid <= SE_out_coalesced_delay_4_fifo_backStall & (SR_SE_out_coalesced_delay_4_fifo_r_valid | SR_SE_out_coalesced_delay_4_fifo_i_valid);

            if (SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_coalesced_delay_4_fifo_r_data0 <= $unsigned(sel_for_coalesced_delay_4_b);
                SR_SE_out_coalesced_delay_4_fifo_r_data1 <= $unsigned(bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b);
                SR_SE_out_coalesced_delay_4_fifo_r_data2 <= $unsigned(bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b);
                SR_SE_out_coalesced_delay_4_fifo_r_data3 <= $unsigned(bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b);
                SR_SE_out_coalesced_delay_4_fifo_r_data4 <= $unsigned(bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b);
                SR_SE_out_coalesced_delay_4_fifo_r_data5 <= $unsigned(bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b);
                SR_SE_out_coalesced_delay_4_fifo_r_data6 <= $unsigned(bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b);
                SR_SE_out_coalesced_delay_4_fifo_r_data7 <= $unsigned(bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b);
                SR_SE_out_coalesced_delay_4_fifo_r_data8 <= $unsigned(bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b);
                SR_SE_out_coalesced_delay_4_fifo_r_data9 <= $unsigned(bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b);
                SR_SE_out_coalesced_delay_4_fifo_r_data10 <= $unsigned(bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b);
                SR_SE_out_coalesced_delay_4_fifo_r_data11 <= $unsigned(sel_for_coalesced_delay_4_j);
                SR_SE_out_coalesced_delay_4_fifo_r_data12 <= $unsigned(sel_for_coalesced_delay_4_h);
                SR_SE_out_coalesced_delay_4_fifo_r_data13 <= $unsigned(sel_for_coalesced_delay_4_f);
                SR_SE_out_coalesced_delay_4_fifo_r_data14 <= $unsigned(sel_for_coalesced_delay_4_d);
                SR_SE_out_coalesced_delay_4_fifo_r_data15 <= $unsigned(sel_for_coalesced_delay_4_c);
                SR_SE_out_coalesced_delay_4_fifo_r_data16 <= $unsigned(sel_for_coalesced_delay_4_k);
                SR_SE_out_coalesced_delay_4_fifo_r_data17 <= $unsigned(sel_for_coalesced_delay_4_i);
                SR_SE_out_coalesced_delay_4_fifo_r_data18 <= $unsigned(sel_for_coalesced_delay_4_g);
                SR_SE_out_coalesced_delay_4_fifo_r_data19 <= $unsigned(sel_for_coalesced_delay_4_e);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_coalesced_delay_4_fifo_and0 = coalesced_delay_4_fifo_valid_out;
    assign SR_SE_out_coalesced_delay_4_fifo_i_valid = SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_V0 & SR_SE_out_coalesced_delay_4_fifo_and0;
    // Stall signal propagation
    assign SR_SE_out_coalesced_delay_4_fifo_backStall = SR_SE_out_coalesced_delay_4_fifo_r_valid | ~ (SR_SE_out_coalesced_delay_4_fifo_i_valid);

    // Valid
    assign SR_SE_out_coalesced_delay_4_fifo_V = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_valid : SR_SE_out_coalesced_delay_4_fifo_i_valid;

    // Data0
    assign SR_SE_out_coalesced_delay_4_fifo_D0 = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_data0 : sel_for_coalesced_delay_4_b;
    // Data1
    assign SR_SE_out_coalesced_delay_4_fifo_D1 = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_data1 : bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b;
    // Data2
    assign SR_SE_out_coalesced_delay_4_fifo_D2 = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_data2 : bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b;
    // Data3
    assign SR_SE_out_coalesced_delay_4_fifo_D3 = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_data3 : bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b;
    // Data4
    assign SR_SE_out_coalesced_delay_4_fifo_D4 = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_data4 : bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b;
    // Data5
    assign SR_SE_out_coalesced_delay_4_fifo_D5 = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_data5 : bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b;
    // Data6
    assign SR_SE_out_coalesced_delay_4_fifo_D6 = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_data6 : bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b;
    // Data7
    assign SR_SE_out_coalesced_delay_4_fifo_D7 = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_data7 : bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b;
    // Data8
    assign SR_SE_out_coalesced_delay_4_fifo_D8 = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_data8 : bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b;
    // Data9
    assign SR_SE_out_coalesced_delay_4_fifo_D9 = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_data9 : bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b;
    // Data10
    assign SR_SE_out_coalesced_delay_4_fifo_D10 = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_data10 : bubble_select_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_b;
    // Data11
    assign SR_SE_out_coalesced_delay_4_fifo_D11 = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_data11 : sel_for_coalesced_delay_4_j;
    // Data12
    assign SR_SE_out_coalesced_delay_4_fifo_D12 = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_data12 : sel_for_coalesced_delay_4_h;
    // Data13
    assign SR_SE_out_coalesced_delay_4_fifo_D13 = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_data13 : sel_for_coalesced_delay_4_f;
    // Data14
    assign SR_SE_out_coalesced_delay_4_fifo_D14 = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_data14 : sel_for_coalesced_delay_4_d;
    // Data15
    assign SR_SE_out_coalesced_delay_4_fifo_D15 = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_data15 : sel_for_coalesced_delay_4_c;
    // Data16
    assign SR_SE_out_coalesced_delay_4_fifo_D16 = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_data16 : sel_for_coalesced_delay_4_k;
    // Data17
    assign SR_SE_out_coalesced_delay_4_fifo_D17 = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_data17 : sel_for_coalesced_delay_4_i;
    // Data18
    assign SR_SE_out_coalesced_delay_4_fifo_D18 = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_data18 : sel_for_coalesced_delay_4_g;
    // Data19
    assign SR_SE_out_coalesced_delay_4_fifo_D19 = SR_SE_out_coalesced_delay_4_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_4_fifo_r_data19 : sel_for_coalesced_delay_4_e;

    // SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo(STALLENABLE,3071)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_fromReg0 <= '0;
            SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_fromReg0 <= SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_toReg0;
            // Successor 1
            SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_fromReg1 <= SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_consumed0 = (~ (SR_SE_out_coalesced_delay_4_fifo_backStall) & SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_wireValid) | SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_fromReg0;
    assign SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_consumed1 = (~ (i_llvm_fpga_pop_i2_initerations_pop80_conv24_out_stall_out) & SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_wireValid) | SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_fromReg1;
    // Consuming
    assign SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_StallValid = SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_backStall & SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_wireValid;
    assign SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_toReg0 = SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_StallValid & SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_consumed0;
    assign SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_toReg1 = SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_StallValid & SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_consumed1;
    // Backward Stall generation
    assign SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_or0 = SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_consumed0;
    assign SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_wireStall = ~ (SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_consumed1 & SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_or0);
    assign SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_backStall = SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_wireStall;
    // Valid signal propagation
    assign SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_V0 = SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_wireValid & ~ (SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_fromReg0);
    assign SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_V1 = SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_wireValid & ~ (SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_wireValid = redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_valid_out;

    // redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo(STALLFIFO,2265)
    assign redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_valid_in = SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_V3;
    assign redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_stall_in = SE_out_redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_backStall;
    assign redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_data_in = bubble_select_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_b;
    assign redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_valid_in_bitsignaltemp = redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_valid_in[0];
    assign redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_stall_in_bitsignaltemp = redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_stall_in[0];
    assign redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_valid_out[0] = redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_valid_out_bitsignaltemp;
    assign redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_stall_out[0] = redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(32),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(1),
        .IMPL("ram")
    ) theredist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo (
        .valid_in(redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_valid_in_bitsignaltemp),
        .stall_in(redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_stall_in_bitsignaltemp),
        .data_in(bubble_select_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_b),
        .valid_out(redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_valid_out_bitsignaltemp),
        .stall_out(redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_stall_out_bitsignaltemp),
        .data_out(redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // c_i4_3105(CONSTANT,104)
    assign c_i4_3105_q = $unsigned(4'b0011);

    // i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27(BLACKBOX,173)@99
    // in in_stall_in@20000000
    // out out_data_out@100
    // out out_feedback_stall_out_77@20000000
    // out out_stall_out@20000000
    // out out_valid_out@100
    conv2_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_0 thei_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27 (
        .in_data_in(c_i4_3105_q),
        .in_dir(bubble_select_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_b),
        .in_feedback_in_77(i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_out_feedback_out_77),
        .in_feedback_valid_in_77(i_llvm_fpga_push_i4_fpga_indvars_iv_push77_conv279_out_feedback_valid_out_77),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_backStall),
        .in_valid_in(SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_V2),
        .out_data_out(i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_out_data_out),
        .out_feedback_stall_out_77(i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_out_feedback_stall_out_77),
        .out_stall_out(i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pipeline_keep_going_conv23(BLACKBOX,146)@99
    // in in_stall_in@20000000
    // out out_data_out@100
    // out out_exiting_stall_out@20000000
    // out out_exiting_valid_out@20000000
    // out out_initeration_stall_out@20000000
    // out out_not_exitcond_stall_out@20000000
    // out out_pipeline_valid_out@20000000
    // out out_stall_out@20000000
    // out out_valid_out@100
    conv2_i_llvm_fpga_pipeline_keep_going_0 thei_llvm_fpga_pipeline_keep_going_conv23 (
        .in_data_in(bubble_select_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_b),
        .in_initeration_in(i_llvm_fpga_push_i1_lastiniteration_conv285_out_feedback_out_2),
        .in_initeration_valid_in(i_llvm_fpga_push_i1_lastiniteration_conv285_out_feedback_valid_out_2),
        .in_not_exitcond_in(i_llvm_fpga_push_i1_notexitcond_conv278_out_feedback_out_3),
        .in_not_exitcond_valid_in(i_llvm_fpga_push_i1_notexitcond_conv278_out_feedback_valid_out_3),
        .in_pipeline_stall_in(in_pipeline_stall_in),
        .in_stall_in(SE_out_i_llvm_fpga_pipeline_keep_going_conv23_backStall),
        .in_valid_in(SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_V1),
        .out_data_out(i_llvm_fpga_pipeline_keep_going_conv23_out_data_out),
        .out_exiting_stall_out(i_llvm_fpga_pipeline_keep_going_conv23_out_exiting_stall_out),
        .out_exiting_valid_out(i_llvm_fpga_pipeline_keep_going_conv23_out_exiting_valid_out),
        .out_initeration_stall_out(i_llvm_fpga_pipeline_keep_going_conv23_out_initeration_stall_out),
        .out_not_exitcond_stall_out(i_llvm_fpga_pipeline_keep_going_conv23_out_not_exitcond_stall_out),
        .out_pipeline_valid_out(i_llvm_fpga_pipeline_keep_going_conv23_out_pipeline_valid_out),
        .out_stall_out(i_llvm_fpga_pipeline_keep_going_conv23_out_stall_out),
        .out_valid_out(i_llvm_fpga_pipeline_keep_going_conv23_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_coalesced_delay_3_fifo(BITJOIN,2509)
    assign bubble_join_coalesced_delay_3_fifo_q = coalesced_delay_3_fifo_data_out;

    // bubble_select_coalesced_delay_3_fifo(BITSELECT,2510)
    assign bubble_select_coalesced_delay_3_fifo_b = $unsigned(bubble_join_coalesced_delay_3_fifo_q[63:0]);

    // sel_for_coalesced_delay_3(BITSELECT,2177)
    assign sel_for_coalesced_delay_3_b = $unsigned(bubble_select_coalesced_delay_3_fifo_b[31:0]);
    assign sel_for_coalesced_delay_3_c = $unsigned(bubble_select_coalesced_delay_3_fifo_b[63:32]);

    // SR_SE_out_coalesced_delay_3_fifo(STALLREG,3436)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_coalesced_delay_3_fifo_r_valid <= 1'b0;
            SR_SE_out_coalesced_delay_3_fifo_r_data0 <= 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_out_coalesced_delay_3_fifo_r_data1 <= 1'bx;
            SR_SE_out_coalesced_delay_3_fifo_r_data2 <= 1'bx;
            SR_SE_out_coalesced_delay_3_fifo_r_data3 <= 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
        end
        else
        begin
            // Valid
            SR_SE_out_coalesced_delay_3_fifo_r_valid <= SE_out_coalesced_delay_3_fifo_backStall & (SR_SE_out_coalesced_delay_3_fifo_r_valid | SR_SE_out_coalesced_delay_3_fifo_i_valid);

            if (SR_SE_out_coalesced_delay_3_fifo_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_coalesced_delay_3_fifo_r_data0 <= $unsigned(sel_for_coalesced_delay_3_c);
                SR_SE_out_coalesced_delay_3_fifo_r_data1 <= $unsigned(bubble_select_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_b);
                SR_SE_out_coalesced_delay_3_fifo_r_data2 <= $unsigned(bubble_select_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_b);
                SR_SE_out_coalesced_delay_3_fifo_r_data3 <= $unsigned(sel_for_coalesced_delay_3_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_coalesced_delay_3_fifo_and0 = coalesced_delay_3_fifo_valid_out;
    assign SR_SE_out_coalesced_delay_3_fifo_i_valid = SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_V0 & SR_SE_out_coalesced_delay_3_fifo_and0;
    // Stall signal propagation
    assign SR_SE_out_coalesced_delay_3_fifo_backStall = SR_SE_out_coalesced_delay_3_fifo_r_valid | ~ (SR_SE_out_coalesced_delay_3_fifo_i_valid);

    // Valid
    assign SR_SE_out_coalesced_delay_3_fifo_V = SR_SE_out_coalesced_delay_3_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_3_fifo_r_valid : SR_SE_out_coalesced_delay_3_fifo_i_valid;

    // Data0
    assign SR_SE_out_coalesced_delay_3_fifo_D0 = SR_SE_out_coalesced_delay_3_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_3_fifo_r_data0 : sel_for_coalesced_delay_3_c;
    // Data1
    assign SR_SE_out_coalesced_delay_3_fifo_D1 = SR_SE_out_coalesced_delay_3_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_3_fifo_r_data1 : bubble_select_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_b;
    // Data2
    assign SR_SE_out_coalesced_delay_3_fifo_D2 = SR_SE_out_coalesced_delay_3_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_3_fifo_r_data2 : bubble_select_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_b;
    // Data3
    assign SR_SE_out_coalesced_delay_3_fifo_D3 = SR_SE_out_coalesced_delay_3_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_3_fifo_r_data3 : sel_for_coalesced_delay_3_b;

    // SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo(STALLENABLE,3069)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_fromReg0 <= '0;
            SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_fromReg1 <= '0;
            SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_fromReg2 <= '0;
            SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_fromReg3 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_fromReg0 <= SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_toReg0;
            // Successor 1
            SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_fromReg1 <= SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_toReg1;
            // Successor 2
            SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_fromReg2 <= SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_toReg2;
            // Successor 3
            SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_fromReg3 <= SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_toReg3;
        end
    end
    // Input Stall processing
    assign SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_consumed0 = (~ (SR_SE_out_coalesced_delay_3_fifo_backStall) & SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_wireValid) | SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_fromReg0;
    assign SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_consumed1 = (~ (i_llvm_fpga_pipeline_keep_going_conv23_out_stall_out) & SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_wireValid) | SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_fromReg1;
    assign SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_consumed2 = (~ (i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_out_stall_out) & SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_wireValid) | SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_fromReg2;
    assign SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_consumed3 = (~ (redist81_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_129_fifo_stall_out) & SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_wireValid) | SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_fromReg3;
    // Consuming
    assign SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_StallValid = SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_backStall & SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_wireValid;
    assign SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_toReg0 = SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_StallValid & SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_consumed0;
    assign SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_toReg1 = SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_StallValid & SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_consumed1;
    assign SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_toReg2 = SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_StallValid & SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_consumed2;
    assign SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_toReg3 = SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_StallValid & SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_consumed3;
    // Backward Stall generation
    assign SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_or0 = SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_consumed0;
    assign SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_or1 = SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_consumed1 & SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_or0;
    assign SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_or2 = SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_consumed2 & SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_or1;
    assign SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_wireStall = ~ (SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_consumed3 & SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_or2);
    assign SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_backStall = SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_wireStall;
    // Valid signal propagation
    assign SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_V0 = SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_wireValid & ~ (SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_fromReg0);
    assign SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_V1 = SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_wireValid & ~ (SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_fromReg1);
    assign SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_V2 = SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_wireValid & ~ (SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_fromReg2);
    assign SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_V3 = SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_wireValid & ~ (SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_fromReg3);
    // Computing multiple Valid(s)
    assign SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_wireValid = redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_valid_out;

    // redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo(STALLFIFO,2264)
    assign redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_valid_in = SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_V3;
    assign redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_stall_in = SE_out_redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_backStall;
    assign redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_data_in = redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_q;
    assign redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_valid_in_bitsignaltemp = redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_valid_in[0];
    assign redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_stall_in_bitsignaltemp = redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_stall_in[0];
    assign redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_valid_out[0] = redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_valid_out_bitsignaltemp;
    assign redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_stall_out[0] = redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(68),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(1),
        .IMPL("ram")
    ) theredist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo (
        .valid_in(redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_valid_in_bitsignaltemp),
        .stall_in(redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_stall_in_bitsignaltemp),
        .data_in(redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_q),
        .valid_out(redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_valid_out_bitsignaltemp),
        .stall_out(redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_stall_out_bitsignaltemp),
        .data_out(redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26(BLACKBOX,157)@32
    // in in_stall_in@20000000
    // out out_data_out@33
    // out out_feedback_stall_out_79@20000000
    // out out_stall_out@20000000
    // out out_valid_out@33
    conv2_i_llvm_fpga_pop_i1_memdep_phi_pop79_0 thei_llvm_fpga_pop_i1_memdep_phi_pop79_conv26 (
        .in_data_in(GND_q),
        .in_dir(redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_q),
        .in_feedback_in_79(i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_out_feedback_out_79),
        .in_feedback_valid_in_79(i_llvm_fpga_push_i1_memdep_phi_push79_conv2101_out_feedback_valid_out_79),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_backStall),
        .in_valid_in(SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_V1),
        .out_data_out(i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_out_data_out),
        .out_feedback_stall_out_79(i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_out_feedback_stall_out_79),
        .out_stall_out(i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_coalesced_delay_2_fifo(BITJOIN,2506)
    assign bubble_join_coalesced_delay_2_fifo_q = coalesced_delay_2_fifo_data_out;

    // bubble_select_coalesced_delay_2_fifo(BITSELECT,2507)
    assign bubble_select_coalesced_delay_2_fifo_b = $unsigned(bubble_join_coalesced_delay_2_fifo_q[128:0]);

    // sel_for_coalesced_delay_2(BITSELECT,2174)
    assign sel_for_coalesced_delay_2_b = $unsigned(bubble_select_coalesced_delay_2_fifo_b[63:0]);
    assign sel_for_coalesced_delay_2_c = $unsigned(bubble_select_coalesced_delay_2_fifo_b[127:64]);
    assign sel_for_coalesced_delay_2_d = $unsigned(bubble_select_coalesced_delay_2_fifo_b[128:128]);

    // SR_SE_out_coalesced_delay_2_fifo(STALLREG,3455)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_coalesced_delay_2_fifo_r_valid <= 1'b0;
            SR_SE_out_coalesced_delay_2_fifo_r_data0 <= 1'bx;
            SR_SE_out_coalesced_delay_2_fifo_r_data1 <= 1'bx;
            SR_SE_out_coalesced_delay_2_fifo_r_data2 <= 1'bx;
            SR_SE_out_coalesced_delay_2_fifo_r_data3 <= 1'bx;
            SR_SE_out_coalesced_delay_2_fifo_r_data4 <= 64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_out_coalesced_delay_2_fifo_r_data5 <= 64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
        end
        else
        begin
            // Valid
            SR_SE_out_coalesced_delay_2_fifo_r_valid <= SE_out_coalesced_delay_2_fifo_backStall & (SR_SE_out_coalesced_delay_2_fifo_r_valid | SR_SE_out_coalesced_delay_2_fifo_i_valid);

            if (SR_SE_out_coalesced_delay_2_fifo_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_coalesced_delay_2_fifo_r_data0 <= $unsigned(sel_for_coalesced_delay_2_d);
                SR_SE_out_coalesced_delay_2_fifo_r_data1 <= $unsigned(redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_q);
                SR_SE_out_coalesced_delay_2_fifo_r_data2 <= $unsigned(redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_q);
                SR_SE_out_coalesced_delay_2_fifo_r_data3 <= $unsigned(redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_q);
                SR_SE_out_coalesced_delay_2_fifo_r_data4 <= $unsigned(sel_for_coalesced_delay_2_b);
                SR_SE_out_coalesced_delay_2_fifo_r_data5 <= $unsigned(sel_for_coalesced_delay_2_c);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_coalesced_delay_2_fifo_and0 = coalesced_delay_2_fifo_valid_out;
    assign SR_SE_out_coalesced_delay_2_fifo_i_valid = SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_V0 & SR_SE_out_coalesced_delay_2_fifo_and0;
    // Stall signal propagation
    assign SR_SE_out_coalesced_delay_2_fifo_backStall = SR_SE_out_coalesced_delay_2_fifo_r_valid | ~ (SR_SE_out_coalesced_delay_2_fifo_i_valid);

    // Valid
    assign SR_SE_out_coalesced_delay_2_fifo_V = SR_SE_out_coalesced_delay_2_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_2_fifo_r_valid : SR_SE_out_coalesced_delay_2_fifo_i_valid;

    // Data0
    assign SR_SE_out_coalesced_delay_2_fifo_D0 = SR_SE_out_coalesced_delay_2_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_2_fifo_r_data0 : sel_for_coalesced_delay_2_d;
    // Data1
    assign SR_SE_out_coalesced_delay_2_fifo_D1 = SR_SE_out_coalesced_delay_2_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_2_fifo_r_data1 : redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_q;
    // Data2
    assign SR_SE_out_coalesced_delay_2_fifo_D2 = SR_SE_out_coalesced_delay_2_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_2_fifo_r_data2 : redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_q;
    // Data3
    assign SR_SE_out_coalesced_delay_2_fifo_D3 = SR_SE_out_coalesced_delay_2_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_2_fifo_r_data3 : redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_q;
    // Data4
    assign SR_SE_out_coalesced_delay_2_fifo_D4 = SR_SE_out_coalesced_delay_2_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_2_fifo_r_data4 : sel_for_coalesced_delay_2_b;
    // Data5
    assign SR_SE_out_coalesced_delay_2_fifo_D5 = SR_SE_out_coalesced_delay_2_fifo_r_valid == 1'b1 ? SR_SE_out_coalesced_delay_2_fifo_r_data5 : sel_for_coalesced_delay_2_c;

    // SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0(STALLREG,3435)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_r_valid <= 1'b0;
            SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_r_data0 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_r_valid <= SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_backStall & (SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_r_valid | SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_i_valid);

            if (SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_r_data0 <= $unsigned(redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_q);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_i_valid = SE_redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_V1;
    // Stall signal propagation
    assign SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_backStall = SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_r_valid | ~ (SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_i_valid);

    // Valid
    assign SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_V = SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_r_valid == 1'b1 ? SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_r_valid : SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_i_valid;

    assign SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_D0 = SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_r_valid == 1'b1 ? SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_r_data0 : redist78_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_30_0_q;

    // SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0(STALLENABLE,3067)
    // Valid signal propagation
    assign SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_V0 = SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_0;
    assign SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_V1 = SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_1;
    assign SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_V2 = SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_2;
    assign SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_V3 = SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_3;
    // Stall signal propagation
    assign SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_s_tv_0 = SR_SE_out_coalesced_delay_2_fifo_backStall & SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_0;
    assign SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_s_tv_1 = i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_out_stall_out & SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_1;
    assign SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_s_tv_2 = i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_stall_out & SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_2;
    assign SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_s_tv_3 = redist80_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_98_fifo_stall_out & SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_3;
    // Backward Enable generation
    assign SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_or0 = SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_s_tv_0;
    assign SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_or1 = SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_s_tv_1 | SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_or0;
    assign SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_or2 = SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_s_tv_2 | SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_or1;
    assign SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_backEN = ~ (SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_s_tv_3 | SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_or2);
    // Determine whether to write valid data into the first register stage
    assign SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_v_s_0 = SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_backEN & SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_V;
    // Backward Stall generation
    assign SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_backStall = ~ (SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_backEN);
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_0 <= 1'b0;
            SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_1 <= 1'b0;
            SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_2 <= 1'b0;
            SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_3 <= 1'b0;
        end
        else
        begin
            if (SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_backEN == 1'b0)
            begin
                SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_0 <= SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_0 & SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_s_tv_0;
            end
            else
            begin
                SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_0 <= SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_v_s_0;
            end

            if (SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_backEN == 1'b0)
            begin
                SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_1 <= SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_1 & SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_s_tv_1;
            end
            else
            begin
                SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_1 <= SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_v_s_0;
            end

            if (SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_backEN == 1'b0)
            begin
                SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_2 <= SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_2 & SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_s_tv_2;
            end
            else
            begin
                SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_2 <= SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_v_s_0;
            end

            if (SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_backEN == 1'b0)
            begin
                SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_3 <= SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_3 & SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_s_tv_3;
            end
            else
            begin
                SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_R_v_3 <= SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_v_s_0;
            end

        end
    end

    // SE_out_i_llvm_fpga_push_i2_cleanups_push81_conv293(STALLENABLE,2651)
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_push_i2_cleanups_push81_conv293_backStall = $unsigned(1'b0);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_push_i2_cleanups_push81_conv293_wireValid = i_llvm_fpga_push_i2_cleanups_push81_conv293_out_valid_out;

    // i_llvm_fpga_push_i2_cleanups_push81_conv293(BLACKBOX,195)@100
    // in in_stall_in@20000000
    // out out_data_out@101
    // out out_feedback_out_81@20000000
    // out out_feedback_valid_out_81@20000000
    // out out_stall_out@20000000
    // out out_valid_out@101
    conv2_i_llvm_fpga_push_i2_cleanups_push81_0 thei_llvm_fpga_push_i2_cleanups_push81_conv293 (
        .in_data_in(SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_D0),
        .in_feedback_stall_in_81(i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_feedback_stall_out_81),
        .in_keep_going(SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_D1),
        .in_stall_in(SE_out_i_llvm_fpga_push_i2_cleanups_push81_conv293_backStall),
        .in_valid_in(SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_V0),
        .out_data_out(),
        .out_feedback_out_81(i_llvm_fpga_push_i2_cleanups_push81_conv293_out_feedback_out_81),
        .out_feedback_valid_out_81(i_llvm_fpga_push_i2_cleanups_push81_conv293_out_feedback_valid_out_81),
        .out_stall_out(i_llvm_fpga_push_i2_cleanups_push81_conv293_out_stall_out),
        .out_valid_out(i_llvm_fpga_push_i2_cleanups_push81_conv293_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0(REG,2263)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_q <= $unsigned(1'b0);
        end
        else if (SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_backEN == 1'b1)
        begin
            redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_q <= $unsigned(SR_SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_D0);
        end
    end

    // c_i2_1102(CONSTANT,100)
    assign c_i2_1102_q = $unsigned(2'b01);

    // i_llvm_fpga_pop_i2_cleanups_pop81_conv22(BLACKBOX,163)@32
    // in in_stall_in@20000000
    // out out_data_out@33
    // out out_feedback_stall_out_81@20000000
    // out out_stall_out@20000000
    // out out_valid_out@33
    conv2_i_llvm_fpga_pop_i2_cleanups_pop81_0 thei_llvm_fpga_pop_i2_cleanups_pop81_conv22 (
        .in_data_in(c_i2_1102_q),
        .in_dir(redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_q),
        .in_feedback_in_81(i_llvm_fpga_push_i2_cleanups_push81_conv293_out_feedback_out_81),
        .in_feedback_valid_in_81(i_llvm_fpga_push_i2_cleanups_push81_conv293_out_feedback_valid_out_81),
        .in_predicate(GND_q),
        .in_stall_in(SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_backStall),
        .in_valid_in(SE_redist79_conv2_B7_merge_reg_aunroll_x_out_data_out_0_tpl_31_0_V2),
        .out_data_out(i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out),
        .out_feedback_stall_out_81(i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_feedback_stall_out_81),
        .out_stall_out(i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_stall_out),
        .out_valid_out(i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_valid_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_i_llvm_fpga_pop_i2_cleanups_pop81_conv22(BITJOIN,2366)
    assign bubble_join_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_q = i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out;

    // bubble_select_i_llvm_fpga_pop_i2_cleanups_pop81_conv22(BITSELECT,2367)
    assign bubble_select_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_b = $unsigned(bubble_join_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_q[1:0]);

    // i_first_cleanup_conv233_sel_x(BITSELECT,83)@33
    assign i_first_cleanup_conv233_sel_x_b = bubble_select_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_b[0:0];

    // i_first_cleanup_xor_conv273(LOGICAL,116)@33
    assign i_first_cleanup_xor_conv273_q = i_first_cleanup_conv233_sel_x_b ^ VCC_q;

    // SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22(STALLENABLE,2587)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg0 <= '0;
            SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg1 <= '0;
            SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg2 <= '0;
            SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg3 <= '0;
            SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg4 <= '0;
            SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg5 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg0 <= SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_toReg0;
            // Successor 1
            SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg1 <= SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_toReg1;
            // Successor 2
            SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg2 <= SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_toReg2;
            // Successor 3
            SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg3 <= SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_toReg3;
            // Successor 4
            SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg4 <= SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_toReg4;
            // Successor 5
            SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg5 <= SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_toReg5;
        end
    end
    // Input Stall processing
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed0 = (~ (redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_stall_out) & SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_wireValid) | SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg0;
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed1 = (~ (SR_SE_i_arrayidx34_arrayidx64_conv288_backStall) & SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_wireValid) | SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg1;
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed2 = (~ (SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_backStall) & SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_wireValid) | SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg2;
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed3 = (~ (SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_backStall) & SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_wireValid) | SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg3;
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed4 = (~ (redist72_i_first_cleanup_conv233_sel_x_b_67_fifo_stall_out) & SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_wireValid) | SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg4;
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed5 = (~ (redist71_i_first_cleanup_xor_conv273_q_67_fifo_stall_out) & SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_wireValid) | SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg5;
    // Consuming
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_StallValid = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_backStall & SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_wireValid;
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_toReg0 = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_StallValid & SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed0;
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_toReg1 = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_StallValid & SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed1;
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_toReg2 = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_StallValid & SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed2;
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_toReg3 = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_StallValid & SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed3;
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_toReg4 = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_StallValid & SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed4;
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_toReg5 = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_StallValid & SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed5;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_or0 = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed0;
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_or1 = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed1 & SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_or0;
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_or2 = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed2 & SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_or1;
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_or3 = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed3 & SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_or2;
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_or4 = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed4 & SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_or3;
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_wireStall = ~ (SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_consumed5 & SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_or4);
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_backStall = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_wireStall;
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_V0 = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_wireValid & ~ (SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg0);
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_V1 = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_wireValid & ~ (SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg1);
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_V2 = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_wireValid & ~ (SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg2);
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_V3 = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_wireValid & ~ (SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg3);
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_V4 = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_wireValid & ~ (SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg4);
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_V5 = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_wireValid & ~ (SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_fromReg5);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_wireValid = i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_valid_out;

    // redist71_i_first_cleanup_xor_conv273_q_67_fifo(STALLFIFO,2254)
    assign redist71_i_first_cleanup_xor_conv273_q_67_fifo_valid_in = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_V5;
    assign redist71_i_first_cleanup_xor_conv273_q_67_fifo_stall_in = SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_backStall;
    assign redist71_i_first_cleanup_xor_conv273_q_67_fifo_data_in = i_first_cleanup_xor_conv273_q;
    assign redist71_i_first_cleanup_xor_conv273_q_67_fifo_valid_in_bitsignaltemp = redist71_i_first_cleanup_xor_conv273_q_67_fifo_valid_in[0];
    assign redist71_i_first_cleanup_xor_conv273_q_67_fifo_stall_in_bitsignaltemp = redist71_i_first_cleanup_xor_conv273_q_67_fifo_stall_in[0];
    assign redist71_i_first_cleanup_xor_conv273_q_67_fifo_valid_out[0] = redist71_i_first_cleanup_xor_conv273_q_67_fifo_valid_out_bitsignaltemp;
    assign redist71_i_first_cleanup_xor_conv273_q_67_fifo_stall_out[0] = redist71_i_first_cleanup_xor_conv273_q_67_fifo_stall_out_bitsignaltemp;
    acl_data_fifo #(
        .DEPTH(68),
        .STRICT_DEPTH(0),
        .ALLOW_FULL_WRITE(0),
        .DATA_WIDTH(1),
        .IMPL("ram")
    ) theredist71_i_first_cleanup_xor_conv273_q_67_fifo (
        .valid_in(redist71_i_first_cleanup_xor_conv273_q_67_fifo_valid_in_bitsignaltemp),
        .stall_in(redist71_i_first_cleanup_xor_conv273_q_67_fifo_stall_in_bitsignaltemp),
        .data_in(i_first_cleanup_xor_conv273_q),
        .valid_out(redist71_i_first_cleanup_xor_conv273_q_67_fifo_valid_out_bitsignaltemp),
        .stall_out(redist71_i_first_cleanup_xor_conv273_q_67_fifo_stall_out_bitsignaltemp),
        .data_out(redist71_i_first_cleanup_xor_conv273_q_67_fifo_data_out),
        .clock(clock),
        .resetn(resetn)
    );

    // bubble_join_redist71_i_first_cleanup_xor_conv273_q_67_fifo(BITJOIN,2476)
    assign bubble_join_redist71_i_first_cleanup_xor_conv273_q_67_fifo_q = redist71_i_first_cleanup_xor_conv273_q_67_fifo_data_out;

    // bubble_select_redist71_i_first_cleanup_xor_conv273_q_67_fifo(BITSELECT,2477)
    assign bubble_select_redist71_i_first_cleanup_xor_conv273_q_67_fifo_b = $unsigned(bubble_join_redist71_i_first_cleanup_xor_conv273_q_67_fifo_q[0:0]);

    // bubble_join_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo(BITJOIN,2419)
    assign bubble_join_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_q = redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_data_out;

    // bubble_select_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo(BITSELECT,2420)
    assign bubble_select_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_b = $unsigned(bubble_join_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_q[63:0]);

    // SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo(STALLENABLE,3057)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_fromReg0 <= '0;
            SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_fromReg0 <= SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_toReg0;
            // Successor 1
            SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_fromReg1 <= SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_consumed0 = (~ (SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_backStall) & SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_wireValid) | SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_fromReg0;
    assign SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_consumed1 = (~ (SR_SE_out_redist62_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_out_data_out_67_fifo_backStall) & SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_wireValid) | SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_fromReg1;
    // Consuming
    assign SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_StallValid = SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_backStall & SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_wireValid;
    assign SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_toReg0 = SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_StallValid & SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_consumed0;
    assign SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_toReg1 = SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_StallValid & SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_consumed1;
    // Backward Stall generation
    assign SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_or0 = SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_consumed0;
    assign SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_wireStall = ~ (SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_consumed1 & SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_or0);
    assign SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_backStall = SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_wireStall;
    // Valid signal propagation
    assign SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_V0 = SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_wireValid & ~ (SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_fromReg0);
    assign SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_V1 = SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_wireValid & ~ (SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_wireValid = redist71_i_first_cleanup_xor_conv273_q_67_fifo_valid_out;

    // SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo(STALLENABLE,3013)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_fromReg0 <= '0;
            SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_fromReg1 <= '0;
        end
        else
        begin
            // Successor 0
            SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_fromReg0 <= SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_toReg0;
            // Successor 1
            SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_fromReg1 <= SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_toReg1;
        end
    end
    // Input Stall processing
    assign SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_consumed0 = (~ (SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_backStall) & SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_wireValid) | SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_fromReg0;
    assign SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_consumed1 = (~ (SR_SE_in_i_llvm_fpga_push_p1024f32_arrayidx64116_push93_conv264_backStall) & SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_wireValid) | SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_fromReg1;
    // Consuming
    assign SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_StallValid = SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_backStall & SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_wireValid;
    assign SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_toReg0 = SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_StallValid & SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_consumed0;
    assign SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_toReg1 = SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_StallValid & SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_consumed1;
    // Backward Stall generation
    assign SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_or0 = SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_consumed0;
    assign SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_wireStall = ~ (SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_consumed1 & SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_or0);
    assign SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_backStall = SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_wireStall;
    // Valid signal propagation
    assign SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_V0 = SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_wireValid & ~ (SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_fromReg0);
    assign SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_V1 = SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_wireValid & ~ (SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_fromReg1);
    // Computing multiple Valid(s)
    assign SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_wireValid = redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_valid_out;

    // SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x(STALLENABLE,2526)
    // Valid signal propagation
    assign SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_V0 = SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_wireValid;
    // Backward Stall generation
    assign SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_backStall = i_llvm_fpga_mem_memdep_conv2100_out_o_stall | ~ (SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_wireValid = SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_V;

    // SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x(STALLREG,3471)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_valid <= 1'b0;
            SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_data0 <= 64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_data1 <= 1'bx;
            SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_data2 <= 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
        end
        else
        begin
            // Valid
            SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_valid <= SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_backStall & (SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_valid | SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_i_valid);

            if (SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_data0 <= $unsigned(bubble_select_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_b);
                SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_data1 <= $unsigned(bubble_select_redist71_i_first_cleanup_xor_conv273_q_67_fifo_b);
                SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_data2 <= $unsigned(bubble_select_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_b);
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_and0 = i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_out_o_valid;
    assign SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_and1 = SE_out_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_V0 & SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_and0;
    assign SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_i_valid = SE_out_redist71_i_first_cleanup_xor_conv273_q_67_fifo_V0 & SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_and1;
    // Stall signal propagation
    assign SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_backStall = SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_valid | ~ (SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_i_valid);

    // Valid
    assign SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_V = SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_valid == 1'b1 ? SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_valid : SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_i_valid;

    // Data0
    assign SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_D0 = SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_valid == 1'b1 ? SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_data0 : bubble_select_redist48_i_llvm_fpga_pop_p1024f32_arrayidx64116_pop93_conv226_out_data_out_67_fifo_b;
    // Data1
    assign SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_D1 = SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_valid == 1'b1 ? SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_data1 : bubble_select_redist71_i_first_cleanup_xor_conv273_q_67_fifo_b;
    // Data2
    assign SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_D2 = SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_valid == 1'b1 ? SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_r_data2 : bubble_select_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_b;

    // bubble_join_i_llvm_fpga_mem_pn1_conv296(BITJOIN,2295)
    assign bubble_join_i_llvm_fpga_mem_pn1_conv296_q = i_llvm_fpga_mem_pn1_conv296_out_o_readdata;

    // bubble_select_i_llvm_fpga_mem_pn1_conv296(BITSELECT,2296)
    assign bubble_select_i_llvm_fpga_mem_pn1_conv296_b = $unsigned(bubble_join_i_llvm_fpga_mem_pn1_conv296_q[31:0]);

    // bubble_join_i_llvm_fpga_mem_unnamed_conv29_conv295(BITJOIN,2301)
    assign bubble_join_i_llvm_fpga_mem_unnamed_conv29_conv295_q = i_llvm_fpga_mem_unnamed_conv29_conv295_out_o_readdata;

    // bubble_select_i_llvm_fpga_mem_unnamed_conv29_conv295(BITSELECT,2302)
    assign bubble_select_i_llvm_fpga_mem_unnamed_conv29_conv295_b = $unsigned(bubble_join_i_llvm_fpga_mem_unnamed_conv29_conv295_q[31:0]);

    // bubble_join_i_llvm_fpga_mem_unnamed_conv28_conv294(BITJOIN,2298)
    assign bubble_join_i_llvm_fpga_mem_unnamed_conv28_conv294_q = i_llvm_fpga_mem_unnamed_conv28_conv294_out_o_readdata;

    // bubble_select_i_llvm_fpga_mem_unnamed_conv28_conv294(BITSELECT,2299)
    assign bubble_select_i_llvm_fpga_mem_unnamed_conv28_conv294_b = $unsigned(bubble_join_i_llvm_fpga_mem_unnamed_conv28_conv294_q[31:0]);

    // GND(CONSTANT,0)
    assign GND_q = $unsigned(1'b0);

    // i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x(BLACKBOX,94)@65
    // in in_i_stall@20000000
    // out out_c0_exit715_0_tpl@100
    // out out_c0_exit715_1_tpl@100
    // out out_o_stall@20000000
    // out out_o_valid@100
    conv2_i_sfc_s_c0_in_for_body15_s_c0_enter71042_conv298 thei_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x (
        .in_c0_eni3709_0_tpl(GND_q),
        .in_c0_eni3709_1_tpl(bubble_select_i_llvm_fpga_mem_unnamed_conv28_conv294_b),
        .in_c0_eni3709_2_tpl(bubble_select_i_llvm_fpga_mem_unnamed_conv29_conv295_b),
        .in_c0_eni3709_3_tpl(bubble_select_i_llvm_fpga_mem_pn1_conv296_b),
        .in_i_stall(SR_SE_out_i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_backStall),
        .in_i_valid(SE_out_i_llvm_fpga_mem_unnamed_conv29_conv295_V0),
        .out_c0_exit715_0_tpl(),
        .out_c0_exit715_1_tpl(i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_out_c0_exit715_1_tpl),
        .out_o_stall(i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_out_o_stall),
        .out_o_valid(i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_out_o_valid),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_mem_pn1_conv296(BLACKBOX,143)@33
    // in in_i_stall@20000000
    // out out_o_readdata@65
    // out out_o_stall@20000000
    // out out_o_valid@65
    // out out_pn1_conv2_avm_address@20000000
    // out out_pn1_conv2_avm_burstcount@20000000
    // out out_pn1_conv2_avm_byteenable@20000000
    // out out_pn1_conv2_avm_enable@20000000
    // out out_pn1_conv2_avm_read@20000000
    // out out_pn1_conv2_avm_write@20000000
    // out out_pn1_conv2_avm_writedata@20000000
    conv2_i_llvm_fpga_mem_pn1_0 thei_llvm_fpga_mem_pn1_conv296 (
        .in_flush(in_flush),
        .in_i_address(SR_SE_i_arrayidx34_arrayidx64_conv288_D0),
        .in_i_dependence(SR_SE_i_arrayidx34_arrayidx64_conv288_D1),
        .in_i_predicate(SR_SE_i_arrayidx34_arrayidx64_conv288_D2),
        .in_i_stall(SE_out_i_llvm_fpga_mem_unnamed_conv29_conv295_backStall),
        .in_i_valid(SE_i_arrayidx34_arrayidx64_conv288_V0),
        .in_pn1_conv2_avm_readdata(in_pn1_conv2_avm_readdata),
        .in_pn1_conv2_avm_readdatavalid(in_pn1_conv2_avm_readdatavalid),
        .in_pn1_conv2_avm_waitrequest(in_pn1_conv2_avm_waitrequest),
        .in_pn1_conv2_avm_writeack(in_pn1_conv2_avm_writeack),
        .out_o_readdata(i_llvm_fpga_mem_pn1_conv296_out_o_readdata),
        .out_o_stall(i_llvm_fpga_mem_pn1_conv296_out_o_stall),
        .out_o_valid(i_llvm_fpga_mem_pn1_conv296_out_o_valid),
        .out_pn1_conv2_avm_address(i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_address),
        .out_pn1_conv2_avm_burstcount(i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_burstcount),
        .out_pn1_conv2_avm_byteenable(i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_byteenable),
        .out_pn1_conv2_avm_enable(i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_enable),
        .out_pn1_conv2_avm_read(i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_read),
        .out_pn1_conv2_avm_write(i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_write),
        .out_pn1_conv2_avm_writedata(i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_writedata),
        .clock(clock),
        .resetn(resetn)
    );

    // i_llvm_fpga_mem_unnamed_conv29_conv295(BLACKBOX,145)@33
    // in in_i_stall@20000000
    // out out_o_readdata@65
    // out out_o_stall@20000000
    // out out_o_valid@65
    // out out_unnamed_conv29_conv2_avm_address@20000000
    // out out_unnamed_conv29_conv2_avm_burstcount@20000000
    // out out_unnamed_conv29_conv2_avm_byteenable@20000000
    // out out_unnamed_conv29_conv2_avm_enable@20000000
    // out out_unnamed_conv29_conv2_avm_read@20000000
    // out out_unnamed_conv29_conv2_avm_write@20000000
    // out out_unnamed_conv29_conv2_avm_writedata@20000000
    conv2_i_llvm_fpga_mem_unnamed_9_conv20 thei_llvm_fpga_mem_unnamed_conv29_conv295 (
        .in_flush(in_flush),
        .in_i_address(SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_D0),
        .in_i_dependence(SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_D1),
        .in_i_predicate(SR_SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_D2),
        .in_i_stall(SE_out_i_llvm_fpga_mem_unnamed_conv29_conv295_backStall),
        .in_i_valid(SE_i_arrayidx32_conv20_dupName_2_add_x_BitJoin_for_q_V0),
        .in_unnamed_conv29_conv2_avm_readdata(in_unnamed_conv29_conv2_avm_readdata),
        .in_unnamed_conv29_conv2_avm_readdatavalid(in_unnamed_conv29_conv2_avm_readdatavalid),
        .in_unnamed_conv29_conv2_avm_waitrequest(in_unnamed_conv29_conv2_avm_waitrequest),
        .in_unnamed_conv29_conv2_avm_writeack(in_unnamed_conv29_conv2_avm_writeack),
        .out_o_readdata(i_llvm_fpga_mem_unnamed_conv29_conv295_out_o_readdata),
        .out_o_stall(i_llvm_fpga_mem_unnamed_conv29_conv295_out_o_stall),
        .out_o_valid(i_llvm_fpga_mem_unnamed_conv29_conv295_out_o_valid),
        .out_unnamed_conv29_conv2_avm_address(i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_address),
        .out_unnamed_conv29_conv2_avm_burstcount(i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_burstcount),
        .out_unnamed_conv29_conv2_avm_byteenable(i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_byteenable),
        .out_unnamed_conv29_conv2_avm_enable(i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_enable),
        .out_unnamed_conv29_conv2_avm_read(i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_read),
        .out_unnamed_conv29_conv2_avm_write(i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_write),
        .out_unnamed_conv29_conv2_avm_writedata(i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_writedata),
        .clock(clock),
        .resetn(resetn)
    );

    // SE_out_i_llvm_fpga_mem_unnamed_conv29_conv295(STALLENABLE,2551)
    // Valid signal propagation
    assign SE_out_i_llvm_fpga_mem_unnamed_conv29_conv295_V0 = SE_out_i_llvm_fpga_mem_unnamed_conv29_conv295_wireValid;
    // Backward Stall generation
    assign SE_out_i_llvm_fpga_mem_unnamed_conv29_conv295_backStall = i_sfc_s_c0_in_for_body15_conv2s_c0_enter71042_conv298_aunroll_x_out_o_stall | ~ (SE_out_i_llvm_fpga_mem_unnamed_conv29_conv295_wireValid);
    // Computing multiple Valid(s)
    assign SE_out_i_llvm_fpga_mem_unnamed_conv29_conv295_and0 = i_llvm_fpga_mem_unnamed_conv29_conv295_out_o_valid;
    assign SE_out_i_llvm_fpga_mem_unnamed_conv29_conv295_and1 = i_llvm_fpga_mem_unnamed_conv28_conv294_out_o_valid & SE_out_i_llvm_fpga_mem_unnamed_conv29_conv295_and0;
    assign SE_out_i_llvm_fpga_mem_unnamed_conv29_conv295_wireValid = i_llvm_fpga_mem_pn1_conv296_out_o_valid & SE_out_i_llvm_fpga_mem_unnamed_conv29_conv295_and1;

    // i_arrayidx24_conv20_dupName_1_add_x_p2_of_2(ADD,1805)@32 + 1
    assign i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_cin = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_D2;
    assign i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_a = { {1'b0, SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_D0}, 1'b1 };
    assign i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_b = { {1'b0, SR_SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_D1}, i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_cin[0] };
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_o <= 15'b0;
        end
        else if (SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_backEN == 1'b1)
        begin
            i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_o <= $unsigned(i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_a) + $unsigned(i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_b);
        end
    end
    assign i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_q = i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_o[13:1];

    // redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0(REG,2207)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_q <= $unsigned(52'b0000000000000000000000000000000000000000000000000000);
        end
        else if (SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_backEN == 1'b1)
        begin
            redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_q <= $unsigned(SR_SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_D0);
        end
    end

    // i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q(BITJOIN,1806)@33
    assign i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_q = {i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_q, redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_q};

    // i_arrayidx24_conv20_dupName_4_trunc_sel_x(BITSELECT,22)@33
    assign i_arrayidx24_conv20_dupName_4_trunc_sel_x_b = i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_q[63:0];

    // SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q(STALLREG,3467)
    always @ (posedge clock or negedge resetn)
    begin
        if (!resetn)
        begin
            SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_valid <= 1'b0;
            SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_data0 <= 64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
            SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_data1 <= 1'bx;
            SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_data2 <= 1'bx;
        end
        else
        begin
            // Valid
            SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_valid <= SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_backStall & (SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_valid | SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_i_valid);

            if (SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_valid == 1'b0)
            begin
                // Data(s)
                SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_data0 <= i_arrayidx24_conv20_dupName_4_trunc_sel_x_b;
                SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_data1 <= i_reduction_conv2_4_conv292_q;
                SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_data2 <= i_first_cleanup_xor_conv273_q;
            end

        end
    end
    // Computing multiple Valid(s)
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_and0 = SE_i_arrayidx24_conv20_dupName_1_add_x_p2_of_2_V0;
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_and1 = SE_redist26_i_arrayidx24_conv20_dupName_1_add_x_p1_of_2_q_1_0_V0 & SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_and0;
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_and2 = SE_out_i_llvm_fpga_pop_i2_cleanups_pop81_conv22_V2 & SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_and1;
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_i_valid = SE_out_i_llvm_fpga_pop_i1_memdep_phi_pop79_conv26_V1 & SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_and2;
    // Stall signal propagation
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_backStall = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_valid | ~ (SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_i_valid);

    // Valid
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_V = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_valid : SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_i_valid;

    // Data0
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_D0 = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_data0 : i_arrayidx24_conv20_dupName_4_trunc_sel_x_b;
    // Data1
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_D1 = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_data1 : i_reduction_conv2_4_conv292_q;
    // Data2
    assign SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_D2 = SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_valid == 1'b1 ? SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_r_data2 : i_first_cleanup_xor_conv273_q;

    // i_llvm_fpga_mem_unnamed_conv28_conv294(BLACKBOX,144)@33
    // in in_i_stall@20000000
    // out out_o_readdata@65
    // out out_o_stall@20000000
    // out out_o_valid@65
    // out out_unnamed_conv28_conv2_avm_address@20000000
    // out out_unnamed_conv28_conv2_avm_burstcount@20000000
    // out out_unnamed_conv28_conv2_avm_byteenable@20000000
    // out out_unnamed_conv28_conv2_avm_enable@20000000
    // out out_unnamed_conv28_conv2_avm_read@20000000
    // out out_unnamed_conv28_conv2_avm_write@20000000
    // out out_unnamed_conv28_conv2_avm_writedata@20000000
    conv2_i_llvm_fpga_mem_unnamed_8_conv20 thei_llvm_fpga_mem_unnamed_conv28_conv294 (
        .in_flush(in_flush),
        .in_i_address(SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_D0),
        .in_i_dependence(SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_D1),
        .in_i_predicate(SR_SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_D2),
        .in_i_stall(SE_out_i_llvm_fpga_mem_unnamed_conv29_conv295_backStall),
        .in_i_valid(SE_i_arrayidx24_conv20_dupName_1_add_x_BitJoin_for_q_V0),
        .in_unnamed_conv28_conv2_avm_readdata(in_unnamed_conv28_conv2_avm_readdata),
        .in_unnamed_conv28_conv2_avm_readdatavalid(in_unnamed_conv28_conv2_avm_readdatavalid),
        .in_unnamed_conv28_conv2_avm_waitrequest(in_unnamed_conv28_conv2_avm_waitrequest),
        .in_unnamed_conv28_conv2_avm_writeack(in_unnamed_conv28_conv2_avm_writeack),
        .out_o_readdata(i_llvm_fpga_mem_unnamed_conv28_conv294_out_o_readdata),
        .out_o_stall(i_llvm_fpga_mem_unnamed_conv28_conv294_out_o_stall),
        .out_o_valid(i_llvm_fpga_mem_unnamed_conv28_conv294_out_o_valid),
        .out_unnamed_conv28_conv2_avm_address(i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_address),
        .out_unnamed_conv28_conv2_avm_burstcount(i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_burstcount),
        .out_unnamed_conv28_conv2_avm_byteenable(i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_byteenable),
        .out_unnamed_conv28_conv2_avm_enable(i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_enable),
        .out_unnamed_conv28_conv2_avm_read(i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_read),
        .out_unnamed_conv28_conv2_avm_write(i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_write),
        .out_unnamed_conv28_conv2_avm_writedata(i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_writedata),
        .clock(clock),
        .resetn(resetn)
    );

    // dupName_0_ext_sig_sync_out_x(GPOUT,9)
    assign out_unnamed_conv28_conv2_avm_address = i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_address;
    assign out_unnamed_conv28_conv2_avm_enable = i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_enable;
    assign out_unnamed_conv28_conv2_avm_read = i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_read;
    assign out_unnamed_conv28_conv2_avm_write = i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_write;
    assign out_unnamed_conv28_conv2_avm_writedata = i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_writedata;
    assign out_unnamed_conv28_conv2_avm_byteenable = i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_byteenable;
    assign out_unnamed_conv28_conv2_avm_burstcount = i_llvm_fpga_mem_unnamed_conv28_conv294_out_unnamed_conv28_conv2_avm_burstcount;

    // bubble_join_redist47_i_masked_conv287_q_31_fifo(BITJOIN,2416)
    assign bubble_join_redist47_i_masked_conv287_q_31_fifo_q = redist47_i_masked_conv287_q_31_fifo_data_out;

    // bubble_select_redist47_i_masked_conv287_q_31_fifo(BITSELECT,2417)
    assign bubble_select_redist47_i_masked_conv287_q_31_fifo_b = $unsigned(bubble_join_redist47_i_masked_conv287_q_31_fifo_q[0:0]);

    // dupName_0_sync_out_x(GPOUT,10)@131
    assign out_exitcond19137_pop104 = bubble_select_i_llvm_fpga_pop_i1_exitcond19137_pop104_conv213_b;
    assign out_exitcond22128_pop97 = bubble_select_i_llvm_fpga_pop_i1_exitcond22128_pop97_conv230_b;
    assign out_exitcond25119_pop94 = bubble_select_i_llvm_fpga_pop_i1_exitcond25119_pop94_conv227_b;
    assign out_exitcond2891_pop86 = bubble_select_i_llvm_fpga_pop_i1_exitcond2891_pop86_conv220_b;
    assign out_exitcond3171_pop82 = bubble_select_i_llvm_fpga_pop_i1_exitcond3171_pop82_conv216_b;
    assign out_masked = bubble_select_redist47_i_masked_conv287_q_31_fifo_b;
    assign out_memdep = bubble_select_i_llvm_fpga_mem_memdep_conv2100_b;
    assign out_notcmp36138_pop105 = bubble_select_i_llvm_fpga_pop_i1_notcmp36138_pop105_conv214_b;
    assign out_notcmp41130_pop98 = bubble_select_i_llvm_fpga_pop_i1_notcmp41130_pop98_conv231_b;
    assign out_notcmp46122_pop95 = bubble_select_i_llvm_fpga_pop_i1_notcmp46122_pop95_conv228_b;
    assign out_notcmp5195_pop87 = bubble_select_i_llvm_fpga_pop_i1_notcmp5195_pop87_conv221_b;
    assign out_notcmp5676_pop83 = bubble_select_i_llvm_fpga_pop_i1_notcmp5676_pop83_conv217_b;
    assign out_valid_out = SE_out_bubble_out_i_llvm_fpga_pop_i4_fpga_indvars_iv_pop77_conv27_1_V0;

    // dupName_1_ext_sig_sync_out_x(GPOUT,12)
    assign out_unnamed_conv29_conv2_avm_address = i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_address;
    assign out_unnamed_conv29_conv2_avm_enable = i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_enable;
    assign out_unnamed_conv29_conv2_avm_read = i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_read;
    assign out_unnamed_conv29_conv2_avm_write = i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_write;
    assign out_unnamed_conv29_conv2_avm_writedata = i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_writedata;
    assign out_unnamed_conv29_conv2_avm_byteenable = i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_byteenable;
    assign out_unnamed_conv29_conv2_avm_burstcount = i_llvm_fpga_mem_unnamed_conv29_conv295_out_unnamed_conv29_conv2_avm_burstcount;

    // dupName_2_ext_sig_sync_out_x(GPOUT,14)
    assign out_pn1_conv2_avm_address = i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_address;
    assign out_pn1_conv2_avm_enable = i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_enable;
    assign out_pn1_conv2_avm_read = i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_read;
    assign out_pn1_conv2_avm_write = i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_write;
    assign out_pn1_conv2_avm_writedata = i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_writedata;
    assign out_pn1_conv2_avm_byteenable = i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_byteenable;
    assign out_pn1_conv2_avm_burstcount = i_llvm_fpga_mem_pn1_conv296_out_pn1_conv2_avm_burstcount;

    // dupName_3_ext_sig_sync_out_x(GPOUT,15)
    assign out_memdep_conv2_avm_address = i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_address;
    assign out_memdep_conv2_avm_enable = i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_enable;
    assign out_memdep_conv2_avm_read = i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_read;
    assign out_memdep_conv2_avm_write = i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_write;
    assign out_memdep_conv2_avm_writedata = i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_writedata;
    assign out_memdep_conv2_avm_byteenable = i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_byteenable;
    assign out_memdep_conv2_avm_burstcount = i_llvm_fpga_mem_memdep_conv2100_out_memdep_conv2_avm_burstcount;

    // dupName_4_ext_sig_sync_out_x(GPOUT,16)
    assign out_lsu_memdep_o_active = i_llvm_fpga_mem_memdep_conv2100_out_lsu_memdep_o_active;

    // ext_sig_sync_out(GPOUT,108)
    assign out_aclp_to_limiter_i_llvm_fpga_pipeline_keep_going_conv23_exiting_valid_out = i_llvm_fpga_pipeline_keep_going_conv23_out_exiting_valid_out;
    assign out_aclp_to_limiter_i_llvm_fpga_pipeline_keep_going_conv23_exiting_stall_out = i_llvm_fpga_pipeline_keep_going_conv23_out_exiting_stall_out;

    // pipeline_valid_out_sync(GPOUT,368)
    assign out_pipeline_valid_out = i_llvm_fpga_pipeline_keep_going_conv23_out_pipeline_valid_out;

    // sync_out(GPOUT,375)@0
    assign out_stall_out = SE_stall_entry_backStall;

endmodule
